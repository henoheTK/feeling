{"version":3,"sources":["Firebase/Firebase.js","miserarenaiyo.js","IconRender.js","NavBar/NavBar.js","Room/Stages/StageIcon/IconAccessory/ReActions.js","Room/Stages/StageIcon/IconAccessory/NewComment.js","Room/Stages/StageIcon/IconAccessory/ReActionButtons.js","Room/Stages/StageIcon/StageIcon.js","Room/Stages/Nomal/Nomal.js","Room/Stages/CommetForm/CommentForm.js","IconRandomMove.js","Room/Stages/Stage.js","CollectionDelete.js","Room/RoomHeader/RoomHeader.js","Room/Room.js","Room/Comments/Comments.js","UserSettings/UserInfo/MakeIcon/IconData.js","UserSettings/UserInfo/MakeIcon/PartsSelect/PartsSelect.js","UserSettings/UserInfo/MakeIcon/MakeIcon.js","UserSettings/NoLogin.js","App.js","UserSettings/UserInfo/LoggedIn.js","UserSettings/UserSettings.js","Main/RoomForm/RoomForm.js","Main/Rooms/Rooms.js","Main/Main.js","Error/Error.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","emoteParts","Icon","props","Parts","parts","path","rot","info","emotion","indexOf","parseInt","className","where","src","style","height","iconSize","width","top","left","position","transform","Object","entries","iconInfo","map","NavBar","useContext","userContext","isOnline","userId","userInfo","useState","allrooms","setAllRooms","nowRoom","setNowRoom","useEffect","collection","doc","get","then","exists","id","data","update","room","length","FieldPath","documentId","roomInfos","existsRoom","empty","rooms","docs","forEach","push","catch","error","console","log","type","data-toggle","data-target","href","role","aria-expanded","value","ReActions","reActions","stageContext","renderId","element","NewComment","newComment","ReActionButtons","roomContext","reActionAPI","e","reAction","target","dataset","name","toUserId","user","add","from","to","timeStamp","FieldValue","serverTimestamp","setTimeout","delete","onClick","data-name","data-user","StageIcon","emotions","renderInfo","Nomal","members","keys","m","index","Form","setEmotions","commentAPI","content","document","getElementById","roomId","userName","set","body","addEventListener","event","key","ctrlKey","emoteAPI","emote","kind","data-kind","maxLength","getRandomInt","max","Math","floor","random","randomMoveTimer","object","time","setInterval","topmax","leftmax","originalSizeRot","window","getComputedStyle","getPropertyValue","substr","split","slice","randomMove","createContext","Stage","icons","splitSize","setNewComment","setActions","a","now","Date","before5min_unix","getTime","onSnapshot","emoteIds","emotes","i","emoteUnsubscribe","before6sec_unix","newCommentIds","newCommentUnsubscribe","before5sec_unix","reActionIds","reActionDatas","emotionData","newCommentData","reActionData","moveTimer","timers","clearInterval","iconparts","getElementsByClassName","IconMove","timer","Provider","defaultSize","innerHeight","stageRadius","CommentForm","deleteRoomSubCollection","subCollection","deleteDocs","batchIndex","operationCounter","batchArray","batch","ref","commit","RoomHeader","madeUserName","madeTime","madeUserId","confirm","r","Room","setRoom","isRoom","setIsRoom","comments","setComments","setSplitSize","setMembers","location","pathname","arrayUnion","d","toDate","roomData","roomName","stageId","getFullYear","getMonth","getDate","roomUnsubscribe","orderBy","commentIds","commentsUnsubscribe","memberIds","infos","memberId","displayName","oneWord","memberUnsubscribe","commentsData","membersData","minSize","maxSize","Comments","scrollIntoView","comment","toString","partsData","Kinds","displayKind","imgsInfo","posX","posY","sizeX","sizeY","GetImgsInfoEach","partsName","eachPram","partsSizeMaxMin","min","GetSizeMax","GetSizeMin","partsSizeNow","SetSizeXYNow","partsRotMaxMin","GetRotMax","GetRotMin","partsRotNow","SetRotNow","PartsSelect","makeIconContext","setNowKind","nowName","nowKind","activeElement","classList","contains","remove","imgPath","MakeIcon","setNowName","nowSize","setNowSize","nowRot","setNowRot","values","partInfo","img","createElement","attach","facekind","sizeTimer","sizex","sizey","x","y","appendChild","SetImgsInfoAll","rotTimer","inputRotSet","nextRot","input","inputRot","maxRot","minRot","inputSizeSet","nextSize","inputSize","onMouseMove","mouseX","clientX","mouseY","clientY","onMouseLeave","display","onMouseEnter","clientRect","getBoundingClientRect","px","pageXOffset","py","pageYOffset","zIndex","cursor","pointerEvents","onInput","clearTimeout","defaultValue","GetRotNow","NoLogin","setUserId","setIsOnline","setUserName","logoutFromGoogle","auth","signOut","isFirst","setPersistence","Auth","Persistence","LOCAL","provider","GoogleAuthProvider","signInWithPopup","result","uid","iconinfo","email","alert","bind","this","Loggedin","onChange","newDisplayName","newOneWordName","reload","UserSettings","setUserInfo","RoomForm","htmlFor","StageId","Rooms","setRooms","col","roomids","postCol","roomsData","Main","Error","App","seclet","secletdata","userInfoUnsubscribe","getUserInfo","onAuthStateChanged","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.c0f7dca3.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { firebaseConfig } from '../miserarenaiyo';\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport default firebase;\nexport const db = firebase.firestore();","const googleauthConfig ={\n  apiKey   : 'dXGX0dsR2bTIVrRCPpAlBIu2',\n  clientId :'349007819425-dtm4orbqjr4ms1jp4rcothk9udk1nsoj.apps.googleusercontent.com'\n}\nconst firebaseConfig = {\n  apiKey            : \"AIzaSyBKyumc6NOpVRBhKbXxz06lN0HP5xztT8Y\",\n  authDomain        : \"emoichat-300700.firebaseapp.com\",\n  projectId         : \"emoichat-300700\",\n  storageBucket     : \"emoichat-300700.appspot.com\",\n  messagingSenderId : \"349007819425\",\n  appId             : \"1:349007819425:web:3b35c57290d3aac32d36e0\",\n  measurementId     : \"G-8HGXFZXEQT\"\n};\nexport {googleauthConfig,firebaseConfig}; ","import React, { Component, createContext,useContext,useState } from 'react';\n\n// 感情の変化させるパーツの配列。\nconst emoteParts={\n  'happy':[\n    'leftEye','rightEye','mouth'\n  ],\n  'angry':[\n    'leftEye','rightEye','mouth'\n  ],\n  'naki':[\n    'leftEye','rightEye','mouth'\n  ],\n  'yurei':[\n    'leftEye','rightEye','mouth'\n  ],\n  'thinking':[\n    'leftEye','rightEye','mouth'\n  ],\n  'henoheno':[\n    'leftEye','rightEye','mouth','nose','face'\n  ]\n}\n\n// propsはiconInfoとiconSize、emotion、where。\nconst Icon=(props)=>{\n  const Parts=(parts)=>{\n    const info=parts.info;\n    // 感情がある場合にはその感情のパス、ない場合は保存されてるパスを渡す。\n    let path;\n    //rotは、感情がある場合0で渡す\n    let rot;\n    if(props.emotion!=='null'&&props.emotion&&emoteParts[props.emotion].indexOf(info[0])!==-1){\n      path=\"../images/icon/\"+props.emotion+\"_\"+info[0]+\".png\";\n      rot=0;\n    }else{\n      path=\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\";\n      rot=parseInt(info[1][\"rot\"]);\n    }\n    return(\n      <img key={info[0]} className={props.where+\"-iconparts \"+info[0]} src={path} style={{\n        height  : (info[1][\"sizeY\"] / 300) * props.iconSize + \"px\" ,\n        width   : (info[1][\"sizeX\"] / 300) * props.iconSize + \"px\" ,\n        top     : (info[1][\"posY\"]  / 300) * props.iconSize + \"px\" ,\n        left    : (info[1][\"posX\"]  / 300) * props.iconSize + \"px\" ,\n        position :\"absolute\" , \n        transform:\"rotate(\"+rot+\"deg)\",\n      }} />\n    )\n  }\n  return (\n    <div className={props.where+\"-icon\"} style={{position:\"relative\", height:props.iconSize+\"px\", width:props.iconSize+\"px\"}}>\n      {Object.entries(props.iconInfo).map(info => (\n        <Parts key={info[0]} info={info}></Parts>\n      ))}  \n    </div>\n  );\n}\n\nexport default Icon;\n","import React,{ useContext,useEffect,useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../App';\nimport firebase, {db} from '../Firebase/Firebase'\nimport Icon from '../IconRender';\nimport './navbar.css'\n\nfunction NavBar() {\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  const [allrooms,setAllRooms] =useState(null);\n  const [nowRoom,setNowRoom] =useState(null);\n  \n  useEffect(()=>{\n    \n    if(userInfo){\n      // 一番最後に入ったルームのルーム名取得。\n      if(userInfo['room']){\n        db.collection('rooms').doc(userInfo['room']).get().then((doc)=>{\n          if(doc.exists){\n            setNowRoom([doc.id,doc.data()['roomName']]);\n          }else{\n            // そのルームが存在しないならnullに。削除されたとき対策\n            db.collection('users').doc(userId).update({\n              room : null\n            })\n          }\n        })\n      }\n      // 入室しているルームを取得\n      if(userInfo['rooms'].length!==0){\n        db.collection('rooms').where(firebase.firestore.FieldPath.documentId(),'in',userInfo['rooms']).get().then((doc)=>{\n        let roomInfos={};\n        let existsRoom=[];\n        if(!doc.empty){\n          doc.docs.forEach((room)=>{\n            if(room.exists){\n              roomInfos[room.id]=room.data()['roomName'];\n              existsRoom.push(room.id);\n            }\n          });\n          setAllRooms(roomInfos);\n          if(existsRoom.length!==userInfo['rooms'].length){\n            db.collection('users').doc(userId).update({\n              rooms:existsRoom\n            })\n          }\n        }else{\n          setAllRooms(false);\n          db.collection('users').doc(userId).update({\n            rooms:[]\n          })\n        }\n      }).catch((error)=>{\n        console.log('Error:'+error)\n      })\n    }else{\n      setAllRooms(false);\n    }\n  }\n  },[userInfo]);\n  return (\n    <nav className=\"navbar navbar-default\" style={{'margin':'0px'}}>\n      <div className=\"container-fluid\">\n\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n\t\t\t\t\t\t<span className=\"sr-only\">Toggle navigation</span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"/\">エモいチャット。</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\t\t\t\t\t<ul className=\"nav navbar-nav\">\n            \n            <li className=\"\"><a href=\"/\">ホーム<span className=\"sr-only\">(current)</span></a></li>\n\t\t\t\t\t\t\n            {nowRoom!==null&&\n              <li className=\"\"><a href={\"/room/\"+nowRoom[0]}>{nowRoom[1]}<span className=\"sr-only\">(current)</span></a></li>\n            }\n\t\t\t\t\t\t<li className=\"dropdown\">\n              <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">ルームs <span className=\"caret\"></span></a>\n              <ul className=\"dropdown-menu\" role=\"menu\">\n                  <li>へのへの</li>\n                  {allrooms===false &&\n                    <li><p>まだ入室しているルームがありません</p></li>\n                  }\n                  {allrooms!==null && allrooms!==false &&\n                    Object.entries(allrooms).map((value)=>(\n                     <li key={value[0]}><a href={\"/room/\"+value[0]}>{value[1]}</a></li>\n                     //console.log(value)\n                    ))\n                  }\n\t\t\t\t\t\t  \t</ul>\n\t\t\t\t\t\t  </li>\n          </ul>\n\t\t\t\t\t{/*検索機能はいったんコメントアウト\n          <form className=\"navbar-form navbar-left\" role=\"search\">\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-default\">Submit</button>\n          </form>\n          */}\n          {isOnline===true &&\n\t\t\t\t\t  <ul className=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t  \t<li id=\"userInfo-li\"  href=\"/userSetting\">\n                <a id='infoLink-icon' href=\"/userSetting\"></a>\n                <div href=\"/userSetting\"  className='iconMask barMask'>\n                  {userInfo !== null&&\n                    <Icon iconInfo={userInfo['iconinfo']} where=\"header\" iconSize=\"50\" />\n                  }\n                  <h6 id=\"icon-loading-text\">loading icon...</h6>\n                </div>\n              </li>\n\t\t\t\t\t  </ul>\n          }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n  );\n}\n//<Icon iconInfo={}></Icon>\n            \nexport default NavBar;\n","import React,{useContext} from 'react';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst ReActions = (props) =>{\n  const {reActions}=useContext(stageContext);\n\n  return(\n    <div id=\"\" className=\"reActions icon-acce\">\n      {console.log(props.renderId,reActions)}\n      {reActions[props.renderId].map(element => (\n        <div key={element['id']}>\n          <img src={\"../../../../../images/reactions/\"+element['name']+\".png\"} className=\"reactionImg\"></img>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ReActions;","import React,{useContext} from 'react';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst NewComment = (props) =>{\n  const {newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"balloon1 icon-acce top\"  key={props.renderId}>\n      <div className=\"balloon1-text\">\n        <p>{newComment[props.renderId]}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NewComment;","import React, { useContext } from 'react';\nimport firebase,{db} from '../../../../Firebase/Firebase';\nimport {roomContext} from '../../../Room';\nimport {userContext} from '../../../../App';\nimport './iconacce.css'\n\nconst ReActionButtons = (props) =>{\n  const {room} = useContext(roomContext)\n  const {userId} = useContext(userContext)\n\n  const reActionAPI= (e)=>{\n    const reAction=e.target.dataset.name;\n    const toUserId=e.target.dataset.user;\n    console.log(reAction,toUserId);\n      db.collection('rooms').doc(room['id']).collection('reActions').add({\n      name      : reAction,\n      from      : userId,\n      to        : toUserId,\n      timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n    }).then((doc)=>{\n      setTimeout(function(){\n        db.collection('rooms').doc(room['id']).collection('reActions').doc(doc.id).delete();\n      }, 3000);\n    }).catch((error)=>{\n      console.log(error);\n    })\n  }\n  return(\n    <div className=\"icon-acce reActionbuttons\">\n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"good\" data-user={props.renderId}>good</button>  \n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"kusa\" data-user={props.renderId}>草</button>  \n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"question\" data-user={props.renderId}>？</button>  \n    </div>\n  )\n}\n\nexport default ReActionButtons;","import React,{useContext} from 'react';\nimport {userContext} from '../../../App';\nimport {stageContext} from '../Stage';\nimport Icon from '../../../IconRender'\nimport ReActions from './IconAccessory/ReActions'\nimport NewComment from './IconAccessory/NewComment';\nimport ReActionButtons from './IconAccessory/ReActionButtons';\nimport firebase, {db} from '../../../Firebase/Firebase'\nimport './IconAccessory/iconacce.css';\n\nconst StageIcon = (props) => {\n  const {userId} = useContext(userContext);\n  const {emotions,reActions,newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"stageIcon\">\n      {console.log(props.renderInfo)}\n      {props.renderInfo[0] !== userId && // ディスプレイネームを表示\n        <h3 className=\"stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {props.renderInfo[0] === userId && // 自分ならselfMaskクラスを追加したやつを描画\n        <h3 className=\"self-mark stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {newComment===null&&\n        <p className=\"icon-acce\">Loading NewComment...</p>\n      }\n      {newComment!==null&&\n        newComment[props.renderInfo[0]]&& // 新しいコメントがあるなら、新しいコメントを描画\n          <NewComment renderId={props.renderInfo[0]}/>\n      }\n      <Icon iconInfo={props.renderInfo[1]['iconInfo']} iconSize={200} emotion={emotions[props.renderInfo[0]]} where=\"stage\"/> \n      {props.renderInfo[0] !==userId && // 自分でないならアクションのボタンを描画\n        <ReActionButtons renderId={props.renderInfo[0]}/>\n      }\n      {reActions===null&&\n        <p className=\"icon-acce\">Loading Actions...</p>\n      }\n      {reActions!==null&&\n        reActions[props.renderInfo[0]]&&\n          <ReActions renderId={props.renderInfo[0]}/>\n      }\n    </div>\n  );\n}\n\nexport default StageIcon;","\nimport React, {Timestamp,useEffect, useContext} from 'react';\n\nimport './nomal.css';\nimport StageIcon from '../StageIcon/StageIcon'\nimport { roomContext } from '../../Room';\n\nfunction Nomal(props){\n  const {members,room} = useContext(roomContext);\n\n  return (\n    <div id=\"nomal\">\n      {console.log(Object.keys(members),room,members,room['members'],room['members'],room['members'][0],members[room['members'][0]])}\n      {Object.keys(members).map((m,index)=>(\n        <div key={'icondiv'+index} className='icondiv'>\n          <StageIcon renderInfo={[room['members'][index],members[room['members'][index]]]}/>\n        </div>\n      ))\n      }\n    </div>\n  );\n}\n\n\nexport default Nomal;\n\n","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport {roomContext} from '../../Room';\nimport { stageContext } from '../Stage';\nimport {userContext} from '../../../App';\nimport firebase, {db} from '../../../Firebase/Firebase'\n\n\n\nconst Form=()=>{\n  const {room}=useContext(roomContext);\n  const {emotions,setEmotions}=useContext(stageContext);\n  const {userId,userInfo}=useContext(userContext);\n  useEffect(()=>{\n    // スペースキーが押されたら投稿\n    document.body.addEventListener('keydown',\n    event => {\n      if (event.key === 'Enter' && event.ctrlKey) {\n          commentAPI();\n      }\n    });  \n  },[]);\n\n  // コメント投稿のAPI\n  function commentAPI (){  \n    let content=document.getElementById('inputComment').value;\n    // 0文字より多く、300文字より少なく入力されているなら\n    if(content.length>0&&content.length<=300){\n      let roomId=room['id'];\n      let emotion;\n      if(emotions[userId]){\n        emotion=emotions[userId];  \n      }else{\n        emotion=null;\n      }\n      db.collection('rooms').doc(roomId).collection('comments').add({\n        content   : content,\n        userId    : userId,\n        userName  : userInfo['displayName'],\n        emotion   : emotion,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n      db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).set({\n        content   : content,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      }).then(()=>{\n        // フォームの中身をなくす\n        document.getElementById('inputComment').value='';\n        // 6秒後にステージ用のコメントを消す。\n        setTimeout(function(){\n          db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).delete();\n        }, 6000)}\n      )\n    }\n  }\n  // エモートのAPI\n  const emoteAPI= (e)=>{\n    const emote=e.target.dataset.kind;\n    console.log(emote);\n    if(emote===null){\n      db.collection.doc(room['id']).collection('emotions').doc(userId).delete();\n    }else{\n      db.collection('rooms').doc(room['id']).collection('emotions').doc(userId).set({\n        kind      : emote,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n    }\n  }\n\n  return(\n    <div id=\"commentForm\">\n      <div id=\"emotions\">\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"henoheno\">へのへの</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"null\">なし</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"yurei\">ユーレイ</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"happy\">ニコニコ</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"angry\">怒り</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"naki\">泣き</button>  \n      </div>\n      <div className=\"form\">\n        <input id=\"inputComment\" />\n        <button type=\"submit\" maxLength=\"300\" onClick={commentAPI}>投稿</button>\n      </div>\n    </div>\n    )\n}\nexport default Form;","//アイコンをランダムに動かす処理\n\nfunction randomMoveTimer(object , time){\n  let moveMax=5;\n  return setInterval(()=>{\n    randomMove(object , moveMax , moveMax);\n  },time);\n};\n\nfunction randomMove(object , topmax , leftmax){\n  let originalValue = window.getComputedStyle(object, null).getPropertyValue('transform');// transformの中身を取得。例えばこんな感じmatrix(1, 0, 0, 1, -1.5, 0.5) what!!!\n  let originalSizeRot=originalValue.substr(7).split(',').slice(0, 4);//matrixのサイズと回転だけを取得\n  object.style.transform ='matrix('+originalSizeRot[0]+','+originalSizeRot[1]+','+originalSizeRot[2]+','+originalSizeRot[3]+',' + getRandomInt( topmax ) + ','+ getRandomInt( leftmax ) +')';\n}\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor( max ) ) - ( max / 2 );\n}\n\nexport default randomMoveTimer;\n","\nimport React, {Timestamp,useEffect,useContext,createContext,useState} from 'react';\nimport './stage.css';\nimport Nomal from './Nomal/Nomal';\nimport {roomContext} from '../Room';\nimport {userContext} from '../../App';\nimport firebase , {db} from '../../Firebase/Firebase'\nimport CommentForm from './CommetForm/CommentForm'\nimport SplitPane from 'react-split-pane';\nimport randomMoveTimer from '../../IconRandomMove';\n\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('stage-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst stageRadius=600;\nfunction Stage(props){\n  const {userId} = useContext(userContext);\n  const {icons,splitSize,room} = useContext(roomContext);\n  const [newComment,setNewComment] = useState(null);\n  const [emotions,setEmotions] = useState({});\n  const [reActions,setActions] = useState({});\n  const roomId=room['id'];\n\n  useEffect(()=>{\n    async function emotionData(){\n      var now = new Date();\n      var before5min_unix = new Date(now.getTime() - 5000);\n      console.log(before5min_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('emotions').where('timeStamp','>',before5min_unix).onSnapshot(data=> {\n        console.log(data);\n        let value=[];\n        let emoteIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let emotes={};\n        for(let i = 0; i < emoteIds.length; i++){\n          emotes[emoteIds[i]]=value[i]['kind'];\n        }\n        console.log(data,value,emotes,\"ん\");\n        setEmotions(emotes);\n      });\n      return () => emoteUnsubscribe();\n    }\n    async function newCommentData(){\n      var now = new Date();\n      // 6秒以内のnewCommentを取得\n      // 本来は、コメントが増えたタイミングでバックエンドからイベントを起こすようにした方がいいのだろうが、firebaseでは有料だったのでこのように実装\n      var before6sec_unix = new Date(now.getTime() - 6000);\n      const newCommentUnsubscribe = await db.collection('/rooms').doc(roomId).collection('newComment').where('timeStamp','>',before6sec_unix).onSnapshot(data=> {\n        let value=[];\n        let newCommentIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let newComment={};\n        for(let i = 0; i < newCommentIds.length; i++){\n          newComment[newCommentIds[i]]=value[i]['content'];\n        }\n        console.log(data,value,newComment,\"ん\");\n        setNewComment(newComment);\n      });\n      return () => newCommentUnsubscribe();\n    }\n    async function reActionData(){\n      var now = new Date();\n      var before5sec_unix = new Date(now.getTime() - 5000);\n      console.log(before5sec_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('reActions').where('timeStamp','>',before5sec_unix).onSnapshot(data=> {\n        let value=[];\n        let reActionIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let reActionDatas={};\n        for(let i = 0; i < reActionIds.length; i++){\n          if(!reActionDatas[value[i]['to']]){\n            reActionDatas[value[i]['to']]=[];\n          }\n          reActionDatas[value[i]['to']].push({\n            id   : reActionIds[i],\n            name : value[i]['name'],\n            from : value[i]['from'],\n            to   : value[i]['to'],\n          });\n        }\n        console.log(data,value,reActionDatas,\"ん\");\n        setActions(reActionDatas);\n      });\n      return () => emoteUnsubscribe();\n    }\n    emotionData();\n    newCommentData();\n    reActionData();\n  },[])\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n\n  return (\n    <stageContext.Provider value={{newComment,setNewComment,emotions,setEmotions,reActions,setActions}}>\n      <SplitPane split=\"horizontal\" defaultSize={window.innerHeight-171}>\n        <div id=\"stage\" >\n          <Nomal stageRadius={stageRadius}/>\n        </div>\n        <CommentForm />\n      </SplitPane>\n    </stageContext.Provider>\n  );\n}\nconst stageContext=createContext([]);\nexport {stageContext};\nexport default Stage;","import { db } from \"./Firebase/Firebase\";\n\nasync function deleteRoomSubCollection(roomId,subCollection) {\n  const deleteDocs = await db.collection('rooms').doc(roomId).collection(subCollection).get();\n  if(!deleteDocs.empty){\n    let batchIndex=0;\n    let operationCounter=0;\n    let batchArray=[];\n\n    batchArray.push(db.batch());\n    deleteDocs.docs.forEach((doc) => {\n      batchArray[batchIndex].delete(doc.ref);\n      operationCounter++;\n\n      if (operationCounter === 499) {\n        batchArray.push(db.batch());\n        batchIndex++;\n        operationCounter = 0;\n      }\n    });\n    batchArray.forEach(async (batch) => {await batch.commit()});\n  }\n  return true;\n}\n\nexport {deleteRoomSubCollection};\n","import React,{ useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../../App';\nimport { roomContext } from '../Room';\nimport './roomheader.css'\nimport firebase,{db} from '../../Firebase/Firebase';\nimport { deleteRoomSubCollection } from '../../CollectionDelete';\n\nconst RoomHeader=()=> {\n  const {room}=useContext(roomContext);\n  const {userId} =useContext(userContext);\n\n\n  // 削除用のAPIだがしかしサブコレクションの削除ができないとかなんとかで時間的に諦め\n  const deleteRoomAPI=()=>{\n    var result = window.confirm('この操作は取り消せません、よろしいですか？');\n    if(result){\n      const r=db.collection('/rooms').doc(room['id']);\n      const roomId=room['id']\n      if(r){\n        deleteRoomSubCollection(roomId,'newComment').then(()=>{\n          deleteRoomSubCollection(roomId,'emotions').then(()=>{\n            deleteRoomSubCollection(roomId,'reActions').then(()=>{\n              deleteRoomSubCollection(roomId,'comments').then(()=>{\n                r.delete().then(()=>{})\n              })\n            })\n          })\n        }).catch((error)=>{\n          console.log('Error:'+error)\n        });\n      }\n    }\n  }\n  \n  return (\n    <header id=\"room-header\">\n      <div id=\"room-name\">\n        <strong>{room[\"roomName\"]}</strong>\n\t\t\t</div>\n      <ul id=\"room-info\">\n        <li>参加者：{room[\"members\"].length}</li>\n\t\t\t\t<li> 作成者：{room.madeUserName}</li>\n        <li> 作成日時：{room.madeTime}</li>\n        <li> メンバー：{room.members.length}人</li>\n\t\t\t</ul>\n      {console.log(room,room.madeUserId,userId)}\n      {room.madeUserId === userId &&\n        <button onClick={deleteRoomAPI}>ルームを削除</button>\n      }\n    </header>\n    );\n}\n\nexport default RoomHeader;\n/*\n \n\n\n    \n*/","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Icon from '../IconRender'\nimport Stage from './Stages/Stage';\nimport SplitPane from 'react-split-pane';\nimport { Splitpanes, Pane } from 'splitpanes'\nimport 'splitpanes/dist/splitpanes.css'\nimport Comments from './Comments/Comments';\nimport firebase, { db } from '../Firebase/Firebase'; \nimport {userContext} from '../App'\nimport RoomHeader from './RoomHeader/RoomHeader';\nimport './room.css';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport StageIcon from './Stages/StageIcon/StageIcon';\n\nconst defaultSplitSize=800;\n\nconst Room = () => {\n  const [room,setRoom] = useState(null);\n  const [isRoom,setIsRoom] = useState(null);\n  const [comments,setComments] = useState(null);\n  const [splitSize,setSplitSize] = useState(defaultSplitSize);\n  const [members,setMembers] = useState(null);\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  // URLのパラメータを取得\n  var Path = window.location.pathname;\n  var roomId = Path.split('/')[2];\n  \n  useEffect(()=>{\n    async function roomData() {\n      const roomUnsubscribe = await db.collection('/rooms').doc(roomId).onSnapshot(doc=> {\n        if(doc.exists){\n          let value=doc.data();\n          if(value['members'].indexOf(userId)===-1){\n            console.log('入室しました');\n            db.collection('rooms').doc(roomId).update({\n              members: firebase.firestore.FieldValue.arrayUnion(userId)\n            }).then(()=>{\n              db.collection('users').doc(userId).update({\n                rooms: firebase.firestore.FieldValue.arrayUnion(roomId)\n              }).catch((error)=>{\n                console.log('Error:'+error)\n              }).then(()=>{\n                setIsRoom(true);\n              })\n              db.collection('users').doc(userId).update({\n                room: roomId\n              }).catch((error)=>{\n                console.log('Error:'+error)\n              })\n            }).catch((error)=>{\n              console.log('Error:'+error)\n            })\n          }else{\n            setIsRoom(true);\n          }\n          let d = value['timeStamp'].toDate();\n          let roomData={\n            id           : doc.id,\n            roomName     : value['roomName'],\n            stageId      : value['stageId'],\n            madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n            madeUserId   : value['madeUserId'],\n            madeUserName : value['madeUserName'],\n            members      : value['members'],\n\n          }\n          setRoom(roomData);\n        }else{\n          setIsRoom(false);\n        }\n      });\n      return () => roomUnsubscribe();\n    };\n    roomData();\n  },[])\n\n  useEffect(() => {\n    async function commentsData(){\n      if(isRoom) {\n        console.log(room)\n        const commentsUnsubscribe = await db.collection('/rooms').doc(roomId).collection('comments').orderBy('timeStamp', 'asc').onSnapshot(data=> {\n          let commentIds=data.docs.map(doc => \n            doc.id\n          );\n          let value=[];\n          data.forEach((doc) => {\n            value.push(\n              doc.data()\n            );\n          });\n          let comments=[];\n           for(let i = 0; i < commentIds.length; i++){\n            comments.push(\n              {\n                id       : commentIds[i],\n                content  : value[i]['content'],\n                emotion  : value[i]['emotion'], \n                userId   : value[i]['userId'],\n              }\n            )\n          }\n          console.log(commentIds,comments,data);\n          setComments(comments);\n        });\n        return () => commentsUnsubscribe();\n      }\n    }\n    \n    async function membersData(){\n      if(isRoom){\n        const memberUnsubscribe= await db.collection('rooms').doc(roomId).onSnapshot(async doc=>{\n          if(doc.exists){\n            const memberIds=doc.data()['members'];\n            console.log(memberIds);\n            if(memberIds&&memberIds.length!==0){\n              await db.collection('users').where('userId','in',memberIds).get().then(infos=>{\n                if(!infos.empty){\n                  console.log(infos);\n                  let value={};\n                  infos.docs.forEach(info=>{\n                    let data=info.data();\n                    let memberId=info.data()['userId'];\n                    value[memberId]={\n                      displayName : data['displayName'],\n                      oneWord     : data['oneWord'],\n                      iconInfo    : data['iconinfo']\n                    }\n                  })\n                  console.log(value,infos,infos.docs);\n                  setMembers(value);\n                }\n                //infos.push(info.data()['iconinfo']);\n              });\n            }\n          }\n        });\n        return () => memberUnsubscribe();\n      }\n    }\n    \n    commentsData();\n    membersData();\n  \n    //unsubscribe();\n    \n  }, [isRoom]);\n  \n  \n//  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n\n  \n  //if (this.state.room === null) return <p>Loading ...</p>;\n  return (\n    //<Nomal />\n        //<Icon iconInfo={room.iconInfo[0].value}/>\n    <div className=\"container\">\n      {isRoom===null && <p>Loading Room...</p>}\n      {isRoom===true&&\n        <roomContext.Provider value={{members,setMembers,room,setRoom,comments,setComments,splitSize,setSplitSize}}>\n          {room===null && <p>Loading Room...</p>}\n          {room &&\n            <div className=\"row\">\n              <RoomHeader />\n              <SplitPane split=\"vertical\" minSize={300} defaultSize={defaultSplitSize} maxSize={1000} style={{\"height\":window.innerHeight-101}}>\n                <div id='left' style={{'display':'flex'}}>\n                  {members === null && <p>Loading Stage...</p>}\n                  {members !== null&&<Stage/>}\n                </div>\n                <div id=\"right\" >\n                  {comments === null && <p>Loading Ccomments...</p>}\n                  {comments !==null && <Comments />}\n                </div>\n              </SplitPane>\n            </div>\n          }\n        </roomContext.Provider>\n      }\n      {isRoom==false &&\n        <Redirect to = {'/error'} />\n      }\n    </div>\n  )\n}\n/*\n<img key={name} className=\"icon\" src={\"./images/icon/\"+comment.iconinfo.info[name][\"kind\"]+\"_\"+name+\".png\"} style={{\n                    height   :comment.iconinfo.info[name][\"sizeY\"]/3  + \"px\" ,\n                    width    :comment.iconinfo.info[name][\"sizeX\"]/3  + \"px\" ,\n                    top      :comment.iconinfo.info[name][\"posY\"]/3 + \"px\" ,\n                    left     :comment.iconinfo.info[name][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+comment.iconinfo.info[name][\"rot\"]+\"deg)\",\n                  }} />\n\n\n                  <img key={info[0]} className=\"icon\" src={\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\"} style={{\n                    height   :info[1][\"sizeY\"]/3  + \"px\" ,\n                    width    :info[1][\"sizeX\"]/3  + \"px\" ,\n                    top      :info[1][\"posY\"]/3 + \"px\" ,\n                    left     :info[1][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+info[1][\"rot\"]+\"deg)\",\n                  }} />\n\n\n\n                  this.state.comments.map(comment => (\n              <div key={comment.id.toString()} className=\"comment\">\n                  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n                <h1 className=\"\">{comment.content}</h1>\n              </div>\n            ))\n*/\nconst roomContext=createContext([]);\nexport {roomContext};\nexport default Room;","import React, {Component,useContext, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {roomContext} from '../Room';\nimport Icon from '../../IconRender';\nimport {db} from '../../Firebase/Firebase'\nimport './comments.css'\nimport randomMoveTimer from '../../IconRandomMove';\n\nconst iconSize=50;\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('comments-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst Comments=()=>{\n  const {comments,room,members} = useContext(roomContext);\n  var Path = window.location.pathname;\n\n  useEffect(()=>{\n    let target = document.getElementById('scroll-inner');\n    console.log(target);\n    target.scrollIntoView(false);\n  \n\n    let moveTimer=IconMove();\n  \n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n  return (\n    <div id='comments' className=\"list-group\">\n      <div id=\"scroll-inner\">\n        {comments && members &&\n          comments.map(comment=>(\n            <div key={comment.id.toString()} className=\"comment list-group-item d-flex\">\n              <div className='iconMask commentIcon'>\n                <Icon iconInfo={members[comment.userId]['iconInfo']} iconSize={iconSize} emotion={comment.emotion} where='comments'/>\n              </div>\n              <div>\n                {console.log(members)}\n                <strong className=\"userName mb-1\" style={{}}>{members[comment.userId]['displayName']}</strong>\n                <h3 className=\"commentContent\" style={{}}>{comment.content}</h3>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Comments;","const defaultIcons=[{\n  'face'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'hair'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'leftEye'   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'rightEye'  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'nose'      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'mouth'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'other'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n}];\nfunction getIconRandom(){\n  return \n}\n\n// パーツボタンの情報ズ。一応拡張性のためにKindsの中身2次元連想配列(？)にしてるけどいらないかも。\nconst partsData=\n{ \n  'face'      : { displayName : '顔'   , Kinds : {'henoheno' : {displayKind : 'じ'}, 'nomal' : {displayKind : 'フツー'} ,'monster' : {displayKind : '化物'},'komugi' : {displayKind : '小麦色'},'maru' : {displayKind : 'まる'} }} ,\n  'hair'      : { displayName : '髪'   , Kinds : { 'none' : {displayKind : 'なし'}   ,'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ケモミミ'},'tyuni' : {displayKind : '厨二'} ,'kaku' : {displayKind : 'カクガリ'}} } ,\n  'leftEye'   : { displayName : '左目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'rightEye'  : { displayName : '右目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'nose'      : { displayName : '鼻'   , Kinds : { 'henoheno' : {displayKind : 'も'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : '逆三角'},'pig' : {displayKind : 'ぶたっぱな'} } },\n  'mouth'     : { displayName : '口'   , Kinds : { 'henoheno' : {displayKind : 'へ'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ダブリュー'},'fang' : {displayKind : '牙'},'tooth' : {displayKind : '歯'} }} ,\n  'other'     : { displayName : 'その他', Kinds : { 'none' : {displayKind : 'なし'}, 'hige' : {displayKind : 'ひげ'},'hige' : {displayKind : 'ひげ'},'horns' : {displayKind : 'ツノ'} ,'glasses' : {displayKind : 'めがね'},'henoheno' : {displayKind : 'へのへの'} }} ,\n}\nfunction GetPartsAll(){\n  return partsData;\n}\nfunction GetPartsData(partsName) {\n  return partsData[partsName];\n}\nfunction GetPartsKinds(partsName) {\n  console.log(partsName)\n  return partsData[partsName]['Kinds'];\n}\n// これがデータベースに保存される。今の値。stateが読み込まれたとき自動で上書きされてる。\nlet imgsInfo={\n  'face'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'hair'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'leftEye'   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'rightEye'  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'nose'      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'mouth'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'other'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n};\nfunction GetImgsInfoEach(partsName,eachPram) {\n  return imgsInfo[partsName][eachPram];\n}\nfunction GetImgsInfoAll(partsName) {\n  return imgsInfo[partsName];\n}\nfunction GetImgsInfoAllAll() {\n  return imgsInfo;\n}\nfunction SetImgsInfoEach(partsName,eachPram,value) {\n  imgsInfo[partsName][eachPram]=value;\n}\nfunction SetImgsInfoAll(partsName,values) {\n  imgsInfo[partsName]=values;\n}\nfunction SetImgsInfoAllAll(values) {\n  imgsInfo=values;\n}\n\n// サイズの上限下限の設定\nconst partsSizeMaxMin={\n  'face'      : {max : 350 , min : 200 },\n  'hair'      : {max : 350 , min : 200 },\n  'leftEye'   : {max : 70  , min : 15  },\n  'rightEye'  : {max : 70  , min : 15  },\n  'mouth'     : {max : 100 , min : 15  },\n  'nose'      : {max : 100 , min : 15  },\n  'other'     : {max : 400 , min : 30  },\n};\nfunction GetSizeMax(partsName) {\n  return partsSizeMaxMin[partsName]['max'];\n}\nfunction GetSizeMin(partsName) {\n  return partsSizeMaxMin[partsName]['min'];\n}\nfunction GetSizeMaxMin(partsName) {\n  return partsSizeMaxMin[partsName];\n}\n\n// パーツの現在の大きさ。\nlet partsSizeNow={\n  'face'      : {sizeX : 300 , sizeY : 300 },\n  'hair'      : {sizeX : 300 , sizeY : 300 },\n  'leftEye'   : {sizeX : 30  , sizeY : 30  },\n  'rightEye'  : {sizeX : 30  , sizeY : 30  },\n  'mouth'     : {sizeX : 40  , sizeY : 40  },\n  'nose'      : {sizeX : 40  , sizeY : 40  },\n  'other'      : {sizeX : 300  , sizeY : 300  },\n}\nfunction GetSizeXYNow(partsName) {\n  return partsSizeNow[partsName];\n}\nfunction GetSizeXNow(partsName) {\n  console.log(partsName,partsSizeNow[partsName]['sizeX']);\n  return partsSizeNow[partsName]['sizeX'];\n}\nfunction GetSizeYNow(partsName) {\n  return partsSizeNow[partsName]['sizeY'];\n}\nfunction SetSizeXYNow(partsName,sizeX,sizeY) {\n  partsSizeNow[partsName]={sizeX : sizeX , sizeY : sizeY };\n}\nfunction SetSizeXNow(partsName,sizeX) {\n  partsSizeNow[partsName]['sizeX'] = sizeX;\n}\nfunction SetSizeYNow(partsName,sizeY) {\n  partsSizeNow[partsName]['sizeY'] = sizeY;\n}\n\n// パーツの回転の上限下限、今のところ意味ない\nconst partsRotMaxMin={\n  'face'      : {max : 360 , min : 0 ,},\n  'hair'      : {max : 360 , min : 0 ,},\n  'leftEye'   : {max : 360 , min : 0 ,},\n  'rightEye'  : {max : 360 , min : 0 ,},\n  'mouth'     : {max : 360 , min : 0 ,},\n  'nose'      : {max : 360 , min : 0 ,},\n  'other'     : {max : 360 , min : 0 ,},\n};\nfunction GetRotMax(partsName) {\n  return partsRotMaxMin[partsName]['max'];\n}\nfunction GetRotMin(partsName) {\n  return partsRotMaxMin[partsName]['min'];\n}\nfunction GetRotMaxMin(partsName) {\n  return partsRotMaxMin[partsName];\n}\n\n// パーツの現在の角度\nlet partsRotNow={\n  'face'      : 0,\n  'hair'      : 0,\n  'leftEye'   : 0,\n  'rightEye'  : 0,\n  'mouth'     : 0,\n  'nose'      : 0,\n  'other'      : 0,\n}\nfunction GetRotNow(partsName) {\n  return partsRotNow[partsName];\n}\nfunction SetRotNow(partsName,value) {\n  console.log(value);\n  partsRotNow[partsName]=value;\n}\n\nexport {\n  GetPartsAll,GetPartsData,GetPartsKinds,\n  GetImgsInfoAllAll,GetImgsInfoAll,GetImgsInfoEach,SetImgsInfoAllAll,SetImgsInfoAll,SetImgsInfoEach,\n  GetSizeXYNow,GetSizeYNow,GetSizeXNow,SetSizeXYNow,SetSizeYNow,SetSizeXNow,\n  GetSizeMax,GetSizeMin,GetSizeMaxMin,\n  GetRotNow,SetRotNow,\n  GetRotMax,GetRotMin,GetRotMaxMin,\n}","import React, { useState, useContext  } from 'react';\nimport { act } from 'react-dom/test-utils';\nimport {GetPartsKinds} from '../IconData';\nimport {makeIconContext} from '../MakeIcon';\nimport '../makeIcon.css'\n\n\nconst PartsSelect=()=>{\n  const {setNowKind,nowKind,nowName} = useContext(makeIconContext);\n\n\n  return(\n    <div id=\"makeIconButtons\" className={nowName+\"button\"}>\n      {console.log(nowName)}\n      {Object.entries(GetPartsKinds(nowName)).map((value)=>(\n        <button \n          key={value[0]} \n          className={value[0]+\" \"+nowName+\" \"+\"iconKindButton btn-text-3d\"} \n          data-name={nowName} data-kind={value[0]}  \n          onClick={(e)=>{\n            setNowKind(e.target.dataset.kind);\n            document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n              if(activeElement.classList.contains('active')){\n                activeElement.classList.remove('active');\n              }\n            });\n            e.target.classList.add('active');\n          }}\n        >{value[1][\"displayKind\"]}</button>\n      ))}\n    </div>\n  )\n}\n//  \n// data-partsName={nowName}\n\nexport default PartsSelect;","import React, {createContext, useContext, useState, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './makeIcon.css'\nimport {GetImgsInfoAllAll, GetImgsInfoEach, GetPartsAll, GetRotMax, GetRotMin, GetRotNow, GetSizeMax, GetSizeMin, GetSizeXNow, SetImgsInfoAll, SetImgsInfoAllAll, SetRotNow, SetSizeNowAll, SetSizeXYNow} from './IconData';\nimport firebase,{db} from '../../../Firebase/Firebase'\nimport {userContext} from '../../../App';\nimport PartsSelect from './PartsSelect/PartsSelect';\n\nconst imgPath='./images/icon/';\n\nconst MakeIcon =()=> {\n  const [ nowKind , setNowKind ] = useState(null); \n  const [ nowName , setNowName ] = useState('face');\n  const [ nowSize , setNowSize ] = useState(30);\n  const [ nowRot  , setNowRot  ] = useState(0);\n \n  const {userInfo}=useContext(userContext);\n\n  useEffect(()=>{\n    if(userInfo){\n      // 今のアイコンの情報を描画したりデータにセットしたり。\n      SetImgsInfoAllAll(userInfo['iconinfo']);\n      Object.entries(userInfo['iconinfo']).forEach(partInfo => {\n        SetSizeXYNow(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY']);\n        SetRotNow(partInfo[0],partInfo[1]['rot']);\n        let img=document.getElementById(partInfo[0]+'Img');\n        if(!img){\n          img = document.createElement('img');\n          img.classList.add('set-image');\n          img.classList.add(partInfo[0]);\n          img.id=partInfo[0]+'Img';\n        }\n        attach(img,partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[1]['posX'],partInfo[1]['posY'],partInfo[1]['rot'],partInfo[1]['kind'],partInfo[0]);\n      });\n    }\n    const facekind=GetImgsInfoEach(nowName,'kind');\n    // 選択してあるものをactiveに\n    document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n      console.log(activeElement);\n      if(activeElement.classList.contains(nowName)){\n        activeElement.classList.add('active');\n      }\n    });\n    document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n      if(activeElement.classList.contains(facekind)){\n        activeElement.classList.add('active');\n      }\n    });\n    setNowKind(GetImgsInfoEach(nowName,'kind'));\n  },[userInfo]);\n  \n  useEffect(()=>{\n    const facekind=GetImgsInfoEach(nowName,'kind');\n    document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n      if(activeElement.classList.contains('active')){\n        activeElement.classList.remove('active');\n      }\n      if(activeElement.classList.contains(facekind)){\n        activeElement.classList.add('active');\n      }\n    });\n    setNowKind(facekind);\n  },[nowName])\n\n  // マウスが動いた時に画像を追従させる関数\n  const mouthmove = e =>{\n    // マウスの位置ー画像のサイズの半分で計算。\n    let mouseX = e.clientX-Math.floor(nowSize/2);\n    let mouseY = e.clientY-Math.floor(nowSize/2);\n    // 無限にレンダーがかかりそうなのでここはステートを使ってない\n    document.getElementById('traceImage').style.top  = mouseY + 'px';\n    document.getElementById('traceImage').style.left = mouseX + 'px';\n  }\n\n\n  // 画像を配置する関数\n  const attachByClick = e =>{\n    inputSizeSet();\n    inputRotSet();\n    let img=document.getElementById(nowName+'Img');\n    if(!img){\n      img = document.createElement('img');\n      img.classList.add('set-image');\n      //img.classList.add(nowName+'_'+nowKind);\n      img.classList.add(nowName+'Img');\n      img.id=(nowName);\n    }\n    let clientRect = document.getElementById('icon-space').getBoundingClientRect() ;\n\n    let px = window.pageXOffset + clientRect.left ;\n\n    // ページの上端から、要素の上端までの距離\n    let py = window.pageYOffset + clientRect.top ;\n    let mouseX =e.clientX;\n    let mouseY =e.clientY;\n\n    let x = mouseX-px-Math.floor(document.getElementById('sizeInput').value / 2);\n    let y = mouseY-py-Math.floor(document.getElementById('sizeInput').value / 2);\n    attach(img,document.getElementById('sizeInput').value,document.getElementById('sizeInput').value,x,y,document.getElementById('rotInput').value,nowKind,nowName)\n    document.getElementById('save-button').classList.add('active')\n  }\n  const attach=(img,sizex,sizey,x,y,rot,kind,name)=>{\n    img.src             = imgPath + kind + '_' + name + '.png';\n    img.style.width     = sizex + 'px';\n    img.style.height    = sizey + 'px';\n    img.style.position  = 'absolute';\n    img.style.left      = x + 'px';\n    img.style.top       = y + 'px';\n    img.style.transform = 'rotate('+rot+'deg)';\n    let values={\n      posX  : x     ,\n      posY  : y     ,\n      sizeX : sizex ,\n      sizeY : sizey ,\n      rot   : rot   ,\n      kind  : kind\n    };\n    document.getElementById('icon-space').appendChild(img);\n    SetImgsInfoAll(name,values);\n  }\n\n\n\n  // \n  const tracehide=()=>{\n    document.getElementById('traceImage').style.display = 'none';\n  }\n\n  function traceshow(){\n    document.getElementById('traceImage').style.display = 'block';\n  }\n\n  \n\n\n  let sizeTimer;\n  const sizeChange = (e) => {\n    if(sizeTimer){\n      clearTimeout(sizeTimer);\n    }\n    sizeTimer = setTimeout(inputSizeSet, 1000);\n      \n\n//      document.getElementById('traceImage').style.width = e.target.value+'px';\n//      document.getElementById('traceImage').style.height = e.target.value+'px';\n  }\n\n  let rotTimer;\n  const rotChange = (e) => {\n    if(rotTimer){\n      clearTimeout(rotTimer);\n    }\n\n    rotTimer = setTimeout(inputRotSet, 1000);\n      //document.getElementById('traceImage').style.transform ='rotate(' +e.target.value+'deg)';\n  }\n\n  // 回転をmaxminとかいい感じにてくれる関数\n  const inputRotSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input    = document.getElementById('rotInput');\n    let inputRot = input.value;\n    let nextRot;\n    let maxRot   = GetRotMax(name);\n    let minRot   = GetRotMin(name);\n\n    if(maxRot < inputRot){\n      nextRot=maxRot\n    }else if(minRot > inputRot){\n      nextRot=minRot\n    }else{\n      nextRot=inputRot\n    }\n    SetRotNow(name , nextRot);\n    setNowRot(nextRot);\n    input.value=nextRot;\n  }\n  // サイズをmaxminとかいい感じにてくれる関数\n  const inputSizeSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input     = document.getElementById('sizeInput');\n    let inputSize = input.value;\n    let nextSize;\n    let maxSize   = GetSizeMax(name);\n    let minSize   = GetSizeMin(name);\n    \n    if(maxSize < inputSize){\n      nextSize = maxSize\n    }else if(minSize > inputSize){\n      nextSize = minSize;\n    }else{\n      nextSize = inputSize;\n    }\n    SetSizeXYNow(name , nextSize , nextSize);\n    setNowSize(nextSize);\n    input.value=nextSize;\n  }\n\n  const {userId} = useContext(userContext);\n    return (\n      <div id=\"makeIcon\">\n        {userInfo===null&&\n          <p>loading infos...</p>\n        }\n        {userInfo!==null&&\n          <makeIconContext.Provider value = {{nowKind , setNowKind , nowName , setNowName , nowSize , setNowSize , nowRot , setNowRot}}>\n          <div  id = \"icon-space\" className=\"iconMask\"  onMouseMove = {mouthmove}  onMouseLeave = {tracehide}  onMouseEnter = {traceshow}  onClick = {attachByClick} />\n          {console.log(imgPath + nowKind + nowName + \"png\")}\n          <img  id = \"traceImage\"  src = { imgPath + nowKind + \"_\" + nowName + \".png\" }  style = {{ height : nowSize + \"px\" , width : nowSize + \"px\", zIndex : \"100\", position : \"absolute\", display : \"none\", cursor : \"none\", pointerEvents : \"none\",transform : \"rotate(\" + nowRot + \"deg)\" }}>\n          </img>\n          <div>\n            回転\n            <input  type = \"number\"  id = \"rotInput\"  onInput = {rotChange}   min = {GetRotMin(nowName)}  max = {GetRotMax(nowName)} defaultValue = \"0\"></input>\n            サイズ\n            <input  type = \"number\"  id = \"sizeInput\"  onInput = {sizeChange}  min = {GetSizeMin(nowName)}  max = {GetSizeMax(nowName)}  defaultValue = \"30\"></input>\n          </div>\n          <div  id = \"name-buttons\" className=\"\">\n          {Object.entries(GetPartsAll()).map((value) => (\n            // 「顔」とか「髪」とかのボタンを描画。\n            <button  key = {value[0]} id={value[0]+\"IconNameButton\"}  className = {value[0]+\" \"+\"iconNameButton btn-border_buttom\"}  data-name = {value[0]}  \n              onClick = {(e)=>{\n                // 「顔」とかのボタンの今までアクティブついてたの消して、今押されたやつにactiveを追加。その他サイズや回転なども変更\n                document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n                  if(activeElement.classList.contains('active')){\n                    activeElement.classList.remove('active');\n                  }\n                });\n                setNowName(e.target.dataset.name);\n                setNowKind(GetImgsInfoEach(e.target.dataset.name,'kind'));\n                document.getElementById('sizeInput').value=GetSizeXNow(e.target.dataset.name);\n                document.getElementById('rotInput').value=GetRotNow(e.target.dataset.name);\n                inputSizeSet(e.target.dataset.name);\n                inputRotSet(e.target.dataset.name);\n              }}\n            >{value[1][\"displayName\"]}</button>\n          ))}\n          </div>\n          <PartsSelect />\n          </makeIconContext.Provider>\n          }\n      </div>\n    )\n}\nconst makeIconContext = createContext([])\nexport {makeIconContext};\nexport default MakeIcon;","import firebase,{db} from '../Firebase/Firebase';\nimport {Redirect} from 'react-router-dom';\nimport {useContext} from 'react';\nimport { setIsFirst, userContext } from '../App';\n\nconst NoLogin=()=>{\n  const {setUserId,setUserName,setIsOnline,isOnline} = useContext(userContext);\n\n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n\n  // ログイン処理\n  const loginWithGoogle = () => {\n    // もうauthにアカウントがあるかとかかな？...\n    setIsFirst(true);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(function() {\n\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      // サインインしてもらう\n      firebase.auth().signInWithPopup(provider)\n      .then(async function(result) {\n        await db.collection('/users').where('userId','==',result.user.uid).get().then(function(doc) {\n          console.log(doc);\n          // まだアカウントないなら\n          if (doc.empty) {\n            console.log(\"No user\");\n            db.collection('users').doc(result.user.uid).set({\n              userId      : result.user.uid,\n              displayName : 'ゲスト',\n              oneWord     : '',\n              room        : null,\n              rooms       : [],\n              iconinfo    :({\n                \"face\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"hair\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"leftEye\"   : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"rightEye\"  : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"nose\"      : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"mouth\"     : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"other\"     : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300  , rot : 0 , kind : 'none'},\n              })\n            }).then(async (doc)=>{\n              await db.collection('users').doc(result.user.uid).collection('seclet').doc(result.user.uid).set({\n                userName : result.user.displayName,\n                email    : result.user.email,\n              }).then(()=>{\n                console.log('login fin');    \n                setIsOnline(true);\n                setUserId(result.user.uid);\n              }).catch((error)=>{\n                db.collection('users').doc(result.user.uid).delete().then(()=>{\n                  logoutFromGoogle();\n                  alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n                  console.log(error);\n                })\n              })\n            }).catch((error)=>{\n              logoutFromGoogle();\n              alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n              console.log(error);\n            })\n          }else{\n            setIsOnline(true);\n            setUserId(result.user.uid);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"Error : \", error);\n        });\n      }.bind(this))\n        .catch(function(error) {\n          alert(\"Googleでサインインできませんでした。 Error: \" , error);\n          console.log(error);\n          return false;\n        }\n      );\n    }.bind(this));\n  }\n  \n  return(\n    <div>\n      {isOnline === true &&\n        <div>\n          ログインしました！\n          <Redirect to = \"/userSetting\"/>\n        </div>\n      }\n      {isOnline === false &&\n        <div>\n          ログインしていません\n          <button onClick = {loginWithGoogle}>\n            Googleでログイン\n          </button>\n        </div>\n      }\n      {isOnline === null &&\n        <>loading aouth...</>\n      }\n    </div>\n    \n  )\n}\n\nexport default NoLogin;","import React, { Component,getState, createContext,useContext,useState,useEffect } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\nimport NavBar from './NavBar/NavBar';\nimport Comments from './Room/Comments/Comments';\nimport MakeIcon from './UserSettings/UserInfo/MakeIcon/MakeIcon';\nimport UserSettings from './UserSettings/UserSettings';\nimport Room from './Room/Room';\nimport Main from './Main/Main';\nimport { useWorker } from 'react-hooks-worker';\n\nimport {googleauthConfig} from './miserarenaiyo';\nimport firebase, { db } from './Firebase/Firebase';  \nimport NoLogin from './UserSettings/NoLogin';\nimport Error from './Error/Error';\n\n//ユーザー系のcontext\nexport const userContext=createContext();\n\nlet isFirst=false;\n\nconst App = () => {\n  //ユーザー系のステート\n  const [isOnline , setIsOnline] = useState(null);\n  const [userId   , setUserId  ] = useState(null);\n  const [userInfo , setUserInfo] = useState(null);\n  \n  useEffect(() => {\n    async function getUserInfo(){\n      if(userId){\n        const userInfoUnsubscribe = await db.collection('users').doc(userId).onSnapshot(doc=>{\n          db.collection('users').doc(userId).collection('seclet').doc(userId).get().then(seclet=>{\n            let data=doc.data();\n            let secletdata=seclet.data();\n            setUserInfo({\n              userName    : secletdata['userName'] ,\n              email       : secletdata['email']    ,\n              displayName : data['displayName']    ,\n              oneWord     : data['oneWord']        ,\n              iconinfo    : data['iconinfo']       ,\n              rooms       : data['rooms']          ,\n              room        : data['room']\n            });\n          });\n        });\n        return () => userInfoUnsubscribe();\n      }\n    }\n    getUserInfo();\n  },[userId]);\n\n  useEffect(() => {\n    //ログイン時にステート更新する処理\n    firebase.auth().onAuthStateChanged(async function (user) {\n      let isOnline = false;\n      let userId = null;\n      if (user) {\n        userId   = user.uid;\n        isOnline = true;\n      }\n      // 初回ログイン時、データの追加より先に、stateが更新され、エラーになってしまうため、その対策。\n      if(!isFirst){\n        setUserId(userId);\n        setIsOnline(isOnline);\n      };\n      //this.setState({isOnline:isOnline})\n      //this.setState({userId:userId})\n    }.bind(this));\n  })\n  // ルーティングはここでやる\n  return (\n      <div>\n      <userContext.Provider value={{isOnline , setIsOnline , userId , setUserId, userInfo , setUserInfo }}>\n        <NavBar/>\n        <Switch>\n          <Route exact path = '/login' component = {NoLogin} /> \n          {isOnline === false &&<Redirect to = {'/login'} />}\n          {isOnline === true &&\n            <Switch>\n              <Route exact path='/error'       component = {Error}/>\n              <Route exact path='/'            component = {Main}/>\n              <Route exact path='/userSetting' component = {UserSettings}/>\n              <Route exact path='/room/:id'    component = {Room}/>\n              <Redirect to = {'/error'} />\n            </Switch>\n          }\n          <>loading...</>\n        </Switch>\n      </userContext.Provider>\n      </div>\n  );\n}\n\n\n\n\n\n/**\n * \n * <Auth>\n            <Switch>\n            </Switch>\n          </Auth>\n          \n *  */\n//export {UserContext};\nexport function setIsFirst(newValue){\n  isFirst=newValue;\n}\nexport default App;\n","import firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\nimport {useContext,useEffect,useState} from 'react';\nimport { SettingContext } from '../UserSettings';\nimport { Redirect } from 'react';\nimport { GetImgsInfoAllAll } from './MakeIcon/IconData';\n//import logoutFromGoogle from '../Logout';\nimport './loggedIn.css'\n\nconst Loggedin=()=>{\n  const {setIsOnline , isOnline , setUserId , userId ,userInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  const changeInfoAPI = () =>{\n    if(document.getElementById('save-button').classList.contains('active')){\n      const newDisplayName = document.getElementById('displayName-input').value;\n      const newOneWordName = document.getElementById('oneWord-input').value;\n      db.collection('users').doc(userId).update({\n        displayName : newDisplayName,\n        oneWord     : newOneWordName,\n      }).then((doc)=>{\n        let value=GetImgsInfoAllAll();\n        db.collection('users').doc(userId).update({\n          iconinfo:value\n        }).then(()=>{\n          document.location.reload();\n        }).catch(error => {\n          // error\n          console.log(error)\n        });\n      }).catch((error)=>{\n        logoutFromGoogle();\n        alert('エラーが発生しました。申し訳ありませんが、もう一度ログインをお願いします。Error:'+error);\n        console.log(error);\n      })\n    }\n  }\n\n  return(\n    <div>\n      {userInfo===null&&\n        <p>Loading userInfo...</p>\n      }\n      {userInfo&&\n        <div>\n          <ul>\n            <li><h4>表示名</h4><input id=\"displayName-input\" type=\"text\" maxLength=\"15\" defaultValue={userInfo['displayName']} \n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></li>\n            <li><h4>ひとこと</h4><h3><input id=\"oneWord-input\" type=\"text\" maxLength=\"30\" defaultValue={userInfo['oneWord']}\n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></h3></li>\n            <li><h4>名前</h4><h3>{userInfo['userName']}</h3></li>\n            <li><h4>メールアドレス</h4><h3>{userInfo['email']}</h3></li>\n            <li><h4>Googleでログインしています</h4><button onClick = {logoutFromGoogle}>ログアウト</button></li>\n          </ul>    \n          <>設定が終わったら、</><a href=\"/\">ホーム</a><>に移動してルームに参加してみましょう！</><br/>\n          <a id=\"save-button\" onClick = {changeInfoAPI} >変更を保存</a>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default Loggedin;","import React, {Component,useContext,createContext,useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\nimport MakeIcon from './UserInfo/MakeIcon/MakeIcon';\nimport {userContext} from '../App'\n\nimport firebase, { db } from '../Firebase/Firebase';  \nimport NoLogin from './NoLogin';\nimport Loggedin from './UserInfo/LoggedIn';\n\nimport './usersettings.css';\n//import logoutFromGoogle from './Logout';\n\n\nconst UserSettings = () =>{\n  const {isOnline,setIsOnline,userId,setUserId,userInfo,setUserInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  return (\n      <div>\n        {isOnline===null &&\n          <p>loading....</p>\n        }\n        {isOnline === true &&\n          <div id=\"settings\">\n            <MakeIcon />\n            <Loggedin />\n          </div>\n        }\n        {isOnline === false &&\n          <NoLogin/>\n        }\n      </div>\n  );\n}\nexport default UserSettings;\n","import React,{useContext} from 'react';\nimport firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\n\nconst RoomForm = () =>{\n  const {userId,userInfo} =useContext(userContext);\n\n  const roomAPI=()=>{\n    let roomName = document.getElementById('nameInput').value;\n    if(roomName.length > 0 && roomName.length<=15){\n      let StageId  = document.getElementById('stage').value;\n      db.collection('/rooms').add({\n        roomName     : roomName,\n        stageId      : StageId,\n        madeUserId   : userId,\n        madeUserName : userInfo['displayName'],\n        timeStamp    : firebase.firestore.FieldValue.serverTimestamp(),\n        members      : []\n      }).then((docs) => {\n      }).catch(error => {\n        // error\n        alert('エラーが発生しました。申し訳ありませんが、しばらく待ってもう一度お試しください\\nError:'+error)\n      });\n    }else{\n      alert('ルーム名は1文字以上、15文字以下である必要があります。');\n    }\n  }\n\n  return(\n    <div id=\"roomForm\">\n      <label htmlFor=\"name\" >ルームの名前</label>\n      <input id=\"nameInput\" type=\"text\" name=\"name\" maxLength=\"15\" /><br/>\n      <label htmlFor=\"stage\" defaultValue=\"0\">ステージ</label>\n      <select id=\"stage\" name=\"stage\" className=\"custom-select\">\n        <option value=\"0\">Zero</option>\n        <option value=\"1\">One</option>\n        <option value=\"2\">Two</option>\n      </select><br/>\n      <button onClick = {roomAPI}>投稿</button>\n    </div>\n  )\n}\nexport default RoomForm;","import React, {Component,useState,useEffect,current} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport firebase, { db } from '../../Firebase/Firebase';  \nimport SplitPane from 'react-split-pane';\nimport RoomForm from '../RoomForm/RoomForm';\nimport '../Rooms/rooms.css'\n\nconst Rooms = () => {\n\n  const [rooms,setRooms]=useState(null);\n  \n  useEffect(() => {\n    let unmounted=false;\n    async function roomsData() {\n      // ルームのデータを取得。\n      const unsubscribe = await db.collection('/rooms').orderBy('timeStamp', 'asc').get().then(col=> {\n        if(!unmounted){\n          // idを配列に\n          let roomids=col.docs.map(postCol => \n            postCol.id\n          );\n          // データの中身を取得\n          let value=[];\n          col.forEach((postCol) => {\n            value.push(\n              postCol.data()\n            );\n          });\n          /* 本来は変わった部分だけいい感じにすべきなんだろうけど...時間足らず...\n          col.docChanges().forEach(change => {\n            console.log(change.doc.data());\n          });\n          */\n          let rooms=[];\n          // idとデータを合体\n          for(let i = 0; i < roomids.length; i++){\n            let d = value[i][\"timeStamp\"].toDate();\n            rooms.push({\n                roomName     : value[i][\"roomName\"],\n                stageId      : value[i][\"stageId\"],\n                madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n                madeUserName : value[i][\"madeUserName\"],\n                madeUserId   : value[i][\"madeUserId\"],\n                members      : value[i][\"members\"],\n                id           : roomids[i],\n              }\n            )\n          }\n          setRooms(rooms);\n        }\n      });// ...\n    };\n\n    roomsData();\n  }, []);\n  return (\n    <div id=\"rooms\" className=\"list-group\">\n      {rooms === null && <p>Loading rooms...</p>}\n      {rooms && \n        rooms.map(room => (\n          <li key={room.id} className=\"roomsItem list-group-item d-flex\">\n            <Link to={`/room/${room.id}`}>\n              <h4 >{room.roomName}</h4>\n            </Link>\n            <h4 >作成者：{room.madeUserName}</h4>\n            <h4 >作成日時：{room.madeTime}</h4>\n            <h4 >メンバー：{room.members.length}人</h4>\n          </li>\n        ))\n      }\n      {rooms && rooms.length === 0 &&\n        <li key={\"none room\"} className=\"roomsItem list-group-item d-flex\">\n           <h4>まだルームはありません</h4>\n        </li>\n      }\n    </div>\n  )\n}\n\nexport default Rooms;","import React from 'react';\nimport SplitPane from 'react-split-pane';\nimport RoomForm from './RoomForm/RoomForm';\nimport Rooms from './Rooms/Rooms';\n\nconst Main = () => {\n  return (\n    <div id=\"roomsAndForm\">\n      <Rooms />\n      <RoomForm />\n    </div>\n  )\n}\nexport default Main;","const Error=()=>{\n  return(\n    <div>\n      <p>ページが見つかりませんでした。削除・変更されたか、URLが間違っている可能性があります。</p>\n    </div>\n  )\n}\n\nexport default Error;","import React,{createContext,useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n//import User from './User';\n//import { createStore } from 'redux'\n//import todoApp from './reducers/test.js'\n//let store = createStore(todoApp)\n\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}