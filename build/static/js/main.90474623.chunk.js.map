{"version":3,"sources":["Firebase/Firebase.js","miserarenaiyo.js","IconRender.js","NavBar/NavBar.js","Room/Stages/StageIcon/IconAccessory/ReActions.js","Room/Stages/StageIcon/IconAccessory/NewComment.js","Room/Stages/StageIcon/IconAccessory/ReActionButtons.js","Room/Stages/StageIcon/StageIcon.js","Room/Stages/Nomal/Nomal.js","Room/Stages/CommetForm/CommentForm.js","IconRandomMove.js","Room/Stages/Stage.js","CollectionDelete.js","Room/RoomHeader/RoomHeader.js","Room/Room.js","Room/Comments/Comments.js","UserSettings/UserInfo/MakeIcon/IconData.js","UserSettings/UserInfo/MakeIcon/PartsSelect/PartsSelect.js","UserSettings/UserInfo/MakeIcon/MakeIcon.js","UserSettings/NoLogin.js","App.js","UserSettings/UserInfo/LoggedIn.js","UserSettings/UserSettings.js","Main/Introduce/Introduce.js","Main/RoomForm/RoomForm.js","Main/Rooms/Rooms.js","Main/Main.js","Error/Error.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","emoteParts","Icon","props","Parts","parts","path","rot","info","emotion","indexOf","parseInt","className","where","src","style","height","iconSize","width","top","left","position","transform","Object","entries","iconInfo","map","NavBar","useContext","userContext","isOnline","userId","userInfo","useState","allrooms","setAllRooms","nowRoom","setNowRoom","useEffect","collection","doc","get","then","exists","id","data","update","room","length","FieldPath","documentId","roomInfos","existsRoom","empty","rooms","docs","forEach","push","catch","error","console","log","type","data-toggle","data-target","href","role","aria-expanded","value","ReActions","reActions","stageContext","members","roomContext","randomPos","max","Math","floor","random","renderId","element","substr","NewComment","newComment","ReActionButtons","reActionAPI","e","reAction","target","dataset","name","toUserId","user","add","from","to","timeStamp","FieldValue","serverTimestamp","setTimeout","delete","onClick","data-name","data-user","StageIcon","emotions","renderInfo","Nomal","keys","m","index","Form","newCommentTimer","setEmotions","commentAPI","content","document","getElementById","roomId","userName","set","clearTimeout","body","addEventListener","event","key","ctrlKey","emoteAPI","emote","kind","data-kind","maxLength","getRandomInt","randomMoveTimer","object","time","setInterval","topmax","leftmax","originalSizeRot","window","getComputedStyle","getPropertyValue","split","slice","randomMove","createContext","Stage","icons","splitSize","setNewComment","setActions","a","now","Date","before5min_unix","getTime","onSnapshot","emoteIds","emotes","i","emoteUnsubscribe","before6sec_unix","newCommentIds","newCommentUnsubscribe","before5sec_unix","reActionIds","reActionDatas","emotionData","newCommentData","reActionData","moveTimer","timers","clearInterval","iconparts","getElementsByClassName","IconMove","timer","Provider","defaultSize","innerHeight","stageRadius","CommentForm","deleteRoomSubCollection","subCollection","deleteDocs","batchIndex","operationCounter","batchArray","batch","ref","commit","RoomHeader","madeUserName","madeTime","madeUserId","confirm","r","Room","setRoom","isRoom","setIsRoom","comments","setComments","setSplitSize","setMembers","location","pathname","arrayUnion","d","toDate","roomData","roomName","stageId","getFullYear","getMonth","getDate","roomUnsubscribe","orderBy","commentIds","commentsUnsubscribe","memberIds","ten_memberIds","infos","memberId","displayName","oneWord","memberUnsubscribe","commentsData","membersData","minSize","maxSize","Comments","scrollIntoView","comment","toString","defaultIcons","posX","posY","sizeX","sizeY","GetIconRandom","partsData","Kinds","displayKind","imgsInfo","GetImgsInfoEach","partsName","eachPram","partsSizeMaxMin","min","GetSizeMax","GetSizeMin","partsSizeNow","SetSizeXYNow","partsRotMaxMin","GetRotMax","GetRotMin","partsRotNow","SetRotNow","PartsSelect","makeIconContext","setNowKind","nowName","nowKind","activeElement","classList","contains","remove","imgPath","MakeIcon","setNowName","nowSize","setNowSize","nowRot","setNowRot","values","partInfo","img","createElement","attach","facekind","sizeTimer","sizex","sizey","x","y","appendChild","SetImgsInfoAll","rotTimer","inputRotSet","nextRot","input","inputRot","maxRot","minRot","inputSizeSet","nextSize","inputSize","onMouseMove","mouseX","clientX","mouseY","clientY","onMouseLeave","display","onMouseEnter","clientRect","getBoundingClientRect","px","pageXOffset","py","pageYOffset","zIndex","cursor","pointerEvents","onInput","defaultValue","GetRotNow","NoLogin","setUserId","setIsOnline","setUserName","logoutFromGoogle","auth","signOut","isFirst","setPersistence","Auth","Persistence","LOCAL","provider","GoogleAuthProvider","signInWithPopup","result","uid","iconinfo","email","alert","bind","this","Loggedin","reload","onChange","newDisplayName","newOneWordName","UserSettings","setUserInfo","Introduce","RoomForm","htmlFor","StageId","Rooms","setRooms","col","roomids","postCol","roomsData","Main","Error","App","seclet","secletdata","userInfoUnsubscribe","getUserInfo","onAuthStateChanged","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.90474623.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { firebaseConfig } from '../miserarenaiyo';\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport default firebase;\nexport const db = firebase.firestore();","const googleauthConfig ={\n  apiKey   : 'dXGX0dsR2bTIVrRCPpAlBIu2',\n  clientId :'349007819425-dtm4orbqjr4ms1jp4rcothk9udk1nsoj.apps.googleusercontent.com'\n}\nconst firebaseConfig = {\n  apiKey            : \"AIzaSyBKyumc6NOpVRBhKbXxz06lN0HP5xztT8Y\",\n  authDomain        : \"emoichat-300700.firebaseapp.com\",\n  projectId         : \"emoichat-300700\",\n  storageBucket     : \"emoichat-300700.appspot.com\",\n  messagingSenderId : \"349007819425\",\n  appId             : \"1:349007819425:web:3b35c57290d3aac32d36e0\",\n  measurementId     : \"G-8HGXFZXEQT\"\n};\nexport {googleauthConfig,firebaseConfig}; ","import React, { Component, createContext,useContext,useState } from 'react';\n\n// 感情の変化させるパーツの配列。\nconst emoteParts={\n  'happy':[\n    'leftEye','rightEye','mouth'\n  ],\n  'angry':[\n    'leftEye','rightEye','mouth'\n  ],\n  'naki':[\n    'leftEye','rightEye','mouth'\n  ],\n  'yurei':[\n    'leftEye','rightEye','mouth'\n  ],\n  'thinking':[\n    'leftEye','rightEye','mouth'\n  ],\n  'henoheno':[\n    'leftEye','rightEye','mouth','nose','face'\n  ]\n}\n\n// propsはiconInfoとiconSize、emotion、where。\nconst Icon=(props)=>{\n  const Parts=(parts)=>{\n    const info=parts.info;\n    // 感情がある場合にはその感情のパス、ない場合は保存されてるパスを渡す。\n    let path;\n    //rotは、感情がある場合0で渡す\n    let rot;\n    if(props.emotion!=='null'&&props.emotion&&emoteParts[props.emotion].indexOf(info[0])!==-1){\n      path=\"../images/icon/\"+props.emotion+\"_\"+info[0]+\".png\";\n      rot=0;\n    }else{\n      path=\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\";\n      rot=parseInt(info[1][\"rot\"]);\n    }\n    return(\n      <img key={info[0]} className={props.where+\"-iconparts \"+info[0]} src={path} style={{\n        height  : (info[1][\"sizeY\"] / 300) * props.iconSize + \"px\" ,\n        width   : (info[1][\"sizeX\"] / 300) * props.iconSize + \"px\" ,\n        top     : (info[1][\"posY\"]  / 300) * props.iconSize + \"px\" ,\n        left    : (info[1][\"posX\"]  / 300) * props.iconSize + \"px\" ,\n        position :\"absolute\" , \n        transform:\"rotate(\"+rot+\"deg)\",\n      }} />\n    )\n  }\n  return (\n    <div className={props.where+\"-icon\"} style={{position:\"relative\", height:props.iconSize+\"px\", width:props.iconSize+\"px\"}}>\n      {Object.entries(props.iconInfo).map(info => (\n        <Parts key={info[0]} info={info}></Parts>\n      ))}  \n    </div>\n  );\n}\n\nexport default Icon;\n","import React,{ useContext,useEffect,useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../App';\nimport firebase, {db} from '../Firebase/Firebase'\nimport Icon from '../IconRender';\nimport './navbar.css'\n\nfunction NavBar() {\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  const [allrooms,setAllRooms] =useState(null);\n  const [nowRoom,setNowRoom] =useState(null);\n  \n  useEffect(()=>{\n    \n    if(userInfo){\n      // 一番最後に入ったルームのルーム名取得。\n      if(userInfo['room']){\n        db.collection('rooms').doc(userInfo['room']).get().then((doc)=>{\n          if(doc.exists){\n            setNowRoom([doc.id,doc.data()['roomName']]);\n          }else{\n            // そのルームが存在しないならnullに。削除されたとき対策\n            db.collection('users').doc(userId).update({\n              room : null\n            })\n          }\n        })\n      }\n      // 入室しているルームを取得\n      if(userInfo['rooms'].length!==0){\n        db.collection('rooms').where(firebase.firestore.FieldPath.documentId(),'in',userInfo['rooms']).get().then((doc)=>{\n        let roomInfos={};\n        let existsRoom=[];\n        if(!doc.empty){\n          // ルームの名前配列の作成と同時に、存在するルームid配列を作成\n          doc.docs.forEach((room)=>{\n            if(room.exists){\n              roomInfos[room.id]=room.data()['roomName'];\n              existsRoom.push(room.id);\n            }\n          });\n          setAllRooms(roomInfos);\n\n          // 存在するルームが、今設定されているルーム数より少なければ、今設定されているルームを上書き。削除された時対策\n          if(existsRoom.length!==userInfo['rooms'].length){\n            db.collection('users').doc(userId).update({\n              rooms:existsRoom\n            })\n          }\n        }else{\n          setAllRooms(false);\n          db.collection('users').doc(userId).update({\n            rooms:[]\n          })\n        }\n      }).catch((error)=>{\n        console.log('Error:'+error)\n      })\n    }else{\n      setAllRooms(false);\n    }\n  }\n  },[userInfo]);\n  return (\n    <nav className=\"navbar navbar-default\" style={{'margin':'0px'}}>\n      <div className=\"container-fluid\">\n\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n\t\t\t\t\t\t<span className=\"sr-only\">Toggle navigation</span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"/\">エモいチャット。</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\t\t\t\t\t<ul className=\"nav navbar-nav\">\n            \n            <li className=\"\"><a href=\"/\">ホーム<span className=\"sr-only\">(current)</span></a></li>\n\n            {nowRoom!==null&&\n              <li className=\"\"><a href={\"/room/\"+nowRoom[0]}>{nowRoom[1]}<span className=\"sr-only\">(current)</span></a></li>\n            }\n            <li className=\"dropdown\">\n              <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">ルームs <span className=\"caret\"></span></a>\n              <ul className=\"dropdown-menu\" role=\"menu\">\n                  {allrooms===false &&\n                    <li><p>no rooms</p></li>\n                  }\n                  {isOnline===false &&\n                    <li><p>not loggedIn</p></li>\n                  }\n                  {allrooms!==null && allrooms!==false &&\n                    Object.entries(allrooms).map((value)=>(\n                     <li key={value[0]}><a href={\"/room/\"+value[0]}>{value[1]}</a></li>\n                    ))\n                  }\n\t\t\t\t\t\t  \t</ul>\n\t\t\t\t\t\t  </li>\n          </ul>\n\t\t\t\t\t{/*検索機能はいったんコメントアウト\n          <form className=\"navbar-form navbar-left\" role=\"search\">\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-default\">Submit</button>\n          </form>\n          */}\n          {isOnline===true &&\n\t\t\t\t\t  <ul className=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t  \t<li id=\"userInfo-li\"  href=\"/userSetting\">\n                <a id='infoLink-icon' href=\"/userSetting\"></a>\n                <div href=\"/userSetting\"  className='iconMask barMask'>\n                  {userInfo !== null&&\n                    <Icon iconInfo={userInfo['iconinfo']} where=\"header\" iconSize=\"50\" />\n                  }\n                  <h6 id=\"icon-loading-text\">loading icon...</h6>\n                </div>\n              </li>\n\t\t\t\t\t  </ul>\n          }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n  );\n}\n//<Icon iconInfo={}></Icon>\n            \nexport default NavBar;\n","import React,{useContext} from 'react';\nimport { roomContext } from '../../../Room';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst ReActions = (props) =>{\n  const {reActions}=useContext(stageContext);\n  const {members}=useContext(roomContext);\n\n  function randomPos(max){\n    return  Math.floor(Math.random() * Math.floor( max ) ) - ( max / 2 );\n  }\n\n  return(\n    <div id=\"\" className=\"reActions icon-acce\">\n      {console.log(props.renderId,reActions)}\n      {reActions[props.renderId].map(element => (\n        <div key={element['id']} className=\"reaction\" style={{\"top\":-150+randomPos(100),\"left\":randomPos(100)}}>\n          <img src={\"../../../../../images/reactions/\"+element['name']+\".png\"} className=\"reactionImg\"></img>\n          {members[element['from']]['displayName'].length > 9 &&\n            <h4 className=\"reaction-from\">{members[element['from']]['displayName'].substr( 0, 9 )+\"...\"}</h4>\n          }\n          {members[element['from']]['displayName'].length <= 9 &&\n            <h4 className=\"reaction-from\">{members[element['from']]['displayName']}</h4>\n          }\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ReActions;","import React,{useContext} from 'react';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst NewComment = (props) =>{\n  const {newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"balloon1 icon-acce top\"  key={props.renderId}>\n      <div className=\"balloon1-text\">\n        <p>{newComment[props.renderId]}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NewComment;","import React, { useContext } from 'react';\nimport firebase,{db} from '../../../../Firebase/Firebase';\nimport {roomContext} from '../../../Room';\nimport {userContext} from '../../../../App';\nimport './iconacce.css'\n\nconst ReActionButtons = (props) =>{\n  const {room} = useContext(roomContext)\n  const {userId} = useContext(userContext)\n\n  const reActionAPI= (e)=>{\n    const reAction=e.target.dataset.name;\n    const toUserId=e.target.dataset.user;\n    console.log(reAction,toUserId);\n      db.collection('rooms').doc(room['id']).collection('reActions').add({\n      name      : reAction,\n      from      : userId,\n      to        : toUserId,\n      timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n    }).then((doc)=>{\n      setTimeout(function(){\n        db.collection('rooms').doc(room['id']).collection('reActions').doc(doc.id).delete();\n      }, 3000);\n    }).catch((error)=>{\n      console.log(error);\n    })\n  }\n  return(\n    <div className=\"icon-acce reActionbuttons\">\n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"good\" data-user={props.renderId}>good</button>  \n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"kusa\" data-user={props.renderId}>草</button>  \n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"question\" data-user={props.renderId}>？</button>  \n    </div>\n  )\n}\n\nexport default ReActionButtons;","import React,{useContext} from 'react';\nimport {userContext} from '../../../App';\nimport {stageContext} from '../Stage';\nimport Icon from '../../../IconRender'\nimport ReActions from './IconAccessory/ReActions'\nimport NewComment from './IconAccessory/NewComment';\nimport ReActionButtons from './IconAccessory/ReActionButtons';\nimport firebase, {db} from '../../../Firebase/Firebase'\nimport './IconAccessory/iconacce.css';\n\nconst StageIcon = (props) => {\n  const {userId} = useContext(userContext);\n  const {emotions,reActions,newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"stageIcon\">\n      {console.log(props.renderInfo)}\n      {props.renderInfo[0] !== userId && // ディスプレイネームを表示\n        <h3 className=\"stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {props.renderInfo[0] === userId && // 自分ならselfMaskクラスを追加したやつを描画\n        <h3 className=\"self-mark stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {newComment===null&&\n        <p className=\"icon-acce\">Loading NewComment...</p>\n      }\n      {newComment!==null&&\n        newComment[props.renderInfo[0]]&& // 新しいコメントがあるなら、新しいコメントを描画\n          <NewComment renderId={props.renderInfo[0]}/>\n      }\n      <Icon iconInfo={props.renderInfo[1]['iconInfo']} iconSize={200} emotion={emotions[props.renderInfo[0]]} where=\"stage\"/> \n      {props.renderInfo[0] !==userId && // 自分でないならアクションのボタンを描画\n        <ReActionButtons renderId={props.renderInfo[0]}/>\n      }\n      {reActions===null&&\n        <p className=\"icon-acce\">Loading Actions...</p>\n      }\n      {reActions!==null&&\n        reActions[props.renderInfo[0]]&&\n          <ReActions renderId={props.renderInfo[0]}/>\n      }\n    </div>\n  );\n}\n\nexport default StageIcon;","\nimport React, {Timestamp,useEffect, useContext} from 'react';\n\nimport './nomal.css';\nimport StageIcon from '../StageIcon/StageIcon'\nimport { roomContext } from '../../Room';\n\nfunction Nomal(props){\n  const {members,room} = useContext(roomContext);\n\n  return (\n    <div id=\"nomal\">\n      {console.log(Object.keys(members),room,members,room['members'],room['members'],room['members'][0],members[room['members'][0]])}\n      {Object.keys(members).map((m,index)=>(\n        <div key={'icondiv'+index} className='icondiv'>\n          <StageIcon renderInfo={[room['members'][index],members[room['members'][index]]]}/>\n        </div>\n      ))\n      }\n    </div>\n  );\n}\n\n\nexport default Nomal;\n\n","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport {roomContext} from '../../Room';\nimport { stageContext } from '../Stage';\nimport {userContext} from '../../../App';\nimport firebase, {db} from '../../../Firebase/Firebase'\n\n\n\nconst Form=()=>{\n  const {room}=useContext(roomContext);\n  const {emotions,setEmotions}=useContext(stageContext);\n  const {userId,userInfo}=useContext(userContext);\n  useEffect(()=>{\n    // スペースキーが押されたら投稿\n    document.body.addEventListener('keydown',\n    event => {\n      if (event.key === 'Enter' && event.ctrlKey) {\n        commentAPI();\n      }\n    });  \n  },[]);\n\n  var newCommentTimer;\n\n  // コメント投稿のAPI\n  function commentAPI (){  \n    let content=document.getElementById('inputComment').value;\n    // 0文字より多く、300文字より少なく入力されているなら\n    if(content.length>0&&content.length<=300){\n      // フォームの中身をなくす\n      document.getElementById('inputComment').value='';\n      let roomId=room['id'];\n      let emotion;\n      if(emotions[userId]){\n        emotion=emotions[userId];  \n      }else{\n        emotion=null;\n      }\n      db.collection('rooms').doc(roomId).collection('comments').add({\n        content   : content,\n        userId    : userId,\n        userName  : userInfo['displayName'],\n        emotion   : emotion,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n      db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).set({\n        content   : content,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      }).then(()=>{\n        console.log(newCommentTimer,\"newComment Timer\")\n        // 前のnewCommentの分が残っているなら、クリア\n        if(newCommentTimer){\n          clearTimeout(newCommentTimer);\n          console.log(\"newComment Timer Cleared!\",newCommentTimer)\n        }\n        // 6秒後にステージ用のコメントを消す。\n        newCommentTimer=setTimeout(function(){\n          db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).delete();\n        }, 6000)\n        console.log(newCommentTimer+\"newComment Timer\");\n      })\n    }\n  }\n  // エモートのAPI\n  const emoteAPI= (e)=>{\n    const emote=e.target.dataset.kind;\n    console.log(emote);\n    if(emote===null){\n      db.collection.doc(room['id']).collection('emotions').doc(userId).delete();\n    }else{\n      db.collection('rooms').doc(room['id']).collection('emotions').doc(userId).set({\n        kind      : emote,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n    }\n  }\n\n  return(\n    <div id=\"commentForm\">\n      <div id=\"emotions\">\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"henoheno\">へのへの</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"null\">なし</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"yurei\">ユーレイ</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"happy\">ニコニコ</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"angry\">怒り</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"naki\">泣き</button>  \n      </div>\n      <div className=\"form\">\n        <input id=\"inputComment\" />\n        <button type=\"submit\" maxLength=\"300\" onClick={commentAPI}>投稿</button>\n      </div>\n    </div>\n    )\n}\nexport default Form;","//アイコンをランダムに動かす処理\n\nfunction randomMoveTimer(object , time){\n  let moveMax=5;\n  return setInterval(()=>{\n    randomMove(object , moveMax , moveMax);\n  },time);\n};\n\nfunction randomMove(object , topmax , leftmax){\n  let originalValue = window.getComputedStyle(object, null).getPropertyValue('transform');// transformの中身を取得。例えばこんな感じmatrix(1, 0, 0, 1, -1.5, 0.5) what!!!\n  let originalSizeRot=originalValue.substr(7).split(',').slice(0, 4);//matrixのサイズと回転だけを取得\n  object.style.transform ='matrix('+originalSizeRot[0]+','+originalSizeRot[1]+','+originalSizeRot[2]+','+originalSizeRot[3]+',' + getRandomInt( topmax ) + ','+ getRandomInt( leftmax ) +')';\n}\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor( max ) ) - ( max / 2 );\n}\n\nexport default randomMoveTimer;\n","\nimport React, {Timestamp,useEffect,useContext,createContext,useState} from 'react';\nimport './stage.css';\nimport Nomal from './Nomal/Nomal';\nimport {roomContext} from '../Room';\nimport {userContext} from '../../App';\nimport firebase , {db} from '../../Firebase/Firebase'\nimport CommentForm from './CommetForm/CommentForm'\nimport SplitPane from 'react-split-pane';\nimport randomMoveTimer from '../../IconRandomMove';\n\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('stage-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst stageRadius=600;\nfunction Stage(props){\n  const {userId} = useContext(userContext);\n  const {icons,splitSize,room} = useContext(roomContext);\n  const [newComment,setNewComment] = useState(null);\n  const [emotions,setEmotions] = useState({});\n  const [reActions,setActions] = useState({});\n  const roomId=room['id'];\n\n  useEffect(()=>{\n    async function emotionData(){\n      var now = new Date();\n      var before5min_unix = new Date(now.getTime() - 5000);\n      console.log(before5min_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('emotions').where('timeStamp','>',before5min_unix).onSnapshot(data=> {\n        console.log(data);\n        let value=[];\n        let emoteIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let emotes={};\n        for(let i = 0; i < emoteIds.length; i++){\n          emotes[emoteIds[i]]=value[i]['kind'];\n        }\n        console.log(data,value,emotes,\"ん\");\n        setEmotions(emotes);\n      });\n      return () => emoteUnsubscribe();\n    }\n    async function newCommentData(){\n      var now = new Date();\n      // 6秒以内のnewCommentを取得\n      // 本来は、コメントが増えたタイミングでバックエンドからイベントを起こすようにした方がいいのだろうが、firebaseでは有料だったのでこのように実装\n      var before6sec_unix = new Date(now.getTime() - 6000);\n      const newCommentUnsubscribe = await db.collection('/rooms').doc(roomId).collection('newComment').where('timeStamp','>',before6sec_unix).onSnapshot(data=> {\n        let value=[];\n        let newCommentIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let newComment={};\n        for(let i = 0; i < newCommentIds.length; i++){\n          newComment[newCommentIds[i]]=value[i]['content'];\n        }\n        console.log(data,value,newComment,\"ん\");\n        setNewComment(newComment);\n      });\n      return () => newCommentUnsubscribe();\n    }\n    async function reActionData(){\n      var now = new Date();\n      var before5sec_unix = new Date(now.getTime() - 5000);\n      console.log(before5sec_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('reActions').where('timeStamp','>',before5sec_unix).onSnapshot(data=> {\n        let value=[];\n        let reActionIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let reActionDatas={};\n        for(let i = 0; i < reActionIds.length; i++){\n          if(!reActionDatas[value[i]['to']]){\n            reActionDatas[value[i]['to']]=[];\n          }\n          reActionDatas[value[i]['to']].push({\n            id   : reActionIds[i],\n            name : value[i]['name'],\n            from : value[i]['from'],\n            to   : value[i]['to'],\n          });\n        }\n        console.log(data,value,reActionDatas,\"ん\");\n        setActions(reActionDatas);\n      });\n      return () => emoteUnsubscribe();\n    }\n    emotionData();\n    newCommentData();\n    reActionData();\n  },[])\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n\n  return (\n    <stageContext.Provider value={{newComment,setNewComment,emotions,setEmotions,reActions,setActions}}>\n      <SplitPane split=\"horizontal\" defaultSize={window.innerHeight-171}>\n        <div id=\"stage\" >\n          <Nomal stageRadius={stageRadius}/>\n        </div>\n        <CommentForm />\n      </SplitPane>\n    </stageContext.Provider>\n  );\n}\nconst stageContext=createContext([]);\nexport {stageContext};\nexport default Stage;","import { db } from \"./Firebase/Firebase\";\n\nasync function deleteRoomSubCollection(roomId,subCollection) {\n  const deleteDocs = await db.collection('rooms').doc(roomId).collection(subCollection).get();\n  if(!deleteDocs.empty){\n    let batchIndex=0;\n    let operationCounter=0;\n    let batchArray=[];\n\n    batchArray.push(db.batch());\n    deleteDocs.docs.forEach((doc) => {\n      batchArray[batchIndex].delete(doc.ref);\n      operationCounter++;\n\n      if (operationCounter === 499) {\n        batchArray.push(db.batch());\n        batchIndex++;\n        operationCounter = 0;\n      }\n    });\n    batchArray.forEach(async (batch) => {await batch.commit()});\n  }\n  return true;\n}\n\nexport {deleteRoomSubCollection};\n","import React,{ useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../../App';\nimport { roomContext } from '../Room';\nimport './roomheader.css'\nimport firebase,{db} from '../../Firebase/Firebase';\nimport { deleteRoomSubCollection } from '../../CollectionDelete';\n\nconst RoomHeader=()=> {\n  const {room}=useContext(roomContext);\n  const {userId} =useContext(userContext);\n\n\n  // 削除用のAPIだがしかしサブコレクションの削除ができないとかなんとかで時間的に諦め\n  const deleteRoomAPI=()=>{\n    var result = window.confirm('この操作は取り消せません、よろしいですか？');\n    if(result){\n      const r=db.collection('/rooms').doc(room['id']);\n      const roomId=room['id']\n      if(r){\n        deleteRoomSubCollection(roomId,'newComment').then(()=>{\n          deleteRoomSubCollection(roomId,'emotions').then(()=>{\n            deleteRoomSubCollection(roomId,'reActions').then(()=>{\n              deleteRoomSubCollection(roomId,'comments').then(()=>{\n                r.delete().then(()=>{})\n              })\n            })\n          })\n        }).catch((error)=>{\n          console.log('Error:'+error)\n        });\n      }\n    }\n  }\n  \n  return (\n    <header id=\"room-header\">\n      <div id=\"room-name\">\n        <strong>{room[\"roomName\"]}</strong>\n\t\t\t</div>\n      <ul id=\"room-info\">\n        <li>参加者：{room[\"members\"].length}</li>\n\t\t\t\t<li> 作成者：{room.madeUserName}</li>\n        <li> 作成日時：{room.madeTime}</li>\n        <li> メンバー：{room.members.length}人</li>\n\t\t\t</ul>\n      {console.log(room,room.madeUserId,userId)}\n      {room.madeUserId === userId &&\n        <button id=\"room-delete\" onClick={deleteRoomAPI}>ルームを削除</button>\n      }\n    </header>\n    );\n}\n\nexport default RoomHeader;\n/*\n \n\n\n    \n*/","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Icon from '../IconRender'\nimport Stage from './Stages/Stage';\nimport SplitPane from 'react-split-pane';\nimport { Splitpanes, Pane } from 'splitpanes'\nimport 'splitpanes/dist/splitpanes.css'\nimport Comments from './Comments/Comments';\nimport firebase, { db } from '../Firebase/Firebase'; \nimport {userContext} from '../App'\nimport RoomHeader from './RoomHeader/RoomHeader';\nimport './room.css';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\nimport StageIcon from './Stages/StageIcon/StageIcon';\n\nconst defaultSplitSize=800;\n\nconst Room = () => {\n  const [room,setRoom] = useState(null);\n  const [isRoom,setIsRoom] = useState(null);\n  const [comments,setComments] = useState(null);\n  const [splitSize,setSplitSize] = useState(defaultSplitSize);\n  const [members,setMembers] = useState(null);\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  // URLのパラメータを取得\n  var Path = window.location.pathname;\n  var roomId = Path.split('/')[2];\n  \n  useEffect(()=>{\n    async function roomData() {\n      const roomUnsubscribe = await db.collection('/rooms').doc(roomId).onSnapshot(doc=> {\n        if(doc.exists){\n          let value=doc.data();\n          if(value['members'].indexOf(userId)===-1){\n            console.log('入室しました');\n            db.collection('rooms').doc(roomId).update({\n              members: firebase.firestore.FieldValue.arrayUnion(userId)\n            }).then(()=>{\n              db.collection('users').doc(userId).update({\n                rooms: firebase.firestore.FieldValue.arrayUnion(roomId)\n              }).catch((error)=>{\n                console.log('Error:'+error)\n              }).then(()=>{\n                setIsRoom(true);\n              })\n              db.collection('users').doc(userId).update({\n                room: roomId\n              }).catch((error)=>{\n                console.log('Error:'+error)\n              })\n            }).catch((error)=>{\n              console.log('Error:'+error)\n            })\n          }else{\n            setIsRoom(true);\n          }\n          let d = value['timeStamp'].toDate();\n          let roomData={\n            id           : doc.id,\n            roomName     : value['roomName'],\n            stageId      : value['stageId'],\n            madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n            madeUserId   : value['madeUserId'],\n            madeUserName : value['madeUserName'],\n            members      : value['members'],\n\n          }\n          setRoom(roomData);\n        }else{\n          setIsRoom(false);\n        }\n      });\n      return () => roomUnsubscribe();\n    };\n    roomData();\n  },[])\n\n  useEffect(() => {\n    async function commentsData(){\n      if(isRoom) {\n        console.log(room)\n        const commentsUnsubscribe = await db.collection('/rooms').doc(roomId).collection('comments').orderBy('timeStamp', 'asc').onSnapshot(data=> {\n          let commentIds=data.docs.map(doc => \n            doc.id\n          );\n          let value=[];\n          data.forEach((doc) => {\n            value.push(\n              doc.data()\n            );\n          });\n          let comments=[];\n           for(let i = 0; i < commentIds.length; i++){\n            comments.push(\n              {\n                id       : commentIds[i],\n                content  : value[i]['content'],\n                emotion  : value[i]['emotion'], \n                userId   : value[i]['userId'],\n              }\n            )\n          }\n          console.log(commentIds,comments,data);\n          setComments(comments);\n        });\n        return () => commentsUnsubscribe();\n      }\n    }\n    \n    async function membersData(){\n      if(isRoom){\n        let value={};\n        const memberUnsubscribe= await db.collection('rooms').doc(roomId).onSnapshot(async doc=>{\n          const memberIds=doc.data()['members'];\n          console.log(memberIds);\n          if(memberIds&&memberIds.length!==0){\n            for(let i=0;i<Math.floor(memberIds.length/10)+1; i++){\n              let ten_memberIds=memberIds.slice( i * 10 , (i * 10) + 10 );\n              await db.collection('users').where('userId','in',ten_memberIds).get().then(infos=>{\n                if(!infos.empty){\n                  console.log(infos);\n                  infos.docs.forEach(info=>{\n                    let data=info.data();\n                    let memberId=info.data()['userId'];\n                    value[memberId]={\n                      displayName : data['displayName'],\n                      oneWord     : data['oneWord'],\n                      iconInfo    : data['iconinfo']\n                    }\n                  })\n                  console.log(value,infos,infos.docs);\n                  console.log(\"member\",Math.floor(memberIds.length/10)+1,i)\n                  if(i+1 >= Math.floor(memberIds.length/10)+1){\n                    console.log(\"member load fin:\"+value,value.length);\n                    setMembers(value);\n                  }\n                }  \n              });\n            }\n          }\n        });\n        return () => memberUnsubscribe();\n      }\n    }\n    \n    commentsData();\n    membersData();\n  \n    //unsubscribe();\n    \n  }, [isRoom]);\n  \n  \n//  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n\n  \n  //if (this.state.room === null) return <p>Loading ...</p>;\n  return (\n    //<Nomal />\n        //<Icon iconInfo={room.iconInfo[0].value}/>\n    <div className=\"container\">\n      {isRoom===null && <p>Loading Room...</p>}\n      {isRoom===true&&\n        <roomContext.Provider value={{members,setMembers,room,setRoom,comments,setComments,splitSize,setSplitSize}}>\n          {room===null && <p>Loading Room...</p>}\n          {room &&\n            <div className=\"row\">\n              <RoomHeader />\n              <SplitPane split=\"vertical\" minSize={300} defaultSize={defaultSplitSize} maxSize={1000} style={{\"height\":window.innerHeight-101}}>\n                <div id='left' style={{'display':'flex'}}>\n                  {members === null && <p>Loading Stage...</p>}\n                  {members !== null&&<Stage/>}\n                </div>\n                <div id=\"right\" >\n                  {comments === null && members !== null && <p>Loading Ccomments...</p>}\n                  {comments !==null && members !== null && <Comments />}\n                </div>\n              </SplitPane>\n            </div>\n          }\n        </roomContext.Provider>\n      }\n      {isRoom==false &&\n        <Redirect to = {'/error'} />\n      }\n    </div>\n  )\n}\nconst roomContext=createContext([]);\nexport {roomContext};\nexport default Room;","import React, {Component,useContext, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {roomContext} from '../Room';\nimport Icon from '../../IconRender';\nimport {db} from '../../Firebase/Firebase'\nimport './comments.css'\nimport randomMoveTimer from '../../IconRandomMove';\n\nconst iconSize=50;\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('comments-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst Comments=()=>{\n  const {comments,room,members} = useContext(roomContext);\n  var Path = window.location.pathname;\n\n  useEffect(()=>{\n    let target = document.getElementById('scroll-inner');\n    console.log(target);\n    target.scrollIntoView(false);\n  \n\n    let moveTimer=IconMove();\n  \n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n  return (\n    <div id='comments' className=\"list-group\">\n      <div id=\"scroll-inner\">\n        {comments && members &&\n          comments.map(comment=>(\n            <div key={comment.id.toString()} className=\"comment list-group-item d-flex\">\n              <div className='iconMask commentIcon'>\n                <Icon iconInfo={members[comment.userId]['iconInfo']} iconSize={iconSize} emotion={comment.emotion} where='comments'/>\n              </div>\n              <div>\n                {console.log(members)}\n                <strong className=\"userName mb-1\" style={{}}>{members[comment.userId]['displayName']}</strong>\n                <h3 className=\"commentContent\" style={{}}>{comment.content}</h3>\n              </div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Comments;","const defaultIcons=[\n  {\n    'face'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n    'hair'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n    'leftEye'   : {posX : 90  , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n    'rightEye'  : {posX : 160 , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n    'nose'      : {posX : 120 , posY : 180 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n    'mouth'     : {posX : 120 , posY : 210 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n    'other'     : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'none'},\n  },\n  {\n    'face'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'henoheno'},\n    'hair'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'none'},\n    'leftEye'   : {posX : 90  , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'henoheno'},\n    'rightEye'  : {posX : 160 , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'henoheno'},\n    'nose'      : {posX : 120 , posY : 180 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'henoheno'},\n    'mouth'     : {posX : 120 , posY : 210 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'henoheno'},\n    'other'     : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'henoheno'},\n  },\n  {\n    'face'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'maru'},\n    'hair'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'cat'},\n    'leftEye'   : {posX : 90  , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'cat'},\n    'rightEye'  : {posX : 160 , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'cat'},\n    'nose'      : {posX : 120 , posY : 180 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'cat'},\n    'mouth'     : {posX : 120 , posY : 210 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'cat'},\n    'other'     : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'hige'},\n  },\n  {\n    'face'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'komugi'},\n    'hair'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'kaku'},\n    'leftEye'   : {posX : 90  , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'red'},\n    'rightEye'  : {posX : 160 , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'blue'},\n    'nose'      : {posX : 120 , posY : 180 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'pig'},\n    'mouth'     : {posX : 120 , posY : 210 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'fang'},\n    'other'     : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'horns'},\n  },\n  {\n    'face'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'monster'},\n    'hair'      : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 290 , rot : 0 , kind : 'tyuni'},\n    'leftEye'   : {posX : 90  , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'tyome'},\n    'rightEye'  : {posX : 160 , posY : 150 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'tyome'},\n    'nose'      : {posX : 120 , posY : 180 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'hole'},\n    'mouth'     : {posX : 120 , posY : 210 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'tooth'},\n    'other'     : {posX : 0   , posY : 0   , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'glasses'},\n  },\n];\nfunction GetIconRandom(){\n  return defaultIcons[Math.floor(Math.random() * Math.floor(defaultIcons.length))]\n}\n\n// パーツボタンの情報ズ。一応拡張性のためにKindsの中身2次元連想配列(？)にしてるけどいらないかも。\nconst partsData=\n{ \n  'face'      : { displayName : '顔'   , Kinds : {'henoheno' : {displayKind : 'じ'}, 'nomal' : {displayKind : 'フツー'} ,'monster' : {displayKind : '化物'},'komugi' : {displayKind : '小麦色'},'maru' : {displayKind : 'まる'} }} ,\n  'hair'      : { displayName : '髪'   , Kinds : { 'none' : {displayKind : 'なし'}   ,'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ケモミミ'},'tyuni' : {displayKind : '厨二'} ,'kaku' : {displayKind : 'カクガリ'}} } ,\n  'leftEye'   : { displayName : '左目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'rightEye'  : { displayName : '右目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'},'nomal' : {displayKind : 'フツー'},'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'nose'      : { displayName : '鼻'   , Kinds : { 'henoheno' : {displayKind : 'も'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : '逆三角'},'pig' : {displayKind : 'ぶたっぱな'} } },\n  'mouth'     : { displayName : '口'   , Kinds : { 'henoheno' : {displayKind : 'へ'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ダブリュー'},'fang' : {displayKind : '牙'},'tooth' : {displayKind : '歯'} }} ,\n  'other'     : { displayName : 'その他', Kinds : { 'none' : {displayKind : 'なし'},'horns' : {displayKind : 'ツノ'} ,'glasses' : {displayKind : 'めがね'},'henoheno' : {displayKind : 'へのへの'} }} ,\n}\nfunction GetPartsAll(){\n  return partsData;\n}\nfunction GetPartsData(partsName) {\n  return partsData[partsName];\n}\nfunction GetPartsKinds(partsName) {\n  console.log(partsName)\n  return partsData[partsName]['Kinds'];\n}\n// これがデータベースに保存される。今の値。stateが読み込まれたとき自動で上書きされてる。\nlet imgsInfo={\n  'face'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'hair'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'leftEye'   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'rightEye'  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'nose'      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'mouth'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'other'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n};\nfunction GetImgsInfoEach(partsName,eachPram) {\n  return imgsInfo[partsName][eachPram];\n}\nfunction GetImgsInfoAll(partsName) {\n  return imgsInfo[partsName];\n}\nfunction GetImgsInfoAllAll() {\n  return imgsInfo;\n}\nfunction SetImgsInfoEach(partsName,eachPram,value) {\n  imgsInfo[partsName][eachPram]=value;\n}\nfunction SetImgsInfoAll(partsName,values) {\n  imgsInfo[partsName]=values;\n}\nfunction SetImgsInfoAllAll(values) {\n  imgsInfo=values;\n}\n\n// サイズの上限下限の設定\nconst partsSizeMaxMin={\n  'face'      : {max : 350 , min : 200 },\n  'hair'      : {max : 350 , min : 200 },\n  'leftEye'   : {max : 70  , min : 15  },\n  'rightEye'  : {max : 70  , min : 15  },\n  'mouth'     : {max : 100 , min : 15  },\n  'nose'      : {max : 100 , min : 15  },\n  'other'     : {max : 400 , min : 30  },\n};\nfunction GetSizeMax(partsName) {\n  return partsSizeMaxMin[partsName]['max'];\n}\nfunction GetSizeMin(partsName) {\n  return partsSizeMaxMin[partsName]['min'];\n}\nfunction GetSizeMaxMin(partsName) {\n  return partsSizeMaxMin[partsName];\n}\n\n// パーツの現在の大きさ。\nlet partsSizeNow={\n  'face'      : {sizeX : 300 , sizeY : 300 },\n  'hair'      : {sizeX : 300 , sizeY : 300 },\n  'leftEye'   : {sizeX : 30  , sizeY : 30  },\n  'rightEye'  : {sizeX : 30  , sizeY : 30  },\n  'mouth'     : {sizeX : 40  , sizeY : 40  },\n  'nose'      : {sizeX : 40  , sizeY : 40  },\n  'other'      : {sizeX : 300  , sizeY : 300  },\n}\nfunction GetSizeXYNow(partsName) {\n  return partsSizeNow[partsName];\n}\nfunction GetSizeXNow(partsName) {\n  console.log(partsName,partsSizeNow[partsName]['sizeX']);\n  return partsSizeNow[partsName]['sizeX'];\n}\nfunction GetSizeYNow(partsName) {\n  return partsSizeNow[partsName]['sizeY'];\n}\nfunction SetSizeXYNow(partsName,sizeX,sizeY) {\n  partsSizeNow[partsName]={sizeX : sizeX , sizeY : sizeY };\n}\nfunction SetSizeXNow(partsName,sizeX) {\n  partsSizeNow[partsName]['sizeX'] = sizeX;\n}\nfunction SetSizeYNow(partsName,sizeY) {\n  partsSizeNow[partsName]['sizeY'] = sizeY;\n}\n\n// パーツの回転の上限下限、今のところ意味ない\nconst partsRotMaxMin={\n  'face'      : {max : 360 , min : 0 ,},\n  'hair'      : {max : 360 , min : 0 ,},\n  'leftEye'   : {max : 360 , min : 0 ,},\n  'rightEye'  : {max : 360 , min : 0 ,},\n  'mouth'     : {max : 360 , min : 0 ,},\n  'nose'      : {max : 360 , min : 0 ,},\n  'other'     : {max : 360 , min : 0 ,},\n};\nfunction GetRotMax(partsName) {\n  return partsRotMaxMin[partsName]['max'];\n}\nfunction GetRotMin(partsName) {\n  return partsRotMaxMin[partsName]['min'];\n}\nfunction GetRotMaxMin(partsName) {\n  return partsRotMaxMin[partsName];\n}\n\n// パーツの現在の角度\nlet partsRotNow={\n  'face'      : 0,\n  'hair'      : 0,\n  'leftEye'   : 0,\n  'rightEye'  : 0,\n  'mouth'     : 0,\n  'nose'      : 0,\n  'other'      : 0,\n}\nfunction GetRotNow(partsName) {\n  return partsRotNow[partsName];\n}\nfunction SetRotNow(partsName,value) {\n  console.log(value);\n  partsRotNow[partsName]=value;\n}\n\nexport {\n  GetIconRandom,\n  GetPartsAll,GetPartsData,GetPartsKinds,\n  GetImgsInfoAllAll,GetImgsInfoAll,GetImgsInfoEach,SetImgsInfoAllAll,SetImgsInfoAll,SetImgsInfoEach,\n  GetSizeXYNow,GetSizeYNow,GetSizeXNow,SetSizeXYNow,SetSizeYNow,SetSizeXNow,\n  GetSizeMax,GetSizeMin,GetSizeMaxMin,\n  GetRotNow,SetRotNow,\n  GetRotMax,GetRotMin,GetRotMaxMin,\n}","import React, { useState, useContext  } from 'react';\nimport { act } from 'react-dom/test-utils';\nimport {GetPartsKinds} from '../IconData';\nimport {makeIconContext} from '../MakeIcon';\nimport '../makeIcon.css'\n\n\nconst PartsSelect=()=>{\n  const {setNowKind,nowKind,nowName} = useContext(makeIconContext);\n\n\n  return(\n    <div id=\"makeIconButtons\" className={nowName+\"button\"}>\n      {console.log(nowName)}\n      {Object.entries(GetPartsKinds(nowName)).map((value)=>(\n        <button \n          key={value[0]} \n          className={value[0]+\" \"+nowName+\" \"+\"iconKindButton btn-text-3d\"} \n          data-name={nowName} data-kind={value[0]}  \n          onClick={(e)=>{\n            setNowKind(e.target.dataset.kind);\n            document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n              if(activeElement.classList.contains('active')){\n                activeElement.classList.remove('active');\n              }\n            });\n            e.target.classList.add('active');\n          }}\n        >{value[1][\"displayKind\"]}</button>\n      ))}\n    </div>\n  )\n}\n//  \n// data-partsName={nowName}\n\nexport default PartsSelect;","import React, {createContext, useContext, useState, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './makeIcon.css'\nimport {GetImgsInfoAllAll, GetImgsInfoEach, GetPartsAll, GetRotMax, GetRotMin, GetRotNow, GetSizeMax, GetSizeMin, GetSizeXNow, SetImgsInfoAll, SetImgsInfoAllAll, SetRotNow, SetSizeNowAll, SetSizeXYNow} from './IconData';\nimport firebase,{db} from '../../../Firebase/Firebase'\nimport {userContext} from '../../../App';\nimport PartsSelect from './PartsSelect/PartsSelect';\n\nconst imgPath='./images/icon/';\n\nconst MakeIcon =()=> {\n  const [ nowKind , setNowKind ] = useState(null); \n  const [ nowName , setNowName ] = useState('face');\n  const [ nowSize , setNowSize ] = useState(30);\n  const [ nowRot  , setNowRot  ] = useState(0);\n \n  const {userInfo}=useContext(userContext);\n\n  useEffect(()=>{\n    if(userInfo){\n      // 今のアイコンの情報を描画したりデータにセットしたり。\n      SetImgsInfoAllAll(userInfo['iconinfo']);\n      Object.entries(userInfo['iconinfo']).forEach(partInfo => {\n        SetSizeXYNow(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY']);\n        SetRotNow(partInfo[0],partInfo[1]['rot']);\n        let img=document.getElementById(partInfo[0]+'Img');\n        if(!img){\n          img = document.createElement('img');\n          img.classList.add('set-image');\n          img.classList.add(partInfo[0]);\n          img.id=partInfo[0]+'Img';\n        }\n        attach(img,partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[1]['posX'],partInfo[1]['posY'],partInfo[1]['rot'],partInfo[1]['kind'],partInfo[0]);\n      });\n    }\n    const facekind=GetImgsInfoEach(nowName,'kind');\n    // 選択してあるものをactiveに\n    document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n      console.log(activeElement);\n      if(activeElement.classList.contains(nowName)){\n        activeElement.classList.add('active');\n      }\n    });\n    document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n      if(activeElement.classList.contains(facekind)){\n        activeElement.classList.add('active');\n      }\n    });\n    setNowKind(GetImgsInfoEach(nowName,'kind'));\n  },[userInfo]);\n  \n  useEffect(()=>{\n    const facekind=GetImgsInfoEach(nowName,'kind');\n    document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n      if(activeElement.classList.contains('active')){\n        activeElement.classList.remove('active');\n      }\n      if(activeElement.classList.contains(facekind)){\n        activeElement.classList.add('active');\n      }\n    });\n    setNowKind(facekind);\n  },[nowName])\n\n  // マウスが動いた時に画像を追従させる関数\n  const mouthmove = e =>{\n    // マウスの位置ー画像のサイズの半分で計算。\n    let mouseX = e.clientX-Math.floor(nowSize/2);\n    let mouseY = e.clientY-Math.floor(nowSize/2);\n    // 無限にレンダーがかかりそうなのでここはステートを使ってない\n    document.getElementById('traceImage').style.top  = mouseY + 'px';\n    document.getElementById('traceImage').style.left = mouseX + 'px';\n  }\n\n\n  // 画像を配置する関数\n  const attachByClick = e =>{\n    inputSizeSet();\n    inputRotSet();\n    let img=document.getElementById(nowName+'Img');\n    if(!img){\n      img = document.createElement('img');\n      img.classList.add('set-image');\n      //img.classList.add(nowName+'_'+nowKind);\n      img.classList.add(nowName+'Img');\n      img.id=(nowName);\n    }\n    let clientRect = document.getElementById('icon-space').getBoundingClientRect() ;\n\n    let px = window.pageXOffset + clientRect.left ;\n\n    // ページの上端から、要素の上端までの距離\n    let py = window.pageYOffset + clientRect.top ;\n    let mouseX =e.clientX;\n    let mouseY =e.clientY;\n\n    let x = mouseX-px-Math.floor(document.getElementById('sizeInput').value / 2);\n    let y = mouseY-py-Math.floor(document.getElementById('sizeInput').value / 2);\n    attach(img,document.getElementById('sizeInput').value,document.getElementById('sizeInput').value,x,y,document.getElementById('rotInput').value,nowKind,nowName)\n    document.getElementById('save-button').classList.add('active')\n  }\n  const attach=(img,sizex,sizey,x,y,rot,kind,name)=>{\n    img.src             = imgPath + kind + '_' + name + '.png';\n    img.style.width     = sizex + 'px';\n    img.style.height    = sizey + 'px';\n    img.style.position  = 'absolute';\n    img.style.left      = x + 'px';\n    img.style.top       = y + 'px';\n    img.style.transform = 'rotate('+rot+'deg)';\n    let values={\n      posX  : x     ,\n      posY  : y     ,\n      sizeX : sizex ,\n      sizeY : sizey ,\n      rot   : rot   ,\n      kind  : kind\n    };\n    document.getElementById('icon-space').appendChild(img);\n    SetImgsInfoAll(name,values);\n  }\n\n\n\n  // \n  const tracehide=()=>{\n    document.getElementById('traceImage').style.display = 'none';\n  }\n\n  function traceshow(){\n    document.getElementById('traceImage').style.display = 'block';\n  }\n\n  \n\n\n  let sizeTimer;\n  const sizeChange = (e) => {\n    if(sizeTimer){\n      clearTimeout(sizeTimer);\n    }\n    sizeTimer = setTimeout(inputSizeSet, 1000);\n      \n\n//      document.getElementById('traceImage').style.width = e.target.value+'px';\n//      document.getElementById('traceImage').style.height = e.target.value+'px';\n  }\n\n  let rotTimer;\n  const rotChange = (e) => {\n    if(rotTimer){\n      clearTimeout(rotTimer);\n    }\n\n    rotTimer = setTimeout(inputRotSet, 1000);\n      //document.getElementById('traceImage').style.transform ='rotate(' +e.target.value+'deg)';\n  }\n\n  // 回転をmaxminとかいい感じにてくれる関数\n  const inputRotSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input    = document.getElementById('rotInput');\n    let inputRot = input.value;\n    let nextRot;\n    let maxRot   = GetRotMax(name);\n    let minRot   = GetRotMin(name);\n\n    if(maxRot < inputRot){\n      nextRot=maxRot\n    }else if(minRot > inputRot){\n      nextRot=minRot\n    }else{\n      nextRot=inputRot\n    }\n    SetRotNow(name , nextRot);\n    setNowRot(nextRot);\n    input.value=nextRot;\n  }\n  // サイズをmaxminとかいい感じにてくれる関数\n  const inputSizeSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input     = document.getElementById('sizeInput');\n    let inputSize = input.value;\n    let nextSize;\n    let maxSize   = GetSizeMax(name);\n    let minSize   = GetSizeMin(name);\n    \n    if(maxSize < inputSize){\n      nextSize = maxSize\n    }else if(minSize > inputSize){\n      nextSize = minSize;\n    }else{\n      nextSize = inputSize;\n    }\n    SetSizeXYNow(name , nextSize , nextSize);\n    setNowSize(nextSize);\n    input.value=nextSize;\n  }\n\n  const {userId} = useContext(userContext);\n    return (\n      <div id=\"makeIcon\">\n        {userInfo===null&&\n          <p>loading infos...</p>\n        }\n        {userInfo!==null&&\n          <makeIconContext.Provider value = {{nowKind , setNowKind , nowName , setNowName , nowSize , setNowSize , nowRot , setNowRot}}>\n          <div  id = \"icon-space\" className=\"iconMask\"  onMouseMove = {mouthmove}  onMouseLeave = {tracehide}  onMouseEnter = {traceshow}  onClick = {attachByClick} />\n          {console.log(imgPath + nowKind + nowName + \"png\")}\n          <img  id = \"traceImage\"  src = { imgPath + nowKind + \"_\" + nowName + \".png\" }  style = {{ height : nowSize + \"px\" , width : nowSize + \"px\", zIndex : \"100\", position : \"absolute\", display : \"none\", cursor : \"none\", pointerEvents : \"none\",transform : \"rotate(\" + nowRot + \"deg)\" }}>\n          </img>\n          <div>\n            回転\n            <input  type = \"number\"  id = \"rotInput\"  onInput = {rotChange}   min = {GetRotMin(nowName)}  max = {GetRotMax(nowName)} defaultValue = \"0\"></input>\n            サイズ\n            <input  type = \"number\"  id = \"sizeInput\"  onInput = {sizeChange}  min = {GetSizeMin(nowName)}  max = {GetSizeMax(nowName)}  defaultValue = \"30\"></input>\n          </div>\n          <div  id = \"name-buttons\" className=\"\">\n          {Object.entries(GetPartsAll()).map((value) => (\n            // 「顔」とか「髪」とかのボタンを描画。\n            <button  key = {value[0]} id={value[0]+\"IconNameButton\"}  className = {value[0]+\" \"+\"iconNameButton btn-border_buttom\"}  data-name = {value[0]}  \n              onClick = {(e)=>{\n                // 「顔」とかのボタンの今までアクティブついてたの消して、今押されたやつにactiveを追加。その他サイズや回転なども変更\n                document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n                  if(activeElement.classList.contains('active')){\n                    activeElement.classList.remove('active');\n                  }\n                });\n                setNowName(e.target.dataset.name);\n                setNowKind(GetImgsInfoEach(e.target.dataset.name,'kind'));\n                document.getElementById('sizeInput').value=GetSizeXNow(e.target.dataset.name);\n                document.getElementById('rotInput').value=GetRotNow(e.target.dataset.name);\n                inputSizeSet(e.target.dataset.name);\n                inputRotSet(e.target.dataset.name);\n              }}\n            >{value[1][\"displayName\"]}</button>\n          ))}\n          </div>\n          <PartsSelect />\n          </makeIconContext.Provider>\n          }\n      </div>\n    )\n}\nconst makeIconContext = createContext([])\nexport {makeIconContext};\nexport default MakeIcon;","import firebase,{db} from '../Firebase/Firebase';\nimport {Redirect} from 'react-router-dom';\nimport {useContext} from 'react';\nimport { setIsFirst, userContext } from '../App';\nimport { GetIconRandom } from './UserInfo/MakeIcon/IconData';\n\nconst NoLogin=()=>{\n  const {setUserId,setUserName,setIsOnline,isOnline} = useContext(userContext);\n\n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n\n  // ログイン処理\n  const loginWithGoogle = () => {\n    // もうauthにアカウントがあるかとかかな？...\n    setIsFirst(true);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(function() {\n\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      // サインインしてもらう\n      firebase.auth().signInWithPopup(provider)\n      .then(async function(result) {\n        await db.collection('/users').where('userId','==',result.user.uid).get().then(function(doc) {\n          console.log(doc);\n          // まだアカウントないなら\n          if (doc.empty) {\n            console.log(\"No user\");\n            db.collection('users').doc(result.user.uid).set({\n              userId      : result.user.uid,\n              displayName : 'ゲスト',\n              oneWord     : '',\n              room        : null,\n              rooms       : [],\n              iconinfo    :(GetIconRandom())\n            }).then(async (doc)=>{\n              await db.collection('users').doc(result.user.uid).collection('seclet').doc(result.user.uid).set({\n                userName : result.user.displayName,\n                email    : result.user.email,\n              }).then(()=>{\n                console.log('login fin');    \n                setIsOnline(true);\n                setUserId(result.user.uid);\n              }).catch((error)=>{\n                db.collection('users').doc(result.user.uid).delete().then(()=>{\n                  logoutFromGoogle();\n                  alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n                  console.log(error);\n                })\n              })\n            }).catch((error)=>{\n              logoutFromGoogle();\n              alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n              console.log(error);\n            })\n          }else{\n            setIsOnline(true);\n            setUserId(result.user.uid);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"Error : \", error);\n        });\n      }.bind(this))\n        .catch(function(error) {\n          alert(\"Googleでサインインできませんでした。 Error: \" , error);\n          console.log(error);\n          return false;\n        }\n      );\n    }.bind(this));\n  }\n  \n  return(\n    <div>\n      {isOnline === true &&\n        <div>\n          ログインしました！\n          <Redirect to = \"/userSetting\"/>\n        </div>\n      }\n      {isOnline === false &&\n        <div>\n          ログインしていません\n          <button onClick = {loginWithGoogle}>\n            Googleでログイン\n          </button>\n        </div>\n      }\n      {isOnline === null &&\n        <>loading aouth...</>\n      }\n    </div>\n    \n  )\n}\n\nexport default NoLogin;","import React, { Component,getState, createContext,useContext,useState,useEffect } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\nimport NavBar from './NavBar/NavBar';\nimport Comments from './Room/Comments/Comments';\nimport MakeIcon from './UserSettings/UserInfo/MakeIcon/MakeIcon';\nimport UserSettings from './UserSettings/UserSettings';\nimport Room from './Room/Room';\nimport Main from './Main/Main';\nimport { useWorker } from 'react-hooks-worker';\n\nimport {googleauthConfig} from './miserarenaiyo';\nimport firebase, { db } from './Firebase/Firebase';  \nimport NoLogin from './UserSettings/NoLogin';\nimport Error from './Error/Error';\n\n//ユーザー系のcontext\nexport const userContext=createContext();\n\nlet isFirst=false;\n\nconst App = () => {\n  //ユーザー系のステート\n  const [isOnline , setIsOnline] = useState(null);\n  const [userId   , setUserId  ] = useState(null);\n  const [userInfo , setUserInfo] = useState(null);\n  \n  useEffect(() => {\n    async function getUserInfo(){\n      if(userId){\n        const userInfoUnsubscribe = await db.collection('users').doc(userId).onSnapshot(doc=>{\n          db.collection('users').doc(userId).collection('seclet').doc(userId).get().then(seclet=>{\n            let data=doc.data();\n            let secletdata=seclet.data();\n            setUserInfo({\n              userName    : secletdata['userName'] ,\n              email       : secletdata['email']    ,\n              displayName : data['displayName']    ,\n              oneWord     : data['oneWord']        ,\n              iconinfo    : data['iconinfo']       ,\n              rooms       : data['rooms']          ,\n              room        : data['room']\n            });\n          });\n        });\n        return () => userInfoUnsubscribe();\n      }\n    }\n    getUserInfo();\n  },[userId]);\n\n  useEffect(() => {\n    //ログイン時にステート更新する処理\n    firebase.auth().onAuthStateChanged(async function (user) {\n      let isOnline = false;\n      let userId = null;\n      if (user) {\n        userId   = user.uid;\n        isOnline = true;\n      }\n      // 初回ログイン時、データの追加より先に、stateが更新され、エラーになってしまうため、その対策。\n      if(!isFirst){\n        setUserId(userId);\n        setIsOnline(isOnline);\n      };\n      //this.setState({isOnline:isOnline})\n      //this.setState({userId:userId})\n    }.bind(this));\n  })\n  // ルーティングはここでやる\n  return (\n      <div>\n      <userContext.Provider value={{isOnline , setIsOnline , userId , setUserId, userInfo , setUserInfo }}>\n        <NavBar/>\n        <Switch>\n          <Route exact path = '/login' component = {NoLogin} /> \n          {isOnline === false &&<Redirect to = {'/login'} />}\n          {isOnline === true &&\n            <Switch>\n              <Route exact path='/error'       component = {Error}/>\n              <Route exact path='/'            component = {Main}/>\n              <Route exact path='/userSetting' component = {UserSettings}/>\n              <Route exact path='/room/:id'    component = {Room}/>\n              <Redirect to = {'/error'} />\n            </Switch>\n          }\n          <>loading...</>\n        </Switch>\n      </userContext.Provider>\n      </div>\n  );\n}\n\n\n\n\n\n/**\n * \n * <Auth>\n            <Switch>\n            </Switch>\n          </Auth>\n          \n *  */\n//export {UserContext};\nexport function setIsFirst(newValue){\n  isFirst=newValue;\n}\nexport default App;\n","import firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\nimport {useContext,useEffect,useState} from 'react';\nimport { SettingContext } from '../UserSettings';\nimport { Redirect } from 'react';\nimport { GetImgsInfoAllAll } from './MakeIcon/IconData';\n//import logoutFromGoogle from '../Logout';\nimport './loggedIn.css'\n\nconst Loggedin=()=>{\n  const {setIsOnline , isOnline , setUserId , userId ,userInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n    document.location.reload();\n  }\n\n  const changeInfoAPI = () =>{\n    if(document.getElementById('save-button').classList.contains('active')){\n      const newDisplayName = document.getElementById('displayName-input').value;\n      const newOneWordName = document.getElementById('oneWord-input').value;\n      db.collection('users').doc(userId).update({\n        displayName : newDisplayName,\n        oneWord     : newOneWordName,\n      }).then((doc)=>{\n        let value=GetImgsInfoAllAll();\n        db.collection('users').doc(userId).update({\n          iconinfo:value\n        }).then(()=>{\n          document.location.reload();\n        }).catch(error => {\n          // error\n          console.log(error)\n        });\n      }).catch((error)=>{\n        logoutFromGoogle();\n        alert('エラーが発生しました。申し訳ありませんが、もう一度ログインをお願いします。Error:'+error);\n        console.log(error);\n      })\n    }\n  }\n\n  return(\n    <div>\n      {userInfo===null&&\n        <p>Loading userInfo...</p>\n      }\n      {userInfo&&\n        <div>\n          <ul>\n            <li><h4>表示名</h4><input id=\"displayName-input\" type=\"text\" maxLength=\"15\" defaultValue={userInfo['displayName']} \n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></li>\n            <li><h4>ひとこと</h4><h3><input id=\"oneWord-input\" type=\"text\" maxLength=\"30\" defaultValue={userInfo['oneWord']}\n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></h3></li>\n            <li><h4>名前</h4><h3>{userInfo['userName']}</h3></li>\n            <li><h4>メールアドレス</h4><h3>{userInfo['email']}</h3></li>\n            <li><h4>Googleでログインしています</h4><button onClick = {logoutFromGoogle}>ログアウト</button></li>\n          </ul>    \n          <>設定が終わったら、</><a href=\"/\">ホーム</a><>に移動してルームに参加してみましょう！</><br/>\n          <a id=\"save-button\" onClick = {changeInfoAPI} >変更を保存</a>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default Loggedin;","import React, {Component,useContext,createContext,useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\nimport MakeIcon from './UserInfo/MakeIcon/MakeIcon';\nimport {userContext} from '../App'\n\nimport firebase, { db } from '../Firebase/Firebase';  \nimport NoLogin from './NoLogin';\nimport Loggedin from './UserInfo/LoggedIn';\n\nimport './usersettings.css';\n//import logoutFromGoogle from './Logout';\n\n\nconst UserSettings = () =>{\n  const {isOnline,setIsOnline,userId,setUserId,userInfo,setUserInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  return (\n      <div>\n        {isOnline===null &&\n          <p>loading....</p>\n        }\n        {isOnline === true &&\n          <div id=\"settings\">\n            <MakeIcon />\n            <Loggedin />\n          </div>\n        }\n        {isOnline === false &&\n          <NoLogin/>\n        }\n      </div>\n  );\n}\nexport default UserSettings;\n","import { useEffect } from \"react\";\nimport randomMoveTimer from \"../../IconRandomMove\";\nimport Icon from \"../../IconRender\";\nimport { GetIconRandom } from \"../../UserSettings/UserInfo/MakeIcon/IconData\";\nimport './introduce.css'\n\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('intro-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\n\nconst Introduce = () => {\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  });\n\n  return (\n    <div className=\"bs-component\">\n\t\t\t<div id=\"intoro-box\">\n        <Icon iconInfo={GetIconRandom()} where=\"intro\" iconSize=\"200\" />\n        <div id=\"intro-texts\">    \n\t\t\t\t  <h2>「エモいチャット。」へようこそ！</h2>\n\t\t\t\t  <p id=\"text\">エモいチャットとはエモートや、リアクション機能を搭載し、より「話してる感」を味わえるありそうでなかったチャットです！</p>\n        </div>\n      </div>\n\t\t</div>\n  )\n}\n\nexport default Introduce;","import React,{useContext} from 'react';\nimport firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\nimport './roomform.css';\n\nconst RoomForm = () =>{\n  const {userId,userInfo} =useContext(userContext);\n\n  const roomAPI=()=>{\n    let roomName = document.getElementById('nameInput').value;\n    if(roomName.length > 0 && roomName.length<=15){\n      let StageId  = document.getElementById('stage-select').value;\n      db.collection('/rooms').add({\n        roomName     : roomName,\n        stageId      : StageId,\n        madeUserId   : userId,\n        madeUserName : userInfo['displayName'],\n        timeStamp    : firebase.firestore.FieldValue.serverTimestamp(),\n        members      : []\n      }).then((docs) => {\n        document.location.reload();\n      }).catch(error => {\n        // error\n        alert('エラーが発生しました。申し訳ありませんが、しばらく待ってもう一度お試しください\\nError:'+error)\n      });\n    }else{\n      alert('ルーム名は1文字以上、15文字以下である必要があります。');\n    }\n  }\n\n  return(\n    <div id=\"room-form\">\n      <label htmlFor=\"name\" >ルームの名前</label>\n      <input id=\"nameInput\" type=\"text\" name=\"name\" maxLength=\"15\" /><br/>\n      {\n        //ステージ未実装のため、ここは表示されません。\n      }\n      <label id=\"select-label\" htmlFor=\"stage\" defaultValue=\"0\">ステージ</label>\n      <select id=\"stage-select\" name=\"stage\" className=\"custom-select\">\n        <option value=\"0\">Zero</option>\n        <option value=\"1\">One</option>\n        <option value=\"2\">Two</option>\n      </select><br/>\n      <button onClick = {roomAPI}>投稿</button>\n    </div>\n  )\n}\nexport default RoomForm;","import React, {Component,useState,useEffect,current} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport firebase, { db } from '../../Firebase/Firebase';  \nimport SplitPane from 'react-split-pane';\nimport RoomForm from '../RoomForm/RoomForm';\nimport '../Rooms/rooms.css'\n\nconst Rooms = () => {\n\n  const [rooms,setRooms]=useState(null);\n  \n  useEffect(() => {\n    let unmounted=false;\n    async function roomsData() {\n      // ルームのデータを取得。\n      const unsubscribe = await db.collection('/rooms').orderBy('timeStamp', 'asc').get().then(col=> {\n        if(!unmounted){\n          // idを配列に\n          let roomids=col.docs.map(postCol => \n            postCol.id\n          );\n          // データの中身を取得\n          let value=[];\n          col.forEach((postCol) => {\n            value.push(\n              postCol.data()\n            );\n          });\n          /* 本来は変わった部分だけいい感じにすべきなんだろうけど...時間足らず...\n          col.docChanges().forEach(change => {\n            console.log(change.doc.data());\n          });\n          */\n          let rooms=[];\n          // idとデータを合体\n          for(let i = 0; i < roomids.length; i++){\n            let d = value[i][\"timeStamp\"].toDate();\n            rooms.push({\n                roomName     : value[i][\"roomName\"],\n                stageId      : value[i][\"stageId\"],\n                madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n                madeUserName : value[i][\"madeUserName\"],\n                madeUserId   : value[i][\"madeUserId\"],\n                members      : value[i][\"members\"],\n                id           : roomids[i],\n              }\n            )\n          }\n          setRooms(rooms);\n        }\n      });// ...\n    };\n\n    roomsData();\n  }, []);\n  return (\n    <div id=\"rooms\" className=\"list-group\">\n      {rooms === null && <p>Loading rooms...</p>}\n      {rooms && \n        rooms.map(room => (\n          <li key={room.id} className=\"roomsItem list-group-item d-flex\">\n            <Link to={`/room/${room.id}`}>\n              <h4 >{room.roomName}</h4>\n            </Link>\n            <h4 >作成者：{room.madeUserName}</h4>\n            <h4 >作成日時：{room.madeTime}</h4>\n            <h4 >メンバー：{room.members.length}人</h4>\n          </li>\n        ))\n      }\n      {rooms && rooms.length === 0 &&\n        <li key={\"none room\"} className=\"roomsItem list-group-item d-flex\">\n           <h4>まだルームはありません</h4>\n        </li>\n      }\n      \n\t  </div>\n  )\n}\n\nexport default Rooms;","import React from 'react';\nimport SplitPane from 'react-split-pane';\nimport Introduce from './Introduce/Introduce';\nimport RoomForm from './RoomForm/RoomForm';\nimport Rooms from './Rooms/Rooms';\n\nconst Main = () => {\n  return (\n    <div id=\"roomsAndForm\">\n      <Introduce></Introduce>\n      <Rooms />\n      <RoomForm />\n    </div>\n  )\n}\nexport default Main;","const Error=()=>{\n  return(\n    <div>\n      <p>ページが見つかりませんでした。削除・変更されたか、URLが間違っている可能性があります。</p>\n    </div>\n  )\n}\n\nexport default Error;","import React,{createContext,useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n//import User from './User';\n//import { createStore } from 'redux'\n//import todoApp from './reducers/test.js'\n//let store = createStore(todoApp)\n\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}