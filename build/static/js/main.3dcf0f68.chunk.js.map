{"version":3,"sources":["Firebase/Firebase.js","miserarenaiyo.js","IconRender.js","NavBar/NavBar.js","Room/Stages/StageIcon/IconAccessory/ReActions.js","Room/Stages/StageIcon/IconAccessory/NewComment.js","Room/Stages/StageIcon/IconAccessory/ReActionButtons.js","Room/Stages/StageIcon/StageIcon.js","Room/Stages/Nomal/Nomal.js","Room/Stages/CommetForm/CommentForm.js","IconRandomMove.js","Room/Stages/Stage.js","Room/RoomHeader/RoomHeader.js","Room/Room.js","Room/Comments/Comments.js","UserSettings/UserInfo/MakeIcon/IconData.js","UserSettings/UserInfo/MakeIcon/PartsSelect/PartsSelect.js","UserSettings/UserInfo/MakeIcon/MakeIcon.js","UserSettings/NoLogin.js","App.js","UserSettings/UserInfo/LoggedIn.js","UserSettings/UserSettings.js","Main/RoomForm/RoomForm.js","Main/Rooms/Rooms.js","Main/Main.js","Error/Error.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","emoteParts","Icon","props","Parts","parts","path","rot","info","emotion","indexOf","parseInt","className","where","src","style","height","iconSize","width","top","left","position","transform","console","log","iconInfo","Object","entries","map","NavBar","useContext","userContext","isOnline","userId","userInfo","useState","allrooms","setAllRooms","nowRoom","setNowRoom","useEffect","collection","doc","get","then","exists","id","data","update","room","length","FieldPath","documentId","roomInfos","existsRoom","empty","rooms","docs","forEach","push","catch","error","type","data-toggle","data-target","href","role","aria-expanded","value","ReActions","reActions","stageContext","renderId","element","NewComment","newComment","ReActionButtons","roomContext","reActionAPI","e","reAction","target","dataset","name","toUserId","user","add","from","to","timeStamp","FieldValue","serverTimestamp","setTimeout","delete","onClick","data-name","data-user","StageIcon","emotions","renderInfo","Nomal","members","keys","m","index","Form","setEmotions","commentAPI","content","document","getElementById","roomId","userName","set","body","addEventListener","event","key","ctrlKey","emoteAPI","emote","kind","newEmotions","JSON","parse","stringify","data-kind","maxLength","getRandomInt","max","Math","floor","random","randomMoveTimer","object","time","setInterval","topmax","leftmax","originalSizeRot","window","getComputedStyle","getPropertyValue","substr","split","slice","randomMove","createContext","Stage","splitSize","icons","setNewComment","setActions","a","now","Date","before5min_unix","getTime","onSnapshot","emoteIds","emotes","i","emoteUnsubscribe","before6sec_unix","newCommentIds","newCommentUnsubscribe","before5sec_unix","reActionIds","reActionDatas","emotionData","newCommentData","reActionData","moveTimer","timers","clearInterval","iconparts","getElementsByClassName","IconMove","timer","Provider","defaultSize","innerHeight","stageRadius","CommentForm","RoomHeader","madeUserName","madeTime","Room","setRoom","isRoom","setIsRoom","comments","setComments","setSplitSize","setMembers","location","pathname","arrayUnion","d","toDate","roomData","roomName","stageId","getFullYear","getMonth","getDate","roomUnsubscribe","orderBy","commentIds","commentsUnsubscribe","memberIds","infos","memberId","displayName","oneWord","memberUnsubscribe","commentsData","membersData","minSize","maxSize","Comments","comment","toString","partsData","Kinds","displayKind","imgsInfo","posX","posY","sizeX","sizeY","partsSizeMaxMin","min","GetSizeMax","partsName","GetSizeMin","partsSizeNow","SetSizeXYNow","partsRotMaxMin","GetRotMax","GetRotMin","partsRotNow","SetRotNow","PartsSelect","makeIconContext","setNowKind","nowName","nowKind","activeElement","classList","contains","remove","imgPath","MakeIcon","setNowName","nowSize","setNowSize","nowRot","setNowRot","values","partInfo","img","createElement","attach","sizeTimer","sizex","sizey","x","y","appendChild","SetImgsInfoAll","rotTimer","inputRotSet","nextRot","input","inputRot","maxRot","minRot","inputSizeSet","nextSize","inputSize","onMouseMove","mouseX","clientX","mouseY","clientY","onMouseLeave","display","onMouseEnter","clientRect","getBoundingClientRect","px","pageXOffset","py","pageYOffset","zIndex","cursor","pointerEvents","onInput","clearTimeout","defaultValue","eachPram","GetSizeXNow","GetRotNow","NoLogin","setUserId","setIsOnline","setUserName","logoutFromGoogle","auth","signOut","isFirst","setPersistence","Auth","Persistence","LOCAL","provider","GoogleAuthProvider","signInWithPopup","result","uid","iconinfo","email","alert","bind","this","Loggedin","onChange","newDisplayName","newOneWordName","reload","UserSettings","setUserInfo","RoomForm","htmlFor","StageId","madeUserId","Rooms","setRooms","col","roomids","postCol","docChanges","change","roomsData","Main","Error","App","seclet","secletdata","userInfoUnsubscribe","getUserInfo","onAuthStateChanged","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.3dcf0f68.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport { firebaseConfig } from '../miserarenaiyo';\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\nexport default firebase;\nexport const db = firebase.firestore();","const googleauthConfig ={\n  apiKey   : 'dXGX0dsR2bTIVrRCPpAlBIu2',\n  clientId :'349007819425-dtm4orbqjr4ms1jp4rcothk9udk1nsoj.apps.googleusercontent.com'\n}\nconst firebaseConfig = {\n  apiKey            : \"AIzaSyBKyumc6NOpVRBhKbXxz06lN0HP5xztT8Y\",\n  authDomain        : \"emoichat-300700.firebaseapp.com\",\n  projectId         : \"emoichat-300700\",\n  storageBucket     : \"emoichat-300700.appspot.com\",\n  messagingSenderId : \"349007819425\",\n  appId             : \"1:349007819425:web:3b35c57290d3aac32d36e0\",\n  measurementId     : \"G-8HGXFZXEQT\"\n};\nexport {googleauthConfig,firebaseConfig}; ","import React, { Component, createContext,useContext,useState } from 'react';\n\n// 感情の変化させるパーツの配列\nconst emoteParts={\n  'happy':[\n    'leftEye','rightEye','mouth'\n  ],\n  'angry':[\n    'leftEye','rightEye','mouth'\n  ]\n}\n\n// propsはiconInfoとiconSize、emotion、where。\nconst Icon=(props)=>{\n  const Parts=(parts)=>{\n    const info=parts.info;\n    // 感情がある場合にはその感情のパス、ない場合は保存されてるパスを渡す。\n    let path;\n    //rotは、感情がある場合0で渡す\n    let rot;\n    if(props.emotion&&emoteParts[props.emotion].indexOf(info[0])!==-1){\n      path=\"../images/icon/\"+props.emotion+\"_\"+info[0]+\".png\";\n      rot=0;\n    }else{\n      path=\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\";\n      rot=parseInt(info[1][\"rot\"]);\n    }\n    return(\n      <img key={info[0]} className={props.where+\"-iconparts \"+info[0]} src={path} style={{\n        height  : (info[1][\"sizeY\"] / 300) * props.iconSize + \"px\" ,\n        width   : (info[1][\"sizeX\"] / 300) * props.iconSize + \"px\" ,\n        top     : (info[1][\"posY\"]  / 300) * props.iconSize + \"px\" ,\n        left    : (info[1][\"posX\"]  / 300) * props.iconSize + \"px\" ,\n        position :\"absolute\" , \n        transform:\"rotate(\"+rot+\"deg)\",\n      }} />\n    )\n  }\n  return (\n    <div className={props.where+\"-icon\"} style={{position:\"relative\", height:props.iconSize+\"px\", width:props.iconSize+\"px\"}}>\n      {console.log(props.iconInfo)}\n      {Object.entries(props.iconInfo).map(info => (\n        <Parts key={info[0]} info={info}></Parts>\n      ))}  \n    </div>\n  );\n}\n\nexport default Icon;\n","import React,{ useContext,useEffect,useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../App';\nimport firebase, {db} from '../Firebase/Firebase'\nimport Icon from '../IconRender';\nimport './navbar.css'\n\nfunction NavBar() {\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  const [allrooms,setAllRooms] =useState(null);\n  const [nowRoom,setNowRoom] =useState(null);\n  \n  useEffect(()=>{\n    \n    if(userInfo){\n      // 一番最後に入ったルームのルーム名取得。\n      if(userInfo['room']){\n        db.collection('rooms').doc(userInfo['room']).get().then((doc)=>{\n          if(doc.exists){\n            setNowRoom([doc.id,doc.data()['roomName']]);\n          }else{\n            // そのルームが存在しないならnullに。削除されたとき対策\n            db.collection('users').doc(userId).update({\n              room : null\n            })\n          }\n        })\n      }\n      // 入室しているルームを取得\n      if(userInfo['rooms'].length!==0){\n        db.collection('rooms').where(firebase.firestore.FieldPath.documentId(),'in',userInfo['rooms']).get().then((doc)=>{\n        let roomInfos={};\n        let existsRoom=[];\n        console.log(doc);\n        if(!doc.empty){\n          doc.docs.forEach((room)=>{\n            if(room.exists){\n              roomInfos[room.id]=room.data()['roomName'];\n              console.log(room,room.id,room.data()['roomName'],room.data());\n              existsRoom.push(room.id);\n            }\n          });\n          setAllRooms(roomInfos);\n          if(existsRoom.length!==userInfo['rooms'].length){\n            db.collection('users').doc(userId).update({\n              rooms:existsRoom\n            })\n          }\n          console.log(roomInfos);\n        }else{\n          setAllRooms(false);\n          db.collection('users').doc(userId).update({\n            rooms:[]\n          })\n        }\n      }).catch((error)=>{\n        console.log('Error:'+error)\n      })\n    }else{\n      setAllRooms(false);\n    }\n  }\n  },[userInfo]);\n  return (\n    <nav className=\"navbar navbar-default\">\n      <div className=\"container-fluid\">\n\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n\t\t\t\t\t\t<span className=\"sr-only\">Toggle navigation</span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"/\">エモいチャット。</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\t\t\t\t\t<ul className=\"nav navbar-nav\">\n            \n            <li className=\"\"><a href=\"/\">ホーム<span className=\"sr-only\">(current)</span></a></li>\n\t\t\t\t\t\t\n            {nowRoom!==null&&\n              <li className=\"active\"><a href={\"/room/\"+nowRoom[0]}>{nowRoom[1]}<span className=\"sr-only\">(current)</span></a></li>\n            }\n\t\t\t\t\t\t<li className=\"dropdown\">\n              <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">ルームs <span className=\"caret\"></span></a>\n              <ul className=\"dropdown-menu\" role=\"menu\">\n                  {allrooms===false &&\n                    <li><p>まだ入室しているルームがありません</p></li>\n                  }\n                  {allrooms!==null && allrooms!==false &&\n                    Object.entries(allrooms).map((value)=>(\n                     <li key={value[0]}><a href={\"/room/\"+value[0]}>{value[1]}</a></li>\n                     //console.log(value)\n                    ))\n                  }\n\t\t\t\t\t\t  \t</ul>\n\t\t\t\t\t\t  </li>\n          </ul>\n\t\t\t\t\t{/*検索機能はいったんコメントアウト\n          <form className=\"navbar-form navbar-left\" role=\"search\">\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-default\">Submit</button>\n          </form>\n          */}\n          {isOnline===true &&\n\t\t\t\t\t  <ul className=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t  \t<li id=\"userInfo-li\"  href=\"/userSetting\">\n                <a id='infoLink-icon' href=\"/userSetting\"></a>\n                <div href=\"/userSetting\"  className='iconMask barMask'>\n                  {userInfo !== null&&\n                    <Icon iconInfo={userInfo['iconinfo']} where=\"header\" iconSize=\"50\" />\n                  }\n                  <h6 id=\"icon-loading-text\">loading icon...</h6>\n                </div>\n              </li>\n\t\t\t\t\t  </ul>\n          }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n  );\n}\n//<Icon iconInfo={}></Icon>\n            \nexport default NavBar;\n","import React,{useContext} from 'react';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst ReActions = (props) =>{\n  const {reActions}=useContext(stageContext);\n\n  return(\n    <div id=\"reActions\" className=\"icon-acce\">\n      {console.log(props.renderId,reActions)}\n      {reActions[props.renderId].map(element => (\n        <div key={element['id']}>\n          <h1>{element['name']}</h1>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ReActions;","import React,{useContext} from 'react';\nimport {stageContext} from '../../Stage';\nimport './iconacce.css'\n\nconst NewComment = (props) =>{\n  const {newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"balloon1 icon-acce top\"  key={props.renderId}>\n      <div className=\"balloon1-text\">\n        <p>{newComment[props.renderId]}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NewComment;","import React, { useContext } from 'react';\nimport firebase,{db} from '../../../../Firebase/Firebase';\nimport {roomContext} from '../../../Room';\nimport {userContext} from '../../../../App';\nimport './iconacce.css'\n\nconst ReActionButtons = (props) =>{\n  const {room} = useContext(roomContext)\n  const {userId} = useContext(userContext)\n\n  const reActionAPI= (e)=>{\n    const reAction=e.target.dataset.name;\n    const toUserId=e.target.dataset.user;\n    console.log(reAction,toUserId);\n      db.collection('rooms').doc(room['id']).collection('reActions').add({\n      name      : reAction,\n      from      : userId,\n      to        : toUserId,\n      timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n    }).then((doc)=>{\n      setTimeout(function(){\n        db.collection('rooms').doc(room['id']).collection('reActions').doc(doc.id).delete();\n      }, 3000);\n    }).catch((error)=>{\n      console.log(error);\n    })\n  }\n  return(\n    <div className=\"icon-acce reActionbuttons\">\n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"good\" data-user={props.renderId}>good</button>  \n      <button className=\"reActionButton\" onClick={reActionAPI} data-name=\"nazo\" data-user={props.renderId}>謎</button>  \n    </div>\n  )\n}\n\nexport default ReActionButtons;","import React,{useContext} from 'react';\nimport {userContext} from '../../../App';\nimport {stageContext} from '../Stage';\nimport Icon from '../../../IconRender'\nimport ReActions from './IconAccessory/ReActions'\nimport NewComment from './IconAccessory/NewComment';\nimport ReActionButtons from './IconAccessory/ReActionButtons';\nimport firebase, {db} from '../../../Firebase/Firebase'\nimport './IconAccessory/iconacce.css';\n\nconst StageIcon = (props) => {\n  const {userId} = useContext(userContext);\n  const {emotions,reActions,newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"stageIcon\">\n      {console.log(props.renderInfo)}\n      {props.renderInfo[0] !== userId && // ディスプレイネームを表示\n        <h3 className=\"stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {props.renderInfo[0] === userId && // 自分ならselfMaskクラスを追加したやつを描画\n        <h3 className=\"self-mark stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {newComment===null&&\n        <p className=\"icon-acce\">Loading NewComment...</p>\n      }\n      {newComment!==null&&\n        newComment[props.renderInfo[0]]&& // 新しいコメントがあるなら、新しいコメントを描画\n          <NewComment renderId={props.renderInfo[0]}/>\n      }\n      <Icon iconInfo={props.renderInfo[1]['iconInfo']} iconSize={200} emotion={emotions[props.renderInfo[0]]} where=\"stage\"/> \n      {props.renderInfo[0] !==userId && // 自分でないならアクションのボタンを描画\n        <ReActionButtons renderId={props.renderInfo[0]}/>\n      }\n      {reActions===null&&\n        <p className=\"icon-acce\">Loading Actions...</p>\n      }\n      {reActions!==null&&\n        reActions[props.renderInfo[0]]&&\n          <ReActions renderId={props.renderInfo[0]}/>\n      }\n    </div>\n  );\n}\n\nexport default StageIcon;","\nimport React, {Timestamp,useEffect, useContext} from 'react';\n\nimport './nomal.css';\nimport StageIcon from '../StageIcon/StageIcon'\nimport { roomContext } from '../../Room';\n\nfunction Nomal(props){\n  const {members,room} = useContext(roomContext);\n\n  return (\n    <div id=\"nomal\">\n      {Object.keys(members).map((m,index)=>(\n        <div key={'icondiv'+index} className='icondiv'>\n          <StageIcon renderInfo={[room['members'][index],members[room['members'][index]]]}/>\n        </div>\n      ))\n      }\n    </div>\n  );\n}\n\n\nexport default Nomal;\n\n","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport {roomContext} from '../../Room';\nimport { stageContext } from '../Stage';\nimport {userContext} from '../../../App';\nimport firebase, {db} from '../../../Firebase/Firebase'\n\n\n\nconst Form=()=>{\n  const {room}=useContext(roomContext);\n  const {emotions,setEmotions}=useContext(stageContext);\n  const {userId,userInfo}=useContext(userContext);\n  useEffect(()=>{\n    // スペースキーが押されたら投稿\n    document.body.addEventListener('keydown',\n    event => {\n      if (event.key === 'Enter' && event.ctrlKey) {\n          commentAPI();\n      }\n    });  \n  },[]);\n\n  // コメント投稿のAPI\n  function commentAPI (){  \n    let content=document.getElementById('inputComment').value;\n    // 0文字より多く、300文字より少なく入力されているなら\n    if(content.length>0&&content.length<=300){\n      let roomId=room['id'];\n      let emotion;\n      if(emotions[userId]){\n        emotion=emotions[userId];  \n      }else{\n        emotion=null;\n      }\n      db.collection('rooms').doc(roomId).collection('comments').add({\n        content   : content,\n        userId    : userId,\n        userName  : userInfo['displayName'],\n        emotion   : emotion,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n      db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).set({\n        content   : content,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      }).then(()=>{\n        // フォームの中身をなくす\n        document.getElementById('inputComment').value='';\n        // 6秒後にステージ用のコメントを消す。\n        setTimeout(function(){\n          db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).delete();\n        }, 6000)}\n      )\n    }\n  }\n  // エモートのAPI\n  const emoteAPI= (e)=>{\n    const emote=e.target.dataset.kind;\n    console.log(emote);\n    db.collection('rooms').doc(room['id']).collection('emotions').doc(userId).set({\n      kind      : emote,\n      timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n    })\n    let newEmotions = JSON.parse(JSON.stringify(emotions));\n    newEmotions[userId] = emote;\n    setEmotions(newEmotions);\n  }\n\n  return(\n    <div id=\"commentForm\">\n      <div id=\"emotions\">\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"happy\">happy</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"angry\">angry</button>  \n      </div>\n      <div className=\"form\">\n        <input id=\"inputComment\" />\n        <button type=\"submit\" maxLength=\"300\" onClick={commentAPI}>投稿</button>\n      </div>\n    </div>\n    )\n}\nexport default Form;","//アイコンをランダムに動かす処理\n\nfunction randomMoveTimer(object , time){\n  let moveMax=5;\n  return setInterval(()=>{\n    randomMove(object , moveMax , moveMax);\n  },time);\n};\n\nfunction randomMove(object , topmax , leftmax){\n  let originalValue = window.getComputedStyle(object, null).getPropertyValue('transform');// transformの中身を取得。例えばこんな感じmatrix(1, 0, 0, 1, -1.5, 0.5) what!!!\n  let originalSizeRot=originalValue.substr(7).split(',').slice(0, 4);//matrixのサイズと回転だけを取得\n  object.style.transform ='matrix('+originalSizeRot[0]+','+originalSizeRot[1]+','+originalSizeRot[2]+','+originalSizeRot[3]+',' + getRandomInt( topmax ) + ','+ getRandomInt( leftmax ) +')';\n}\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor( max ) ) - ( max / 2 );\n}\n\nexport default randomMoveTimer;\n","\nimport React, {Timestamp,useEffect,useContext,createContext,useState} from 'react';\nimport './stage.css';\nimport Nomal from './Nomal/Nomal';\nimport {roomContext} from '../Room';\nimport {userContext} from '../../App';\nimport firebase , {db} from '../../Firebase/Firebase'\nimport CommentForm from './CommetForm/CommentForm'\nimport SplitPane from 'react-split-pane';\nimport randomMoveTimer from '../../IconRandomMove';\n\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('stage-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst stageRadius=600;\nfunction Stage(props){\n  const {userId} = useContext(userContext);\n  const {icons,splitSize,room} = useContext(roomContext);\n  const [newComment,setNewComment] = useState(null);\n  const [emotions,setEmotions] = useState({});\n  const [reActions,setActions] = useState({});\n  const roomId=room['id'];\n\n  useEffect(()=>{\n    async function emotionData(){\n      var now = new Date();\n      var before5min_unix = new Date(now.getTime() - 5000);\n      console.log(before5min_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('emotions').where('timeStamp','>',before5min_unix).onSnapshot(data=> {\n        let value=[];\n        let emoteIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let emotes={};\n        for(let i = 0; i < emoteIds.length; i++){\n          emotes[emoteIds[i]]=value[i]['kind'];\n        }\n        console.log(data,value,emotes,\"ん\");\n        setEmotions(emotes);\n      })\n      return () => emoteUnsubscribe();\n    }\n    async function newCommentData(){\n      var now = new Date();\n      // 6秒以内のnewCommentを取得\n      // 本来は、コメントが増えたタイミングでバックエンドからイベントを起こすようにした方がいいのだろうが、firebaseでは有料だったのでこのように実装\n      var before6sec_unix = new Date(now.getTime() - 6000);\n      const newCommentUnsubscribe = await db.collection('/rooms').doc(roomId).collection('newComment').where('timeStamp','>',before6sec_unix).onSnapshot(data=> {\n        let value=[];\n        let newCommentIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let newComment={};\n        for(let i = 0; i < newCommentIds.length; i++){\n          newComment[newCommentIds[i]]=value[i]['content'];\n        }\n        console.log(data,value,newComment,\"ん\");\n        setNewComment(newComment);\n      })\n      return () => newCommentUnsubscribe();\n    }\n    async function reActionData(){\n      var now = new Date();\n      var before5sec_unix = new Date(now.getTime() - 5000);\n      console.log(before5sec_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('reActions').where('timeStamp','>',before5sec_unix).onSnapshot(data=> {\n        let value=[];\n        let reActionIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let reActionDatas={};\n        for(let i = 0; i < reActionIds.length; i++){\n          if(!reActionDatas[value[i]['to']]){\n            reActionDatas[value[i]['to']]=[];\n          }\n          reActionDatas[value[i]['to']].push({\n            id   : reActionIds[i],\n            name : value[i]['name'],\n            from : value[i]['from'],\n            to   : value[i]['to'],\n          });\n        }\n        console.log(data,value,reActionDatas,\"ん\");\n        setActions(reActionDatas);\n      })\n      return () => emoteUnsubscribe();\n    }\n    emotionData();\n    newCommentData();\n    reActionData();\n  },[])\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n\n  return (\n    <stageContext.Provider value={{newComment,setNewComment,emotions,setEmotions,reActions,setActions}}>\n      <SplitPane split=\"horizontal\" defaultSize={window.innerHeight-171}>\n        <div id=\"stage\" >\n          {console.log(splitSize)}\n          <Nomal stageRadius={stageRadius}/>\n        </div>\n        <CommentForm />\n      </SplitPane>\n    </stageContext.Provider>\n  );\n}\nconst stageContext=createContext([]);\nexport {stageContext};\nexport default Stage;","import React,{ useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { roomContext } from '../Room';\nimport './roomheader.css'\n\nconst RoomHeader=()=> {\n  const {room}=useContext(roomContext);\n  return (\n    <header id=\"room-header\">\n      <div id=\"room-name\">\n        <strong>{room[\"roomName\"]}</strong>\n\t\t\t</div>\n      <ul id=\"room-info\">\n        <li>参加者：{room[\"members\"].length}</li>\n\t\t\t\t<li> 作成者：{room.madeUserName}</li>\n        <li> 作成日時：{room.madeTime}</li>\n        <li> メンバー：{room.members.length}人</li>\n\t\t\t</ul>\n    </header>\n    );\n}\n\nexport default RoomHeader;\n/*\n<nav className=\"navbar navbar-dark bg-primary fixed-top\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        エモいチャット(仮称)\n      </Link>\n    </nav>\n \n*/","import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Icon from '../IconRender'\nimport Stage from './Stages/Stage';\nimport SplitPane from 'react-split-pane';\nimport { Splitpanes, Pane } from 'splitpanes'\nimport 'splitpanes/dist/splitpanes.css'\nimport Comments from './Comments/Comments';\nimport firebase, { db } from '../Firebase/Firebase'; \nimport {userContext} from '../App'\nimport RoomHeader from './RoomHeader/RoomHeader';\nimport './room.css';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst defaultSplitSize=800;\n\nconst Room = () => {\n  const [room,setRoom] = useState(null);\n  const [isRoom,setIsRoom] = useState(null);\n  const [comments,setComments] = useState(null);\n  const [splitSize,setSplitSize] = useState(defaultSplitSize);\n  const [members,setMembers] = useState(null);\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  // URLのパラメータを取得\n  var Path = window.location.pathname;\n  var roomId = Path.split('/')[2];\n  \n  useEffect(()=>{\n    async function roomData() {\n      const roomUnsubscribe = await db.collection('/rooms').doc(roomId).onSnapshot(doc=> {\n        if(doc.exists){\n          let value=doc.data();\n          console.log(userId,value['members']);\n          console.log(value['members'].indexOf(userId)===-1);\n          if(value['members'].indexOf(userId)===-1){\n            console.log('追加');\n            db.collection('rooms').doc(roomId).update({\n              members: firebase.firestore.FieldValue.arrayUnion(userId)\n            })\n            db.collection('users').doc(userId).update({\n              rooms: firebase.firestore.FieldValue.arrayUnion(roomId)\n            })\n            db.collection('users').doc(userId).update({\n              room: roomId\n            })\n          }\n          let d = value['timeStamp'].toDate();\n          let roomData={\n            id           : doc.id,\n            roomName     : value['roomName'],\n            stageId      : value['stageId'],\n            madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n            madeUserName : value['madeUserName'],\n            members      : value['members'],\n\n          }\n          setIsRoom(true);\n          setRoom(roomData);\n        }else{\n          setIsRoom(false);\n        }\n      });\n      return () => roomUnsubscribe();\n    };\n    roomData();\n  },[])\n\n  useEffect(() => {\n    async function commentsData(){\n      if(isRoom){\n        const commentsUnsubscribe = await db.collection('/rooms').doc(roomId).collection('comments').orderBy('timeStamp', 'asc').onSnapshot(data=> {\n          let commentIds=data.docs.map(doc => \n            doc.id\n          );\n          let value=[];\n          data.forEach((doc) => {\n            value.push(\n              doc.data()\n            );\n          });\n          let comments=[];\n           for(let i = 0; i < commentIds.length; i++){\n            comments.push(\n              {\n                id       : commentIds[i],\n                content  : value[i]['content'],\n                emotion  : value[i]['emotion'], \n                userId   : value[i]['userId'],\n              }\n            )\n          }\n          console.log(commentIds,comments,data);\n          setComments(comments);\n        });// ...\n        return () => commentsUnsubscribe();\n      }\n    }\n    \n    async function membersData(){\n      if(isRoom){\n          const memberUnsubscribe= await db.collection('rooms').doc(roomId).onSnapshot(async doc=>{\n          const memberIds=doc.data()['members'];\n          console.log(memberIds);\n          if(memberIds&&memberIds.length!==0){\n            await db.collection('users').where('userId','in',memberIds).get().then(infos=>{\n              if(!infos.empty){\n                console.log(infos);\n                let value={};\n                infos.docs.forEach(info=>{\n                  let data=info.data();\n                  let memberId=info.data()['userId'];\n                  value[memberId]={\n                    displayName : data['displayName'],\n                    oneWord     : data['oneWord'],\n                    iconInfo    : data['iconinfo']\n                  }\n                })\n                console.log(value,infos,infos.docs);\n                setMembers(value);\n              }\n              //infos.push(info.data()['iconinfo']);\n            });\n          }\n        });\n        return () => memberUnsubscribe();\n      }\n    }\n    \n    commentsData();\n    membersData();\n  \n    //unsubscribe();\n    \n  }, [isRoom]);\n  \n  \n//  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n\n  \n  //if (this.state.room === null) return <p>Loading ...</p>;\n  return (\n    //<Nomal />\n        //<Icon iconInfo={room.iconInfo[0].value}/>\n    <div className=\"container\">\n      {isRoom===null && <p>Loading Room...</p>}\n      {isRoom===true&&\n        <roomContext.Provider value={{members,setMembers,room,setRoom,comments,setComments,splitSize,setSplitSize}}>\n          {room===null && <p>Loading Room...</p>}\n          {room &&\n            <div className=\"row\">\n              <RoomHeader />\n              <SplitPane split=\"vertical\" minSize={300} defaultSize={defaultSplitSize} maxSize={1000} style={{\"height\":window.innerHeight-101}}>\n                <div id='left' style={{'display':'flex'}}>\n                  {members === null && <p>Loading Stage...</p>}\n                  {members !== null&&<Stage/>}\n                </div>\n                <div id=\"right\" >\n                  {comments === null && <p>Loading Ccomments...</p>}\n                  {comments !==null && <Comments />}\n                </div>\n              </SplitPane>\n            </div>\n          }\n        </roomContext.Provider>\n      }\n      {isRoom==false &&\n        <Redirect to = {'/error'} />\n      }\n    </div>\n  )\n}\n/*\n<img key={name} className=\"icon\" src={\"./images/icon/\"+comment.iconinfo.info[name][\"kind\"]+\"_\"+name+\".png\"} style={{\n                    height   :comment.iconinfo.info[name][\"sizeY\"]/3  + \"px\" ,\n                    width    :comment.iconinfo.info[name][\"sizeX\"]/3  + \"px\" ,\n                    top      :comment.iconinfo.info[name][\"posY\"]/3 + \"px\" ,\n                    left     :comment.iconinfo.info[name][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+comment.iconinfo.info[name][\"rot\"]+\"deg)\",\n                  }} />\n\n\n                  <img key={info[0]} className=\"icon\" src={\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\"} style={{\n                    height   :info[1][\"sizeY\"]/3  + \"px\" ,\n                    width    :info[1][\"sizeX\"]/3  + \"px\" ,\n                    top      :info[1][\"posY\"]/3 + \"px\" ,\n                    left     :info[1][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+info[1][\"rot\"]+\"deg)\",\n                  }} />\n\n\n\n                  this.state.comments.map(comment => (\n              <div key={comment.id.toString()} className=\"comment\">\n                  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n                <h1 className=\"\">{comment.content}</h1>\n              </div>\n            ))\n*/\nconst roomContext=createContext([]);\nexport {roomContext};\nexport default Room;","import React, {Component,useContext, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {roomContext} from '../Room';\nimport Icon from '../../IconRender';\nimport {db} from '../../Firebase/Firebase'\nimport './comments.css'\nimport randomMoveTimer from '../../IconRandomMove';\n\nconst iconSize=50;\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('comments-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst Comments=()=>{\n  const {comments,room,members} = useContext(roomContext);\n  var Path = window.location.pathname;\n\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n  return (\n    <div id='comments' className=\"list-group\">\n      {comments && members &&\n        comments.map(comment=>(\n          <div key={comment.id.toString()} className=\"comment list-group-item d-flex\">\n            <div className='iconMask commentIcon'>\n              <Icon iconInfo={members[comment.userId]['iconInfo']} iconSize={iconSize} emotion={comment.emotion} where='comments'/>\n            </div>\n            <div>\n              {console.log(members)}\n              <strong className=\"userName mb-1\" style={{}}>{members[comment.userId]['displayName']}</strong>\n              <h3 className=\"commentContent\" style={{}}>{comment.content}</h3>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default Comments;","// パーツボタンの情報ズ。一応拡張性のためにKindsの中身2次元連想配列(？)にしてるけどいらないかも。\nconst partsData=\n{ \n  'face'      : { displayName : '顔'   , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'monster' : {displayKind : '化物'},'komugi' : {displayKind : '小麦色'},'maru' : {displayKind : 'まる'} }} ,\n  'hair'      : { displayName : '髪'   , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ケモミミ'},'tyuni' : {displayKind : '厨二'} ,'kaku' : {displayKind : 'カクガリ'}} } ,\n  'leftEye'   : { displayName : '左目' , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'rightEye'  : { displayName : '右目' , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'nose'      : { displayName : '鼻'   , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : '逆三角'},'pig' : {displayKind : 'ぶたっぱな'} } },\n  'mouth'     : { displayName : '口'   , Kinds : { 'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ダブリュー'},'fang' : {displayKind : '牙'},'tooth' : {displayKind : '歯'} }} ,\n}\nfunction GetPartsAll(){\n  return partsData;\n}\nfunction GetPartsData(partsName) {\n  return partsData[partsName];\n}\nfunction GetPartsKinds(partsName) {\n  console.log(partsName)\n  return partsData[partsName]['Kinds'];\n}\n// これがデータベースに保存される。今の値。stateが読み込まれたとき自動で上書きされてる。\nlet imgsInfo={\n  'face'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'hair'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'leftEye'   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'rightEye'  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'nose'      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'mouth'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n};\nfunction GetImgsInfoEach(partsName,eachPram) {\n  return imgsInfo[partsName][eachPram];\n}\nfunction GetImgsInfoAll(partsName) {\n  return imgsInfo[partsName];\n}\nfunction GetImgsInfoAllAll() {\n  return imgsInfo;\n}\nfunction SetImgsInfoEach(partsName,eachPram,value) {\n  imgsInfo[partsName][eachPram]=value;\n}\nfunction SetImgsInfoAll(partsName,values) {\n  imgsInfo[partsName]=values;\n}\nfunction SetImgsInfoAllAll(values) {\n  imgsInfo=values;\n}\n\n// サイズの上限下限の設定\nconst partsSizeMaxMin={\n  'face'      : {max : 350 , min : 200 },\n  'hair'      : {max : 350 , min : 200 },\n  'leftEye'   : {max : 70  , min : 15  },\n  'rightEye'  : {max : 70  , min : 15  },\n  'mouth'     : {max : 100 , min : 15  },\n  'nose'      : {max : 100 , min : 15  },\n};\nfunction GetSizeMax(partsName) {\n  return partsSizeMaxMin[partsName]['max'];\n}\nfunction GetSizeMin(partsName) {\n  return partsSizeMaxMin[partsName]['min'];\n}\nfunction GetSizeMaxMin(partsName) {\n  return partsSizeMaxMin[partsName];\n}\n\n// パーツの現在の大きさ。\nlet partsSizeNow={\n  'face'      : {sizeX : 300 , sizeY : 300 },\n  'hair'      : {sizeX : 300 , sizeY : 300 },\n  'leftEye'   : {sizeX : 30  , sizeY : 30  },\n  'rightEye'  : {sizeX : 30  , sizeY : 30  },\n  'mouth'     : {sizeX : 40  , sizeY : 40  },\n  'nose'      : {sizeX : 40  , sizeY : 40  },\n}\nfunction GetSizeXYNow(partsName) {\n  return partsSizeNow[partsName];\n}\nfunction GetSizeXNow(partsName) {\n  console.log(partsName,partsSizeNow[partsName]['sizeX']);\n  return partsSizeNow[partsName]['sizeX'];\n}\nfunction GetSizeYNow(partsName) {\n  return partsSizeNow[partsName]['sizeY'];\n}\nfunction SetSizeXYNow(partsName,sizeX,sizeY) {\n  partsSizeNow[partsName]={sizeX : sizeX , sizeY : sizeY };\n}\nfunction SetSizeXNow(partsName,sizeX) {\n  partsSizeNow[partsName]['sizeX'] = sizeX;\n}\nfunction SetSizeYNow(partsName,sizeY) {\n  partsSizeNow[partsName]['sizeY'] = sizeY;\n}\n\n// パーツの回転の上限下限\nconst partsRotMaxMin={\n  'face'      : {max : 360 , min : 0 ,},\n  'hair'      : {max : 360 , min : 0 ,},\n  'leftEye'   : {max : 360 , min : 0 ,},\n  'rightEye'  : {max : 360 , min : 0 ,},\n  'mouth'     : {max : 360 , min : 0 ,},\n  'nose'      : {max : 360 , min : 0 ,},\n};\nfunction GetRotMax(partsName) {\n  return partsRotMaxMin[partsName]['max'];\n}\nfunction GetRotMin(partsName) {\n  return partsRotMaxMin[partsName]['min'];\n}\nfunction GetRotMaxMin(partsName) {\n  return partsRotMaxMin[partsName];\n}\n\n// パーツの現在の角度\nlet partsRotNow={\n  'face'      : 0,\n  'hair'      : 0,\n  'leftEye'   : 0,\n  'rightEye'  : 0,\n  'mouth'     : 0,\n  'nose'      : 0,\n}\nfunction GetRotNow(partsName) {\n  return partsRotNow[partsName];\n}\nfunction SetRotNow(partsName,value) {\n  console.log(value);\n  partsRotNow[partsName]=value;\n}\n\nexport {\n  GetPartsAll,GetPartsData,GetPartsKinds,\n  GetImgsInfoAllAll,GetImgsInfoAll,GetImgsInfoEach,SetImgsInfoAllAll,SetImgsInfoAll,SetImgsInfoEach,\n  GetSizeXYNow,GetSizeYNow,GetSizeXNow,SetSizeXYNow,SetSizeYNow,SetSizeXNow,\n  GetSizeMax,GetSizeMin,GetSizeMaxMin,\n  GetRotNow,SetRotNow,\n  GetRotMax,GetRotMin,GetRotMaxMin,\n}","import React, { useState, useContext  } from 'react';\nimport { act } from 'react-dom/test-utils';\nimport {GetPartsKinds} from '../IconData';\nimport {makeIconContext} from '../MakeIcon';\nimport '../makeIcon.css'\n\n\nconst PartsSelect=()=>{\n  const {setNowKind,nowKind,nowName} = useContext(makeIconContext);\n\n\n  return(\n    <div id=\"makeIconButtons\" className={nowName+\"button\"}>\n      {console.log(nowName)}\n      {Object.entries(GetPartsKinds(nowName)).map((value)=>(\n        <button \n          key={value[0]} \n          className={value[0]+\" \"+nowName+\" \"+\"iconKindButton btn-text-3d\"} \n          data-name={nowName} data-kind={value[0]}  \n          onClick={(e)=>{\n            setNowKind(e.target.dataset.kind);\n            document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n              if(activeElement.classList.contains('active')){\n                activeElement.classList.remove('active');\n              }\n            });\n            e.target.classList.add('active');\n          }}\n        >{value[1][\"displayKind\"]}</button>\n      ))}\n    </div>\n  )\n}\n//  \n// data-partsName={nowName}\n\nexport default PartsSelect;","import React, {createContext, useContext, useState, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './makeIcon.css'\nimport {GetImgsInfoAllAll, GetImgsInfoEach, GetPartsAll, GetRotMax, GetRotMin, GetRotNow, GetSizeMax, GetSizeMin, GetSizeXNow, SetImgsInfoAll, SetImgsInfoAllAll, SetRotNow, SetSizeNowAll, SetSizeXYNow} from './IconData';\nimport firebase,{db} from '../../../Firebase/Firebase'\nimport {userContext} from '../../../App';\nimport PartsSelect from './PartsSelect/PartsSelect';\n\nconst imgPath='./images/icon/';\n\nconst MakeIcon =()=> {\n  const [ nowKind , setNowKind ] = useState('nomal'); \n  const [ nowName , setNowName ] = useState('leftEye');\n  const [ nowSize , setNowSize ] = useState(30);\n  const [ nowRot  , setNowRot  ] = useState(0);\n \n  const {userInfo}=useContext(userContext);\n\n  useEffect(()=>{\n    if(userInfo){\n      // 今のアイコンの情報を描画したりデータにセットしたり。\n      SetImgsInfoAllAll(userInfo['iconinfo']);\n      Object.entries(userInfo['iconinfo']).forEach(partInfo => {\n        console.log(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[0],partInfo[1]['rot'])\n        SetSizeXYNow(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY']);\n        SetRotNow(partInfo[0],partInfo[1]['rot']);\n        let img=document.getElementById(partInfo[0]+'Img');\n        if(!img){\n          img = document.createElement('img');\n          img.classList.add('set-image');\n          img.classList.add(partInfo[0]);\n          img.id=partInfo[0]+'Img';\n        }\n        attach(img,partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[1]['posX'],partInfo[1]['posY'],partInfo[1]['rot'],partInfo[1]['kind'],partInfo[0]);});\n    }\n  },[userInfo])\n\n  // マウスが動いた時に画像を追従させる関数\n  const mouthmove = e =>{\n    // マウスの位置ー画像のサイズの半分で計算。\n    let mouseX = e.clientX-Math.floor(nowSize/2);\n    let mouseY = e.clientY-Math.floor(nowSize/2);\n    // 無限にレンダーがかかりそうなのでここはステートを使ってない\n    document.getElementById('traceImage').style.top  = mouseY + 'px';\n    document.getElementById('traceImage').style.left = mouseX + 'px';\n  }\n\n\n  // 画像を配置する関数\n  const attachByClick = e =>{\n    inputSizeSet();\n    inputRotSet();\n    let img=document.getElementById(nowName+'Img');\n    if(!img){\n      img = document.createElement('img');\n      img.classList.add('set-image');\n      //img.classList.add(nowName+'_'+nowKind);\n      img.classList.add(nowName+'Img');\n      img.id=(nowName);\n    }\n    let clientRect = document.getElementById('icon-space').getBoundingClientRect() ;\n\n    let px = window.pageXOffset + clientRect.left ;\n\n    // ページの上端から、要素の上端までの距離\n    let py = window.pageYOffset + clientRect.top ;\n    let mouseX =e.clientX;\n    let mouseY =e.clientY;\n\n    let x = mouseX-px-Math.floor(document.getElementById('sizeInput').value / 2);\n    let y = mouseY-py-Math.floor(document.getElementById('sizeInput').value / 2);\n    attach(img,document.getElementById('sizeInput').value,document.getElementById('sizeInput').value,x,y,document.getElementById('rotInput').value,nowKind,nowName)\n    document.getElementById('save-button').classList.add('active')\n  }\n  const attach=(img,sizex,sizey,x,y,rot,kind,name)=>{\n    img.src             = imgPath + kind + '_' + name + '.png';\n    img.style.width     = sizex + 'px';\n    img.style.height    = sizey + 'px';\n    img.style.position  = 'absolute';\n    img.style.left      = x + 'px';\n    img.style.top       = y + 'px';\n    img.style.transform = 'rotate('+rot+'deg)';\n    let values={\n      posX  : x     ,\n      posY  : y     ,\n      sizeX : sizex ,\n      sizeY : sizey ,\n      rot   : rot   ,\n      kind  : kind\n    };\n    document.getElementById('icon-space').appendChild(img);\n    SetImgsInfoAll(name,values);\n  }\n\n\n\n  // \n  const tracehide=()=>{\n    document.getElementById('traceImage').style.display = 'none';\n  }\n\n  function traceshow(){\n    document.getElementById('traceImage').style.display = 'block';\n  }\n\n  \n\n\n  let sizeTimer;\n  const sizeChange = (e) => {\n    if(sizeTimer){\n      clearTimeout(sizeTimer);\n    }\n    sizeTimer = setTimeout(inputSizeSet, 1000);\n      \n\n//      document.getElementById('traceImage').style.width = e.target.value+'px';\n//      document.getElementById('traceImage').style.height = e.target.value+'px';\n  }\n\n  let rotTimer;\n  const rotChange = (e) => {\n    if(rotTimer){\n      clearTimeout(rotTimer);\n    }\n\n    rotTimer = setTimeout(inputRotSet, 1000);\n      //document.getElementById('traceImage').style.transform ='rotate(' +e.target.value+'deg)';\n  }\n\n  // 回転をmaxminとかいい感じにてくれる関数\n  const inputRotSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input    = document.getElementById('rotInput');\n    let inputRot = input.value;\n    let nextRot;\n    let maxRot   = GetRotMax(name);\n    let minRot   = GetRotMin(name);\n\n    if(maxRot < inputRot){\n      nextRot=maxRot\n    }else if(minRot > inputRot){\n      nextRot=minRot\n    }else{\n      nextRot=inputRot\n    }\n    SetRotNow(name , nextRot);\n    setNowRot(nextRot);\n    input.value=nextRot;\n  }\n  // サイズをmaxminとかいい感じにてくれる関数\n  const inputSizeSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input     = document.getElementById('sizeInput');\n    let inputSize = input.value;\n    let nextSize;\n    let maxSize   = GetSizeMax(name);\n    let minSize   = GetSizeMin(name);\n    \n    if(maxSize < inputSize){\n      nextSize = maxSize\n    }else if(minSize > inputSize){\n      nextSize = minSize;\n    }else{\n      nextSize = inputSize;\n    }\n    SetSizeXYNow(name , nextSize , nextSize);\n    setNowSize(nextSize);\n    input.value=nextSize;\n  }\n\n  const {userId} = useContext(userContext);\n    return (\n      <div id=\"makeIcon\">\n        {userInfo===null&&\n          <p>loading infos...</p>\n        }\n        {userInfo!==null&&\n          <makeIconContext.Provider value = {{nowKind , setNowKind , nowName , setNowName , nowSize , setNowSize , nowRot , setNowRot}}>\n          <div  id = \"icon-space\" className=\"iconMask\"  onMouseMove = {mouthmove}  onMouseLeave = {tracehide}  onMouseEnter = {traceshow}  onClick = {attachByClick} />\n          {console.log(imgPath + nowKind + nowName + \"png\")}\n          <img  id = \"traceImage\"  src = { imgPath + nowKind + \"_\" + nowName + \".png\" }  style = {{ height : nowSize + \"px\" , width : nowSize + \"px\", zIndex : \"100\", position : \"absolute\", display : \"none\", cursor : \"none\", pointerEvents : \"none\",transform : \"rotate(\" + nowRot + \"deg)\" }}>\n          </img>\n          <div>\n            回転\n            <input  type = \"number\"  id = \"rotInput\"  onInput = {rotChange}   min = {GetRotMin(nowName)}  max = {GetRotMax(nowName)} defaultValue = \"0\"></input>\n            サイズ\n            <input  type = \"number\"  id = \"sizeInput\"  onInput = {sizeChange}  min = {GetSizeMin(nowName)}  max = {GetSizeMax(nowName)}  defaultValue = \"30\"></input>\n          </div>\n          <div  id = \"name-buttons\" className=\"\">\n          {Object.entries(GetPartsAll()).map((value) => (\n            <button  key = {value[0]}  className = {value[0]+\" \"+\"iconNameButton btn-border_buttom\"}  data-name = {value[0]}  \n              onClick = {(e)=>{\n                document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n                  if(activeElement.classList.contains('active')){\n                    activeElement.classList.remove('active');\n                  }\n                });\n                e.target.classList.add('active');\n                setNowName(e.target.dataset.name);\n                setNowKind(GetImgsInfoEach(e.target.dataset.name,'kind'));\n                document.getElementById('sizeInput').value=GetSizeXNow(e.target.dataset.name);\n                document.getElementById('rotInput').value=GetRotNow(e.target.dataset.name);\n                inputSizeSet(e.target.dataset.name);\n                inputRotSet(e.target.dataset.name);\n              }}\n            >{value[1][\"displayName\"]}</button>\n          ))}\n          </div>\n          <PartsSelect />\n          </makeIconContext.Provider>\n          }\n      </div>\n    )\n}\nconst makeIconContext = createContext([])\nexport {makeIconContext};\nexport default MakeIcon;","import firebase,{db} from '../Firebase/Firebase';\nimport {Redirect} from 'react-router-dom';\nimport {useContext} from 'react';\nimport { setIsFirst, userContext } from '../App';\n\nconst NoLogin=()=>{\n  const {setUserId,setUserName,setIsOnline,isOnline} = useContext(userContext);\n\n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n\n  // ログイン処理\n  const loginWithGoogle = () => {\n    // もうauthにアカウントがあるかとかかな？...\n    setIsFirst(true);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(function() {\n\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      // サインインしてもらう\n      firebase.auth().signInWithPopup(provider)\n      .then(async function(result) {\n        await db.collection('/users').where('userId','==',result.user.uid).get().then(function(doc) {\n          console.log(doc);\n          // まだアカウントないなら\n          if (doc.empty) {\n            console.log(\"No user\");\n            db.collection('users').doc(result.user.uid).set({\n              userId      : result.user.uid,\n              displayName : 'ゲスト',\n              oneWord     : '',\n              room        : null,\n              rooms       : [],\n              iconinfo    :({\n                \"face\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"hair\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"leftEye\"   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n                \"rightEye\"  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n                \"nose\"      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n                \"mouth\"     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n              })\n            }).then(async (doc)=>{\n              await db.collection('users').doc(result.user.uid).collection('seclet').doc(result.user.uid).set({\n                userName : result.user.displayName,\n                email    : result.user.email,\n              }).then(()=>{\n                console.log('login fin');    \n                setIsOnline(true);\n                setUserId(result.user.uid);\n              }).catch((error)=>{\n                db.collection('users').doc(result.user.uid).delete().then(()=>{\n                  logoutFromGoogle();\n                  alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n                  console.log(error);\n                })\n              })\n            }).catch((error)=>{\n              logoutFromGoogle();\n              alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n              console.log(error);\n            })\n          }else{\n            setIsOnline(true);\n            setUserId(result.user.uid);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"Error : \", error);\n        });\n      }.bind(this))\n        .catch(function(error) {\n          alert(\"Googleでサインインできませんでした。 Error: \" , error);\n          console.log(error);\n          return false;\n        }\n      );\n    }.bind(this));\n  }\n  \n  return(\n    <div>\n      {isOnline === true &&\n        <div>\n          ログインしました！\n          <Redirect to = \"/userSetting\"/>\n        </div>\n      }\n      {isOnline === false &&\n        <div>\n          ログインしていません\n          <button onClick = {loginWithGoogle}>\n            Googleでログイン\n          </button>\n        </div>\n      }\n      {isOnline === null &&\n        <>loading aouth...</>\n      }\n    </div>\n    \n  )\n}\n\nexport default NoLogin;","import React, { Component,getState, createContext,useContext,useState,useEffect } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\nimport NavBar from './NavBar/NavBar';\nimport Comments from './Room/Comments/Comments';\nimport MakeIcon from './UserSettings/UserInfo/MakeIcon/MakeIcon';\nimport UserSettings from './UserSettings/UserSettings';\nimport Room from './Room/Room';\nimport Main from './Main/Main';\nimport { useWorker } from 'react-hooks-worker';\n\nimport {googleauthConfig} from './miserarenaiyo';\nimport firebase, { db } from './Firebase/Firebase';  \nimport NoLogin from './UserSettings/NoLogin';\nimport Error from './Error/Error';\n\n//ユーザー系のcontext\nexport const userContext=createContext();\n\nlet isFirst=false;\n\nconst App = () => {\n  //ユーザー系のステート\n  const [isOnline , setIsOnline] = useState(null);\n  const [userId   , setUserId  ] = useState(null);\n  const [userInfo , setUserInfo] = useState(null);\n  \n  useEffect(() => {\n    async function getUserInfo(){\n      if(userId){\n        const userInfoUnsubscribe = await db.collection('users').doc(userId).onSnapshot(doc=>{\n          db.collection('users').doc(userId).collection('seclet').doc(userId).get().then(seclet=>{\n            let data=doc.data();\n            let secletdata=seclet.data();\n            console.log(data,secletdata)\n            console.log('んー')\n            setUserInfo({\n              userName    : secletdata['userName'] ,\n              email       : secletdata['email']    ,\n              displayName : data['displayName']    ,\n              oneWord     : data['oneWord']        ,\n              iconinfo    : data['iconinfo']       ,\n              rooms       : data['rooms']          ,\n              room        : data['room']\n            });\n          });\n        });\n        return () => userInfoUnsubscribe();\n      }\n    }\n    getUserInfo();\n  },[userId]);\n\n  useEffect(() => {\n    //ログイン時にステート更新する処理\n    firebase.auth().onAuthStateChanged(async function (user) {\n        let isOnline = false;\n        let userId = null;\n        if (user) {\n            userId   = user.uid;\n            isOnline = true;\n        }\n        if(isFirst===false){\n          setUserId(userId);\n          setIsOnline(isOnline);\n          console.log('わぁっと',isFirst)\n        };\n        //this.setState({isOnline:isOnline})\n        //this.setState({userId:userId})\n      }.bind(this));\n  })\n  // ルーティングはここでやる\n  return (\n      <div>\n      <userContext.Provider value={{isOnline , setIsOnline , userId , setUserId, userInfo , setUserInfo }}>\n        <NavBar/>\n        <Switch>\n          <Route exact path = '/login' component = {NoLogin} /> \n          {console.log(userId)}\n          {isOnline === false &&<Redirect to = {'/login'} />}\n          {isOnline === true &&\n            <Switch>\n              <Route exact path='/error'       component = {Error}/>\n              <Route exact path='/'            component = {Main}/>\n              <Route exact path='/userSetting' component = {UserSettings}/>\n              <Route exact path='/room/:id'    component = {Room}/>\n              <Redirect to = {'/error'} />\n            </Switch>\n          }\n          <>loading...</>\n        </Switch>\n      </userContext.Provider>\n      </div>\n  );\n}\n\n\n\n\n\n/**\n * \n * <Auth>\n            <Switch>\n            </Switch>\n          </Auth>\n          \n *  */\n//export {UserContext};\nexport function setIsFirst(newValue){\n  isFirst=newValue;\n}\nexport default App;\n","import firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\nimport {useContext,useEffect,useState} from 'react';\nimport { SettingContext } from '../UserSettings';\nimport { Redirect } from 'react';\nimport { GetImgsInfoAllAll } from './MakeIcon/IconData';\n//import logoutFromGoogle from '../Logout';\nimport './loggedIn.css'\n\nconst Loggedin=()=>{\n  const {setIsOnline , isOnline , setUserId , userId ,userInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  const changeInfoAPI = () =>{\n    if(document.getElementById('save-button').classList.contains('active')){\n      const newDisplayName = document.getElementById('displayName-input').value;\n      const newOneWordName = document.getElementById('oneWord-input').value;\n      db.collection('users').doc(userId).update({\n        displayName : newDisplayName,\n        oneWord     : newOneWordName,\n      }).then((doc)=>{\n        let value=GetImgsInfoAllAll();\n        db.collection('users').doc(userId).update({\n          iconinfo:value\n        }).then(()=>{\n          document.location.reload();\n        }).catch(error => {\n          // error\n          console.log(error)\n        });\n      }).catch((error)=>{\n        logoutFromGoogle();\n        alert('エラーが発生しました。申し訳ありませんが、もう一度ログインをお願いします。Error:'+error);\n        console.log(error);\n      })\n    }\n  }\n\n  return(\n    <div>\n      {userInfo===null&&\n        <p>Loading userInfo...</p>\n      }\n      {userInfo&&\n        <div>\n          <ul>\n            <li><h4>表示名</h4><input id=\"displayName-input\" type=\"text\" maxLength=\"15\" defaultValue={userInfo['displayName']} \n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></li>\n            <li><h4>ひとこと</h4><h3><input id=\"oneWord-input\" type=\"text\" maxLength=\"30\" defaultValue={userInfo['oneWord']}\n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></h3></li>\n            <li><h4>名前</h4><h3>{userInfo['userName']}</h3></li>\n            <li><h4>メールアドレス</h4><h3>{userInfo['email']}</h3></li>\n            <li><h4>Googleでログインしています</h4><button onClick = {logoutFromGoogle}>ログアウト</button></li>\n          </ul>    \n          <a id=\"save-button\" onClick = {changeInfoAPI} >変更を保存</a>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default Loggedin;","import React, {Component,useContext,createContext,useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\nimport MakeIcon from './UserInfo/MakeIcon/MakeIcon';\nimport {userContext} from '../App'\n\nimport firebase, { db } from '../Firebase/Firebase';  \nimport NoLogin from './NoLogin';\nimport Loggedin from './UserInfo/LoggedIn';\n\nimport './usersettings.css';\n//import logoutFromGoogle from './Logout';\n\n\nconst UserSettings = () =>{\n  const {isOnline,setIsOnline,userId,setUserId,userInfo,setUserInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  return (\n      <div>\n        {isOnline===null &&\n          <p>loading....</p>\n        }\n        {isOnline === true &&\n          <div id=\"settings\">\n            <MakeIcon />\n            <Loggedin />\n          </div>\n        }\n        {isOnline === false &&\n          <NoLogin/>\n        }\n      </div>\n  );\n}\nexport default UserSettings;\n","import React,{useContext} from 'react';\nimport firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\n\nconst RoomForm = () =>{\n  const {userId,userInfo} =useContext(userContext);\n\n  const roomAPI=()=>{\n    let roomName = document.getElementById('nameInput').value;\n    if(roomName.length > 0 && roomName.length<=15){\n      let StageId  = document.getElementById('stage').value;\n      console.log(roomName,StageId);\n      db.collection('/rooms').add({\n        roomName     : roomName,\n        stageId      : StageId,\n        madeUserId   : userId,\n        madeUserName : userInfo['displayName'],\n        timeStamp    : firebase.firestore.FieldValue.serverTimestamp(),\n        members      : []\n      }).then((docs) => {\n        console.log(docs)\n      }).catch(error => {\n        // error\n        console.log(error)\n      });\n    }else{\n      alert('ルーム名は1文字以上、15文字以下である必要があります。');\n    }\n  }\n\n  return(\n    <div id=\"roomForm\">\n      <label htmlFor=\"name\" >ルームの名前</label>\n      <input id=\"nameInput\" type=\"text\" name=\"name\" maxLength=\"15\" /><br/>\n      <label htmlFor=\"stage\" defaultValue=\"0\">ステージ</label>\n      <select id=\"stage\" name=\"stage\" className=\"custom-select\">\n        <option value=\"0\">Zero</option>\n        <option value=\"1\">One</option>\n        <option value=\"2\">Two</option>\n      </select><br/>\n      <button onClick = {roomAPI}>投稿</button>\n    </div>\n  )\n}\nexport default RoomForm;","import React, {Component,useState,useEffect,current} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport firebase, { db } from '../../Firebase/Firebase';  \nimport SplitPane from 'react-split-pane';\nimport RoomForm from '../RoomForm/RoomForm';\n\nconst Rooms = () => {\n\n  const [rooms,setRooms]=useState(null);\n  \n  useEffect(() => {\n    let unmounted=false;\n    async function roomsData() {\n      // ルームのデータを取得。\n      const unsubscribe = await db.collection('/rooms').orderBy('timeStamp', 'asc').get().then(col=> {\n        if(!unmounted){\n          console.log(\"ぺ\");\n          // idを配列に\n          let roomids=col.docs.map(postCol => \n            postCol.id\n          );\n          // データの中身を取得\n          let value=[];\n          col.forEach((postCol) => {\n            value.push(\n              postCol.data()\n            );\n          });\n          col.docChanges().forEach(change => {\n            console.log(change.doc.data());\n          });\n          console.log(roomids,value)\n          let rooms=[];\n          // idとデータを合体\n          for(let i = 0; i < roomids.length; i++){\n            console.log(value);\n            let d = value[i][\"timeStamp\"].toDate();\n            console.log(d,d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),value[i][\"timeStamp\"],value[i]);\n            rooms.push({\n                roomName     : value[i][\"roomName\"],\n                stageId      : value[i][\"stageId\"],\n                madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n                madeUserName : value[i][\"madeUserName\"],\n                members      : value[i][\"members\"],\n                id           : roomids[i],\n              }\n            )\n          }\n          setRooms(rooms);\n        }\n      });// ...\n    };\n    roomsData();\n  }, []);\n  return (\n    <div id=\"rooms\" className=\"list-group\">\n      {rooms === null && <p>Loading rooms...</p>}\n      {\n        rooms && rooms.map(room => (\n          <li key={room.id} className=\"roomsItem list-group-item d-flex\">\n            <Link to={`/room/${room.id}`}>\n              <h4 >{room.roomName}</h4>\n            </Link>\n            <h4 >作成者：{room.madeUserName}</h4>\n            {console.log(room.madeTime)}\n            <h4 >作成日時：{room.madeTime}</h4>\n            <h4 >メンバー：{room.members.length}人</h4>\n          </li>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Rooms;","import React from 'react';\nimport SplitPane from 'react-split-pane';\nimport RoomForm from './RoomForm/RoomForm';\nimport Rooms from './Rooms/Rooms';\n\nconst Main = () => {\n  return (\n    <div id=\"roomsAndForm\">\n      <Rooms />\n      <RoomForm />\n    </div>\n  )\n}\nexport default Main;","const Error=()=>{\n  return(\n    <div>\n      <p>ページが見つかりませんでした。削除・変更されたか、URLが間違っている可能性があります。</p>\n    </div>\n  )\n}\n\nexport default Error;","import React,{createContext,useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n//import User from './User';\n//import { createStore } from 'redux'\n//import todoApp from './reducers/test.js'\n//let store = createStore(todoApp)\n\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();"],"sourceRoot":""}