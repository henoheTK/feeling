[{"/home/vagrant/workspace/qa-app/src/index.js":"1","/home/vagrant/workspace/qa-app/src/App.js":"2","/home/vagrant/workspace/qa-app/src/NavBar/NavBar.js":"3","/home/vagrant/workspace/qa-app/src/IconRender.js":"4","/home/vagrant/workspace/qa-app/src/miserarenaiyo.js":"5","/home/vagrant/workspace/qa-app/src/Firebase/Firebase.js":"6","/home/vagrant/workspace/qa-app/src/Main/Main.js":"7","/home/vagrant/workspace/qa-app/src/Main/RoomForm/RoomForm.js":"8","/home/vagrant/workspace/qa-app/src/Room/Room.js":"9","/home/vagrant/workspace/qa-app/src/Main/Rooms/Rooms.js":"10","/home/vagrant/workspace/qa-app/src/Room/Comments/Comments.js":"11","/home/vagrant/workspace/qa-app/src/Room/Stages/Stage.js":"12","/home/vagrant/workspace/qa-app/src/Room/Stages/CommetForm/CommentForm.js":"13","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/StageIcon.js":"14","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/NewComment.js":"15","/home/vagrant/workspace/qa-app/src/Room/RoomHeader/RoomHeader.js":"16","/home/vagrant/workspace/qa-app/src/Room/Stages/Kanran/Kanran.js":"17","/home/vagrant/workspace/qa-app/src/IconRandomMove.js":"18","/home/vagrant/workspace/qa-app/src/UserSettings/UserSettings.js":"19","/home/vagrant/workspace/qa-app/src/UserSettings/NoLogin.js":"20","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/LoggedIn.js":"21","/home/vagrant/workspace/qa-app/src/UserSettings/logout.js":"22","/home/vagrant/workspace/qa-app/src/UserSettings/Logout.js":"23","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/ReActionButtons.js":"24","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/ReActions.js":"25","/home/vagrant/workspace/qa-app/src/Error/Error.js":"26","/home/vagrant/workspace/qa-app/src/Room/Stages/Nomal/Nomal.js":"27","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/MakeIcon.js":"28","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/IconData.js":"29","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/PartsSelect/PartsSelect.js":"30"},{"size":725,"mtime":1611472330000,"results":"31","hashOfConfig":"32"},{"size":3625,"mtime":1612082473000,"results":"33","hashOfConfig":"32"},{"size":4735,"mtime":1611918485000,"results":"34","hashOfConfig":"32"},{"size":1921,"mtime":1612085790000,"results":"35","hashOfConfig":"32"},{"size":584,"mtime":1611104353000,"results":"36","hashOfConfig":"32"},{"size":210,"mtime":1611129644000,"results":"37","hashOfConfig":"32"},{"size":281,"mtime":1611645168000,"results":"38","hashOfConfig":"32"},{"size":1499,"mtime":1611801538000,"results":"39","hashOfConfig":"32"},{"size":7356,"mtime":1612076799000,"results":"40","hashOfConfig":"32"},{"size":2476,"mtime":1611658331000,"results":"41","hashOfConfig":"32"},{"size":1678,"mtime":1611736800000,"results":"42","hashOfConfig":"32"},{"size":4740,"mtime":1611809891000,"results":"43","hashOfConfig":"32"},{"size":3172,"mtime":1612084904000,"results":"44","hashOfConfig":"32"},{"size":1907,"mtime":1611810368000,"results":"45","hashOfConfig":"32"},{"size":402,"mtime":1611710203000,"results":"46","hashOfConfig":"32"},{"size":799,"mtime":1611555472000,"results":"47","hashOfConfig":"32"},{"size":1044,"mtime":1611736790000,"results":"48","hashOfConfig":"32"},{"size":867,"mtime":1611809270000,"results":"49","hashOfConfig":"32"},{"size":1087,"mtime":1611813745000,"results":"50","hashOfConfig":"32"},{"size":4020,"mtime":1612083595000,"results":"51","hashOfConfig":"32"},{"size":2617,"mtime":1611819244000,"results":"52","hashOfConfig":"32"},{"size":505,"mtime":1611701537000,"results":"53","hashOfConfig":"32"},{"size":427,"mtime":1611702780000,"results":"54","hashOfConfig":"32"},{"size":1279,"mtime":1611810675000,"results":"55","hashOfConfig":"32"},{"size":476,"mtime":1611787579000,"results":"56","hashOfConfig":"32"},{"size":217,"mtime":1611795372000,"results":"57","hashOfConfig":"32"},{"size":551,"mtime":1611995671000,"results":"58","hashOfConfig":"32"},{"size":8377,"mtime":1611820214000,"results":"59","hashOfConfig":"32"},{"size":6217,"mtime":1612084599000,"results":"60","hashOfConfig":"32"},{"size":1145,"mtime":1611819905000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"122sjy",{"filePath":"66","messages":"67","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"68","usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":3,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"65"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"65"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"65"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"65"},"/home/vagrant/workspace/qa-app/src/index.js",["145","146"],"import React,{createContext,useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport './index.css'\n//import User from './User';\n//import { createStore } from 'redux'\n//import todoApp from './reducers/test.js'\n//let store = createStore(todoApp)\n\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();",["147","148"],"/home/vagrant/workspace/qa-app/src/App.js",["149","150","151","152","153","154","155","156","157","158"],"import React, { Component,getState, createContext,useContext,useState,useEffect } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\nimport NavBar from './NavBar/NavBar';\nimport Comments from './Room/Comments/Comments';\nimport MakeIcon from './UserSettings/UserInfo/MakeIcon/MakeIcon';\nimport UserSettings from './UserSettings/UserSettings';\nimport Room from './Room/Room';\nimport Main from './Main/Main';\nimport { useWorker } from 'react-hooks-worker';\n\nimport {googleauthConfig} from './miserarenaiyo';\nimport firebase, { db } from './Firebase/Firebase';  \nimport NoLogin from './UserSettings/NoLogin';\nimport Error from './Error/Error';\n\n//ユーザー系のcontext\nexport const userContext=createContext();\n\nlet isFirst=false;\n\nconst App = () => {\n  //ユーザー系のステート\n  const [isOnline , setIsOnline] = useState(null);\n  const [userId   , setUserId  ] = useState(null);\n  const [userInfo , setUserInfo] = useState(null);\n  \n  useEffect(() => {\n    async function getUserInfo(){\n      if(userId){\n        const userInfoUnsubscribe = await db.collection('users').doc(userId).onSnapshot(doc=>{\n          db.collection('users').doc(userId).collection('seclet').doc(userId).get().then(seclet=>{\n            let data=doc.data();\n            let secletdata=seclet.data();\n            console.log(data,secletdata)\n            console.log('んー')\n            setUserInfo({\n              userName    : secletdata['userName'] ,\n              email       : secletdata['email']    ,\n              displayName : data['displayName']    ,\n              oneWord     : data['oneWord']        ,\n              iconinfo    : data['iconinfo']       ,\n              rooms       : data['rooms']          ,\n              room        : data['room']\n            });\n          });\n        });\n        return () => userInfoUnsubscribe();\n      }\n    }\n    getUserInfo();\n  },[userId]);\n\n  useEffect(() => {\n    //ログイン時にステート更新する処理\n    firebase.auth().onAuthStateChanged(async function (user) {\n      let isOnline = false;\n      let userId = null;\n      if (user) {\n        userId   = user.uid;\n        isOnline = true;\n      }\n      // 初回ログイン時、データの追加より先に、stateが更新され、エラーになってしまうため、その対策。\n      if(!isFirst){\n        setUserId(userId);\n        setIsOnline(isOnline);\n      };\n      //this.setState({isOnline:isOnline})\n      //this.setState({userId:userId})\n    }.bind(this));\n  })\n  // ルーティングはここでやる\n  return (\n      <div>\n      <userContext.Provider value={{isOnline , setIsOnline , userId , setUserId, userInfo , setUserInfo }}>\n        <NavBar/>\n        <Switch>\n          <Route exact path = '/login' component = {NoLogin} /> \n          {console.log(userId)}\n          {isOnline === false &&<Redirect to = {'/login'} />}\n          {isOnline === true &&\n            <Switch>\n              <Route exact path='/error'       component = {Error}/>\n              <Route exact path='/'            component = {Main}/>\n              <Route exact path='/userSetting' component = {UserSettings}/>\n              <Route exact path='/room/:id'    component = {Room}/>\n              <Redirect to = {'/error'} />\n            </Switch>\n          }\n          <>loading...</>\n        </Switch>\n      </userContext.Provider>\n      </div>\n  );\n}\n\n\n\n\n\n/**\n * \n * <Auth>\n            <Switch>\n            </Switch>\n          </Auth>\n          \n *  */\n//export {UserContext};\nexport function setIsFirst(newValue){\n  isFirst=newValue;\n}\nexport default App;\n","/home/vagrant/workspace/qa-app/src/NavBar/NavBar.js",["159","160","161","162"],"import React,{ useContext,useEffect,useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport { userContext } from '../App';\nimport firebase, {db} from '../Firebase/Firebase'\nimport Icon from '../IconRender';\nimport './navbar.css'\n\nfunction NavBar() {\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  const [allrooms,setAllRooms] =useState(null);\n  const [nowRoom,setNowRoom] =useState(null);\n  \n  useEffect(()=>{\n    \n    if(userInfo){\n      // 一番最後に入ったルームのルーム名取得。\n      if(userInfo['room']){\n        db.collection('rooms').doc(userInfo['room']).get().then((doc)=>{\n          if(doc.exists){\n            setNowRoom([doc.id,doc.data()['roomName']]);\n          }else{\n            // そのルームが存在しないならnullに。削除されたとき対策\n            db.collection('users').doc(userId).update({\n              room : null\n            })\n          }\n        })\n      }\n      // 入室しているルームを取得\n      if(userInfo['rooms'].length!==0){\n        db.collection('rooms').where(firebase.firestore.FieldPath.documentId(),'in',userInfo['rooms']).get().then((doc)=>{\n        let roomInfos={};\n        let existsRoom=[];\n        console.log(doc);\n        if(!doc.empty){\n          doc.docs.forEach((room)=>{\n            if(room.exists){\n              roomInfos[room.id]=room.data()['roomName'];\n              console.log(room,room.id,room.data()['roomName'],room.data());\n              existsRoom.push(room.id);\n            }\n          });\n          setAllRooms(roomInfos);\n          if(existsRoom.length!==userInfo['rooms'].length){\n            db.collection('users').doc(userId).update({\n              rooms:existsRoom\n            })\n          }\n          console.log(roomInfos);\n        }else{\n          setAllRooms(false);\n          db.collection('users').doc(userId).update({\n            rooms:[]\n          })\n        }\n      }).catch((error)=>{\n        console.log('Error:'+error)\n      })\n    }else{\n      setAllRooms(false);\n    }\n  }\n  },[userInfo]);\n  return (\n    <nav className=\"navbar navbar-default\">\n      <div className=\"container-fluid\">\n\t\t\t\t<div className=\"navbar-header\">\n\t\t\t\t\t<button type=\"button\" className=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\n\t\t\t\t\t\t<span className=\"sr-only\">Toggle navigation</span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<a className=\"navbar-brand\" href=\"/\">エモいチャット。</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n\t\t\t\t\t<ul className=\"nav navbar-nav\">\n            \n            <li className=\"\"><a href=\"/\">ホーム<span className=\"sr-only\">(current)</span></a></li>\n\t\t\t\t\t\t\n            {nowRoom!==null&&\n              <li className=\"active\"><a href={\"/room/\"+nowRoom[0]}>{nowRoom[1]}<span className=\"sr-only\">(current)</span></a></li>\n            }\n\t\t\t\t\t\t<li className=\"dropdown\">\n              <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\">ルームs <span className=\"caret\"></span></a>\n              <ul className=\"dropdown-menu\" role=\"menu\">\n                  {allrooms===false &&\n                    <li><p>まだ入室しているルームがありません</p></li>\n                  }\n                  {allrooms!==null && allrooms!==false &&\n                    Object.entries(allrooms).map((value)=>(\n                     <li key={value[0]}><a href={\"/room/\"+value[0]}>{value[1]}</a></li>\n                     //console.log(value)\n                    ))\n                  }\n\t\t\t\t\t\t  \t</ul>\n\t\t\t\t\t\t  </li>\n          </ul>\n\t\t\t\t\t{/*検索機能はいったんコメントアウト\n          <form className=\"navbar-form navbar-left\" role=\"search\">\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-default\">Submit</button>\n          </form>\n          */}\n          {isOnline===true &&\n\t\t\t\t\t  <ul className=\"nav navbar-nav navbar-right\">\n\t\t\t\t\t  \t<li id=\"userInfo-li\"  href=\"/userSetting\">\n                <a id='infoLink-icon' href=\"/userSetting\"></a>\n                <div href=\"/userSetting\"  className='iconMask barMask'>\n                  {userInfo !== null&&\n                    <Icon iconInfo={userInfo['iconinfo']} where=\"header\" iconSize=\"50\" />\n                  }\n                  <h6 id=\"icon-loading-text\">loading icon...</h6>\n                </div>\n              </li>\n\t\t\t\t\t  </ul>\n          }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</nav>\n  );\n}\n//<Icon iconInfo={}></Icon>\n            \nexport default NavBar;\n","/home/vagrant/workspace/qa-app/src/IconRender.js",["163","164","165","166","167"],"import React, { Component, createContext,useContext,useState } from 'react';\n\n// 感情の変化させるパーツの配列。\nconst emoteParts={\n  'happy':[\n    'leftEye','rightEye','mouth'\n  ],\n  'angry':[\n    'leftEye','rightEye','mouth'\n  ],\n  'naki':[\n    'leftEye','rightEye','mouth'\n  ],\n  'yurei':[\n    'leftEye','rightEye','mouth'\n  ],\n  'thinking':[\n    'leftEye','rightEye','mouth'\n  ],\n  'henoheno':[\n    'leftEye','rightEye','mouth','nose','face'\n  ]\n}\n\n// propsはiconInfoとiconSize、emotion、where。\nconst Icon=(props)=>{\n  const Parts=(parts)=>{\n    const info=parts.info;\n    // 感情がある場合にはその感情のパス、ない場合は保存されてるパスを渡す。\n    let path;\n    //rotは、感情がある場合0で渡す\n    let rot;\n    console.log(props.emotion,props.emotion!==null);\n    if(props.emotion!=='null'&&props.emotion&&emoteParts[props.emotion].indexOf(info[0])!==-1){\n      path=\"../images/icon/\"+props.emotion+\"_\"+info[0]+\".png\";\n      rot=0;\n    }else{\n      path=\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\";\n      rot=parseInt(info[1][\"rot\"]);\n    }\n    return(\n      <img key={info[0]} className={props.where+\"-iconparts \"+info[0]} src={path} style={{\n        height  : (info[1][\"sizeY\"] / 300) * props.iconSize + \"px\" ,\n        width   : (info[1][\"sizeX\"] / 300) * props.iconSize + \"px\" ,\n        top     : (info[1][\"posY\"]  / 300) * props.iconSize + \"px\" ,\n        left    : (info[1][\"posX\"]  / 300) * props.iconSize + \"px\" ,\n        position :\"absolute\" , \n        transform:\"rotate(\"+rot+\"deg)\",\n      }} />\n    )\n  }\n  return (\n    <div className={props.where+\"-icon\"} style={{position:\"relative\", height:props.iconSize+\"px\", width:props.iconSize+\"px\"}}>\n      {console.log(props.iconInfo)}\n      {Object.entries(props.iconInfo).map(info => (\n        <Parts key={info[0]} info={info}></Parts>\n      ))}  \n    </div>\n  );\n}\n\nexport default Icon;\n","/home/vagrant/workspace/qa-app/src/miserarenaiyo.js",[],"/home/vagrant/workspace/qa-app/src/Firebase/Firebase.js",[],"/home/vagrant/workspace/qa-app/src/Main/Main.js",["168"],"import React from 'react';\nimport SplitPane from 'react-split-pane';\nimport RoomForm from './RoomForm/RoomForm';\nimport Rooms from './Rooms/Rooms';\n\nconst Main = () => {\n  return (\n    <div id=\"roomsAndForm\">\n      <Rooms />\n      <RoomForm />\n    </div>\n  )\n}\nexport default Main;","/home/vagrant/workspace/qa-app/src/Main/RoomForm/RoomForm.js",[],"/home/vagrant/workspace/qa-app/src/Room/Room.js",["169","170","171","172","173","174","175","176","177","178"],"import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport axios from 'axios';\nimport Icon from '../IconRender'\nimport Stage from './Stages/Stage';\nimport SplitPane from 'react-split-pane';\nimport { Splitpanes, Pane } from 'splitpanes'\nimport 'splitpanes/dist/splitpanes.css'\nimport Comments from './Comments/Comments';\nimport firebase, { db } from '../Firebase/Firebase'; \nimport {userContext} from '../App'\nimport RoomHeader from './RoomHeader/RoomHeader';\nimport './room.css';\nimport { Redirect } from 'react-router-dom/cjs/react-router-dom.min';\n\nconst defaultSplitSize=800;\n\nconst Room = () => {\n  const [room,setRoom] = useState(null);\n  const [isRoom,setIsRoom] = useState(null);\n  const [comments,setComments] = useState(null);\n  const [splitSize,setSplitSize] = useState(defaultSplitSize);\n  const [members,setMembers] = useState(null);\n  const {isOnline,userId,userInfo} = useContext(userContext);\n  // URLのパラメータを取得\n  var Path = window.location.pathname;\n  var roomId = Path.split('/')[2];\n  \n  useEffect(()=>{\n    async function roomData() {\n      const roomUnsubscribe = await db.collection('/rooms').doc(roomId).onSnapshot(doc=> {\n        if(doc.exists){\n          let value=doc.data();\n          console.log(userId,value['members']);\n          console.log(value['members'].indexOf(userId)===-1);\n          if(value['members'].indexOf(userId)===-1){\n            console.log('追加');\n            db.collection('rooms').doc(roomId).update({\n              members: firebase.firestore.FieldValue.arrayUnion(userId)\n            })\n            db.collection('users').doc(userId).update({\n              rooms: firebase.firestore.FieldValue.arrayUnion(roomId)\n            })\n            db.collection('users').doc(userId).update({\n              room: roomId\n            })\n          }\n          let d = value['timeStamp'].toDate();\n          let roomData={\n            id           : doc.id,\n            roomName     : value['roomName'],\n            stageId      : value['stageId'],\n            madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n            madeUserName : value['madeUserName'],\n            members      : value['members'],\n\n          }\n          setIsRoom(true);\n          setRoom(roomData);\n        }else{\n          setIsRoom(false);\n        }\n      });\n      return () => roomUnsubscribe();\n    };\n    roomData();\n  },[])\n\n  useEffect(() => {\n    async function commentsData(){\n      if(isRoom){\n        const commentsUnsubscribe = await db.collection('/rooms').doc(roomId).collection('comments').orderBy('timeStamp', 'asc').onSnapshot(data=> {\n          let commentIds=data.docs.map(doc => \n            doc.id\n          );\n          let value=[];\n          data.forEach((doc) => {\n            value.push(\n              doc.data()\n            );\n          });\n          let comments=[];\n           for(let i = 0; i < commentIds.length; i++){\n            comments.push(\n              {\n                id       : commentIds[i],\n                content  : value[i]['content'],\n                emotion  : value[i]['emotion'], \n                userId   : value[i]['userId'],\n              }\n            )\n          }\n          console.log(commentIds,comments,data);\n          setComments(comments);\n        });// ...\n        return () => commentsUnsubscribe();\n      }\n    }\n    \n    async function membersData(){\n      if(isRoom){\n          const memberUnsubscribe= await db.collection('rooms').doc(roomId).onSnapshot(async doc=>{\n          const memberIds=doc.data()['members'];\n          console.log(memberIds);\n          if(memberIds&&memberIds.length!==0){\n            await db.collection('users').where('userId','in',memberIds).get().then(infos=>{\n              if(!infos.empty){\n                console.log(infos);\n                let value={};\n                infos.docs.forEach(info=>{\n                  let data=info.data();\n                  let memberId=info.data()['userId'];\n                  value[memberId]={\n                    displayName : data['displayName'],\n                    oneWord     : data['oneWord'],\n                    iconInfo    : data['iconinfo']\n                  }\n                })\n                console.log(value,infos,infos.docs);\n                setMembers(value);\n              }\n              //infos.push(info.data()['iconinfo']);\n            });\n          }\n        });\n        return () => memberUnsubscribe();\n      }\n    }\n    \n    commentsData();\n    membersData();\n  \n    //unsubscribe();\n    \n  }, [isRoom]);\n  \n  \n//  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n\n  \n  //if (this.state.room === null) return <p>Loading ...</p>;\n  return (\n    //<Nomal />\n        //<Icon iconInfo={room.iconInfo[0].value}/>\n    <div className=\"container\">\n      {isRoom===null && <p>Loading Room...</p>}\n      {isRoom===true&&\n        <roomContext.Provider value={{members,setMembers,room,setRoom,comments,setComments,splitSize,setSplitSize}}>\n          {room===null && <p>Loading Room...</p>}\n          {room &&\n            <div className=\"row\">\n              <RoomHeader />\n              <SplitPane split=\"vertical\" minSize={300} defaultSize={defaultSplitSize} maxSize={1000} style={{\"height\":window.innerHeight-101}}>\n                <div id='left' style={{'display':'flex'}}>\n                  {members === null && <p>Loading Stage...</p>}\n                  {members !== null&&<Stage/>}\n                </div>\n                <div id=\"right\" >\n                  {comments === null && <p>Loading Ccomments...</p>}\n                  {comments !==null && <Comments />}\n                </div>\n              </SplitPane>\n            </div>\n          }\n        </roomContext.Provider>\n      }\n      {isRoom==false &&\n        <Redirect to = {'/error'} />\n      }\n    </div>\n  )\n}\n/*\n<img key={name} className=\"icon\" src={\"./images/icon/\"+comment.iconinfo.info[name][\"kind\"]+\"_\"+name+\".png\"} style={{\n                    height   :comment.iconinfo.info[name][\"sizeY\"]/3  + \"px\" ,\n                    width    :comment.iconinfo.info[name][\"sizeX\"]/3  + \"px\" ,\n                    top      :comment.iconinfo.info[name][\"posY\"]/3 + \"px\" ,\n                    left     :comment.iconinfo.info[name][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+comment.iconinfo.info[name][\"rot\"]+\"deg)\",\n                  }} />\n\n\n                  <img key={info[0]} className=\"icon\" src={\"../images/icon/\"+info[1][\"kind\"]+\"_\"+info[0]+\".png\"} style={{\n                    height   :info[1][\"sizeY\"]/3  + \"px\" ,\n                    width    :info[1][\"sizeX\"]/3  + \"px\" ,\n                    top      :info[1][\"posY\"]/3 + \"px\" ,\n                    left     :info[1][\"posX\"]/3 + \"px\" ,\n                    position :\"absolute\" , \n                    transform:\"rotate(\"+info[1][\"rot\"]+\"deg)\",\n                  }} />\n\n\n\n                  this.state.comments.map(comment => (\n              <div key={comment.id.toString()} className=\"comment\">\n                  <Icon iconInfo={this.state.room.iconInfo.filter(i => (i.id === parseInt(comment.userId)))[0].value}/>\n                <h1 className=\"\">{comment.content}</h1>\n              </div>\n            ))\n*/\nconst roomContext=createContext([]);\nexport {roomContext};\nexport default Room;","/home/vagrant/workspace/qa-app/src/Main/Rooms/Rooms.js",["179","180","181","182","183","184","185"],"import React, {Component,useState,useEffect,current} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport firebase, { db } from '../../Firebase/Firebase';  \nimport SplitPane from 'react-split-pane';\nimport RoomForm from '../RoomForm/RoomForm';\n\nconst Rooms = () => {\n\n  const [rooms,setRooms]=useState(null);\n  \n  useEffect(() => {\n    let unmounted=false;\n    async function roomsData() {\n      // ルームのデータを取得。\n      const unsubscribe = await db.collection('/rooms').orderBy('timeStamp', 'asc').get().then(col=> {\n        if(!unmounted){\n          console.log(\"ぺ\");\n          // idを配列に\n          let roomids=col.docs.map(postCol => \n            postCol.id\n          );\n          // データの中身を取得\n          let value=[];\n          col.forEach((postCol) => {\n            value.push(\n              postCol.data()\n            );\n          });\n          col.docChanges().forEach(change => {\n            console.log(change.doc.data());\n          });\n          console.log(roomids,value)\n          let rooms=[];\n          // idとデータを合体\n          for(let i = 0; i < roomids.length; i++){\n            console.log(value);\n            let d = value[i][\"timeStamp\"].toDate();\n            console.log(d,d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),value[i][\"timeStamp\"],value[i]);\n            rooms.push({\n                roomName     : value[i][\"roomName\"],\n                stageId      : value[i][\"stageId\"],\n                madeTime     : d.getFullYear()+'/'+d.getMonth() + 1+'/'+d.getDate(),\n                madeUserName : value[i][\"madeUserName\"],\n                members      : value[i][\"members\"],\n                id           : roomids[i],\n              }\n            )\n          }\n          setRooms(rooms);\n        }\n      });// ...\n    };\n    roomsData();\n  }, []);\n  return (\n    <div id=\"rooms\" className=\"list-group\">\n      {rooms === null && <p>Loading rooms...</p>}\n      {\n        rooms && rooms.map(room => (\n          <li key={room.id} className=\"roomsItem list-group-item d-flex\">\n            <Link to={`/room/${room.id}`}>\n              <h4 >{room.roomName}</h4>\n            </Link>\n            <h4 >作成者：{room.madeUserName}</h4>\n            {console.log(room.madeTime)}\n            <h4 >作成日時：{room.madeTime}</h4>\n            <h4 >メンバー：{room.members.length}人</h4>\n          </li>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Rooms;","/home/vagrant/workspace/qa-app/src/Room/Comments/Comments.js",["186","187","188","189","190"],"import React, {Component,useContext, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport {roomContext} from '../Room';\nimport Icon from '../../IconRender';\nimport {db} from '../../Firebase/Firebase'\nimport './comments.css'\nimport randomMoveTimer from '../../IconRandomMove';\n\nconst iconSize=50;\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('comments-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst Comments=()=>{\n  const {comments,room,members} = useContext(roomContext);\n  var Path = window.location.pathname;\n\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n  return (\n    <div id='comments' className=\"list-group\">\n      {comments && members &&\n        comments.map(comment=>(\n          <div key={comment.id.toString()} className=\"comment list-group-item d-flex\">\n            <div className='iconMask commentIcon'>\n              <Icon iconInfo={members[comment.userId]['iconInfo']} iconSize={iconSize} emotion={comment.emotion} where='comments'/>\n            </div>\n            <div>\n              {console.log(members)}\n              <strong className=\"userName mb-1\" style={{}}>{members[comment.userId]['displayName']}</strong>\n              <h3 className=\"commentContent\" style={{}}>{comment.content}</h3>\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  );\n}\n\nexport default Comments;","/home/vagrant/workspace/qa-app/src/Room/Stages/Stage.js",["191","192","193","194","195"],"\nimport React, {Timestamp,useEffect,useContext,createContext,useState} from 'react';\nimport './stage.css';\nimport Nomal from './Nomal/Nomal';\nimport {roomContext} from '../Room';\nimport {userContext} from '../../App';\nimport firebase , {db} from '../../Firebase/Firebase'\nimport CommentForm from './CommetForm/CommentForm'\nimport SplitPane from 'react-split-pane';\nimport randomMoveTimer from '../../IconRandomMove';\n\n\nconst IconMove=()=>{\n  let timers=[];\n  for(let i=0;i<timers.length;i++){\n    clearInterval(timers[i]);\n  }\n  timers=[];\n  const iconparts=  document.getElementsByClassName('stage-iconparts');\n  for(let i=0;i<iconparts.length;i++){\n    timers.push(randomMoveTimer(iconparts[i],1000));\n  }\n  return timers;\n}\n\nconst stageRadius=600;\nfunction Stage(props){\n  const {userId} = useContext(userContext);\n  const {icons,splitSize,room} = useContext(roomContext);\n  const [newComment,setNewComment] = useState(null);\n  const [emotions,setEmotions] = useState({});\n  const [reActions,setActions] = useState({});\n  const roomId=room['id'];\n\n  useEffect(()=>{\n    async function emotionData(){\n      var now = new Date();\n      var before5min_unix = new Date(now.getTime() - 5000);\n      console.log(before5min_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('emotions').where('timeStamp','>',before5min_unix).onSnapshot(data=> {\n        let value=[];\n        let emoteIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let emotes={};\n        for(let i = 0; i < emoteIds.length; i++){\n          emotes[emoteIds[i]]=value[i]['kind'];\n        }\n        console.log(data,value,emotes,\"ん\");\n        setEmotions(emotes);\n      })\n      return () => emoteUnsubscribe();\n    }\n    async function newCommentData(){\n      var now = new Date();\n      // 6秒以内のnewCommentを取得\n      // 本来は、コメントが増えたタイミングでバックエンドからイベントを起こすようにした方がいいのだろうが、firebaseでは有料だったのでこのように実装\n      var before6sec_unix = new Date(now.getTime() - 6000);\n      const newCommentUnsubscribe = await db.collection('/rooms').doc(roomId).collection('newComment').where('timeStamp','>',before6sec_unix).onSnapshot(data=> {\n        let value=[];\n        let newCommentIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let newComment={};\n        for(let i = 0; i < newCommentIds.length; i++){\n          newComment[newCommentIds[i]]=value[i]['content'];\n        }\n        console.log(data,value,newComment,\"ん\");\n        setNewComment(newComment);\n      })\n      return () => newCommentUnsubscribe();\n    }\n    async function reActionData(){\n      var now = new Date();\n      var before5sec_unix = new Date(now.getTime() - 5000);\n      console.log(before5sec_unix,now);\n      //var before5min = Timestamp(before5min_unix);\n      const emoteUnsubscribe = await db.collection('/rooms').doc(roomId).collection('reActions').where('timeStamp','>',before5sec_unix).onSnapshot(data=> {\n        let value=[];\n        let reActionIds=data.docs.map(doc => \n          doc.id\n        );\n        data.forEach((doc) => {\n          value.push(\n            doc.data()\n          );\n        });\n        let reActionDatas={};\n        for(let i = 0; i < reActionIds.length; i++){\n          if(!reActionDatas[value[i]['to']]){\n            reActionDatas[value[i]['to']]=[];\n          }\n          reActionDatas[value[i]['to']].push({\n            id   : reActionIds[i],\n            name : value[i]['name'],\n            from : value[i]['from'],\n            to   : value[i]['to'],\n          });\n        }\n        console.log(data,value,reActionDatas,\"ん\");\n        setActions(reActionDatas);\n      })\n      return () => emoteUnsubscribe();\n    }\n    emotionData();\n    newCommentData();\n    reActionData();\n  },[])\n  useEffect(()=>{\n    let moveTimer=IconMove();\n    return ()=>{\n      moveTimer.forEach(timer => {\n        clearInterval(timer);\n      });\n    }\n  })\n\n\n  return (\n    <stageContext.Provider value={{newComment,setNewComment,emotions,setEmotions,reActions,setActions}}>\n      <SplitPane split=\"horizontal\" defaultSize={window.innerHeight-171}>\n        <div id=\"stage\" >\n          {console.log(splitSize)}\n          <Nomal stageRadius={stageRadius}/>\n        </div>\n        <CommentForm />\n      </SplitPane>\n    </stageContext.Provider>\n  );\n}\nconst stageContext=createContext([]);\nexport {stageContext};\nexport default Stage;","/home/vagrant/workspace/qa-app/src/Room/Stages/CommetForm/CommentForm.js",["196","197","198","199","200"],"import React, { Component, createContext,useContext,useState,useEffect } from 'react';\nimport {roomContext} from '../../Room';\nimport { stageContext } from '../Stage';\nimport {userContext} from '../../../App';\nimport firebase, {db} from '../../../Firebase/Firebase'\n\n\n\nconst Form=()=>{\n  const {room}=useContext(roomContext);\n  const {emotions,setEmotions}=useContext(stageContext);\n  const {userId,userInfo}=useContext(userContext);\n  useEffect(()=>{\n    // スペースキーが押されたら投稿\n    document.body.addEventListener('keydown',\n    event => {\n      if (event.key === 'Enter' && event.ctrlKey) {\n          commentAPI();\n      }\n    });  \n  },[]);\n\n  // コメント投稿のAPI\n  function commentAPI (){  \n    let content=document.getElementById('inputComment').value;\n    // 0文字より多く、300文字より少なく入力されているなら\n    if(content.length>0&&content.length<=300){\n      let roomId=room['id'];\n      let emotion;\n      if(emotions[userId]){\n        emotion=emotions[userId];  \n      }else{\n        emotion=null;\n      }\n      db.collection('rooms').doc(roomId).collection('comments').add({\n        content   : content,\n        userId    : userId,\n        userName  : userInfo['displayName'],\n        emotion   : emotion,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n      db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).set({\n        content   : content,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      }).then(()=>{\n        // フォームの中身をなくす\n        document.getElementById('inputComment').value='';\n        // 6秒後にステージ用のコメントを消す。\n        setTimeout(function(){\n          db.collection('rooms').doc(room['id']).collection('newComment').doc(userId).delete();\n        }, 6000)}\n      )\n    }\n  }\n  // エモートのAPI\n  const emoteAPI= (e)=>{\n    const emote=e.target.dataset.kind;\n    console.log(emote);\n    if(emote===null){\n      db.collection.doc(room['id']).collection('emotions').doc(userId).delete();\n    }else{\n      db.collection('rooms').doc(room['id']).collection('emotions').doc(userId).set({\n        kind      : emote,\n        timeStamp : firebase.firestore.FieldValue.serverTimestamp()\n      })\n    }\n  }\n\n  return(\n    <div id=\"commentForm\">\n      <div id=\"emotions\">\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"henoheno\">へのへの</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"null\">なし</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"yurei\">ユーレイ</button>\n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"happy\">ニコニコ</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"angry\">怒り</button>  \n        <button className=\"emotoButton\" onClick={emoteAPI} data-kind=\"naki\">泣き</button>  \n      </div>\n      <div className=\"form\">\n        <input id=\"inputComment\" />\n        <button type=\"submit\" maxLength=\"300\" onClick={commentAPI}>投稿</button>\n      </div>\n    </div>\n    )\n}\nexport default Form;","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/StageIcon.js",["201","202"],"import React,{useContext} from 'react';\nimport {userContext} from '../../../App';\nimport {stageContext} from '../Stage';\nimport Icon from '../../../IconRender'\nimport ReActions from './IconAccessory/ReActions'\nimport NewComment from './IconAccessory/NewComment';\nimport ReActionButtons from './IconAccessory/ReActionButtons';\nimport firebase, {db} from '../../../Firebase/Firebase'\nimport './IconAccessory/iconacce.css';\n\nconst StageIcon = (props) => {\n  const {userId} = useContext(userContext);\n  const {emotions,reActions,newComment}=useContext(stageContext);\n\n  return(\n    <div className=\"stageIcon\">\n      {console.log(props.renderInfo)}\n      {props.renderInfo[0] !== userId && // ディスプレイネームを表示\n        <h3 className=\"stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {props.renderInfo[0] === userId && // 自分ならselfMaskクラスを追加したやつを描画\n        <h3 className=\"self-mark stageIcon-displayName icon-acce\">{props.renderInfo[1]['displayName']}</h3>\n      }\n      {newComment===null&&\n        <p className=\"icon-acce\">Loading NewComment...</p>\n      }\n      {newComment!==null&&\n        newComment[props.renderInfo[0]]&& // 新しいコメントがあるなら、新しいコメントを描画\n          <NewComment renderId={props.renderInfo[0]}/>\n      }\n      <Icon iconInfo={props.renderInfo[1]['iconInfo']} iconSize={200} emotion={emotions[props.renderInfo[0]]} where=\"stage\"/> \n      {props.renderInfo[0] !==userId && // 自分でないならアクションのボタンを描画\n        <ReActionButtons renderId={props.renderInfo[0]}/>\n      }\n      {reActions===null&&\n        <p className=\"icon-acce\">Loading Actions...</p>\n      }\n      {reActions!==null&&\n        reActions[props.renderInfo[0]]&&\n          <ReActions renderId={props.renderInfo[0]}/>\n      }\n    </div>\n  );\n}\n\nexport default StageIcon;","/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/NewComment.js",[],"/home/vagrant/workspace/qa-app/src/Room/RoomHeader/RoomHeader.js",["203"],"import React,{ useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport { roomContext } from '../Room';\nimport './roomheader.css'\n\nconst RoomHeader=()=> {\n  const {room}=useContext(roomContext);\n  return (\n    <header id=\"room-header\">\n      <div id=\"room-name\">\n        <strong>{room[\"roomName\"]}</strong>\n\t\t\t</div>\n      <ul id=\"room-info\">\n        <li>参加者：{room[\"members\"].length}</li>\n\t\t\t\t<li> 作成者：{room.madeUserName}</li>\n        <li> 作成日時：{room.madeTime}</li>\n        <li> メンバー：{room.members.length}人</li>\n\t\t\t</ul>\n    </header>\n    );\n}\n\nexport default RoomHeader;\n/*\n<nav className=\"navbar navbar-dark bg-primary fixed-top\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        エモいチャット(仮称)\n      </Link>\n    </nav>\n \n*/","/home/vagrant/workspace/qa-app/src/Room/Stages/Kanran/Kanran.js",["204","205","206"],"\nimport React, {Timestamp,useEffect, useContext} from 'react';\n\nimport './kanran.css';\nimport StageIcon from '../StageIcon/StageIcon'\nimport { roomContext } from '../../Room';\n\nconst stageRadius=150;\nconst pos=[[50,0],[90,50],[50,90],[0,50]];\nfunction Nomal(props){\n  const {members,room} = useContext(roomContext);\n  return (\n    <div id=\"kanransya\">\n      <div id=\"kanran\" className=\"\" style={{\"objectFit\": \"scale-down\"}}>\n        {pos.map((p,index)=>(\n          <div className=\"sya\" key={'sya-'+index} style={{width:'10%',height:'10%',top:p[0]+\"%\",left:p[1]+\"%\",position:'absolute'}}>\n            {console.log(index,room['members'][index],room['members'],members,members[room['members'][index]])}\n            {room['members'].length > index &&\n              <StageIcon renderInfo={[room['members'][index],members[room['members'][index]]]}/>\n            }\n            {room['members'].length <= index &&\n              <h1>車</h1>\n            }\n          </div>\n        \n          ))}\n        </div>\n    </div>\n  );\n}\n\n\nexport default Nomal;\n",["207","208"],"/home/vagrant/workspace/qa-app/src/IconRandomMove.js",[],"/home/vagrant/workspace/qa-app/src/UserSettings/UserSettings.js",["209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"import React, {Component,useContext,createContext,useState,useEffect} from 'react';\nimport { BrowserRouter as Router, Redirect, Route, RouteProps, Switch } from 'react-router-dom';\n\nimport axios from 'axios';\nimport MakeIcon from './UserInfo/MakeIcon/MakeIcon';\nimport {userContext} from '../App'\n\nimport firebase, { db } from '../Firebase/Firebase';  \nimport NoLogin from './NoLogin';\nimport Loggedin from './UserInfo/LoggedIn';\n\nimport './usersettings.css';\n//import logoutFromGoogle from './Logout';\n\n\nconst UserSettings = () =>{\n  const {isOnline,setIsOnline,userId,setUserId,userInfo,setUserInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  return (\n      <div>\n        {isOnline===null &&\n          <p>loading....</p>\n        }\n        {isOnline === true &&\n          <div id=\"settings\">\n            <MakeIcon />\n            <Loggedin />\n          </div>\n        }\n        {isOnline === false &&\n          <NoLogin/>\n        }\n      </div>\n  );\n}\nexport default UserSettings;\n","/home/vagrant/workspace/qa-app/src/UserSettings/NoLogin.js",["224","225"],"import firebase,{db} from '../Firebase/Firebase';\nimport {Redirect} from 'react-router-dom';\nimport {useContext} from 'react';\nimport { setIsFirst, userContext } from '../App';\n\nconst NoLogin=()=>{\n  const {setUserId,setUserName,setIsOnline,isOnline} = useContext(userContext);\n\n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n\n  // ログイン処理\n  const loginWithGoogle = () => {\n    // もうauthにアカウントがあるかとかかな？...\n    setIsFirst(true);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n    .then(function() {\n\n      const provider = new firebase.auth.GoogleAuthProvider();\n\n      // サインインしてもらう\n      firebase.auth().signInWithPopup(provider)\n      .then(async function(result) {\n        await db.collection('/users').where('userId','==',result.user.uid).get().then(function(doc) {\n          console.log(doc);\n          // まだアカウントないなら\n          if (doc.empty) {\n            console.log(\"No user\");\n            db.collection('users').doc(result.user.uid).set({\n              userId      : result.user.uid,\n              displayName : 'ゲスト',\n              oneWord     : '',\n              room        : null,\n              rooms       : [],\n              iconinfo    :({\n                \"face\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"hair\"      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n                \"leftEye\"   : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"rightEye\"  : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"nose\"      : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"mouth\"     : {posX : 0 , posY : 0 , sizeX : 30  , sizeY : 30  , rot : 0 , kind : 'nomal'},\n                \"other\"     : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300  , rot : 0 , kind : 'none'},\n              })\n            }).then(async (doc)=>{\n              await db.collection('users').doc(result.user.uid).collection('seclet').doc(result.user.uid).set({\n                userName : result.user.displayName,\n                email    : result.user.email,\n              }).then(()=>{\n                console.log('login fin');    \n                setIsOnline(true);\n                setUserId(result.user.uid);\n              }).catch((error)=>{\n                db.collection('users').doc(result.user.uid).delete().then(()=>{\n                  logoutFromGoogle();\n                  alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n                  console.log(error);\n                })\n              })\n            }).catch((error)=>{\n              logoutFromGoogle();\n              alert('エラーが発生しました、もう一度ログインをお願いします。Error:'+error);\n              console.log(error);\n            })\n          }else{\n            setIsOnline(true);\n            setUserId(result.user.uid);\n          }\n        })\n        .catch(function(error) {\n          console.log(\"Error : \", error);\n        });\n      }.bind(this))\n        .catch(function(error) {\n          alert(\"Googleでサインインできませんでした。 Error: \" , error);\n          console.log(error);\n          return false;\n        }\n      );\n    }.bind(this));\n  }\n  \n  return(\n    <div>\n      {isOnline === true &&\n        <div>\n          ログインしました！\n          <Redirect to = \"/userSetting\"/>\n        </div>\n      }\n      {isOnline === false &&\n        <div>\n          ログインしていません\n          <button onClick = {loginWithGoogle}>\n            Googleでログイン\n          </button>\n        </div>\n      }\n      {isOnline === null &&\n        <>loading aouth...</>\n      }\n    </div>\n    \n  )\n}\n\nexport default NoLogin;","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/LoggedIn.js",["226","227","228","229","230","231"],"import firebase,{db} from '../../Firebase/Firebase';\nimport {userContext} from '../../App';\nimport {useContext,useEffect,useState} from 'react';\nimport { SettingContext } from '../UserSettings';\nimport { Redirect } from 'react';\nimport { GetImgsInfoAllAll } from './MakeIcon/IconData';\n//import logoutFromGoogle from '../Logout';\nimport './loggedIn.css'\n\nconst Loggedin=()=>{\n  const {setIsOnline , isOnline , setUserId , userId ,userInfo} = useContext(userContext);\n  \n  const logoutFromGoogle = () => { \n    firebase.auth().signOut();\n    setIsOnline(false);\n    setUserId(null);\n  }\n\n  const changeInfoAPI = () =>{\n    if(document.getElementById('save-button').classList.contains('active')){\n      const newDisplayName = document.getElementById('displayName-input').value;\n      const newOneWordName = document.getElementById('oneWord-input').value;\n      db.collection('users').doc(userId).update({\n        displayName : newDisplayName,\n        oneWord     : newOneWordName,\n      }).then((doc)=>{\n        let value=GetImgsInfoAllAll();\n        db.collection('users').doc(userId).update({\n          iconinfo:value\n        }).then(()=>{\n          document.location.reload();\n        }).catch(error => {\n          // error\n          console.log(error)\n        });\n      }).catch((error)=>{\n        logoutFromGoogle();\n        alert('エラーが発生しました。申し訳ありませんが、もう一度ログインをお願いします。Error:'+error);\n        console.log(error);\n      })\n    }\n  }\n\n  return(\n    <div>\n      {userInfo===null&&\n        <p>Loading userInfo...</p>\n      }\n      {userInfo&&\n        <div>\n          <ul>\n            <li><h4>表示名</h4><input id=\"displayName-input\" type=\"text\" maxLength=\"15\" defaultValue={userInfo['displayName']} \n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></li>\n            <li><h4>ひとこと</h4><h3><input id=\"oneWord-input\" type=\"text\" maxLength=\"30\" defaultValue={userInfo['oneWord']}\n            onChange={()=>{\n              document.getElementById('save-button').classList.add('active')\n            }}></input></h3></li>\n            <li><h4>名前</h4><h3>{userInfo['userName']}</h3></li>\n            <li><h4>メールアドレス</h4><h3>{userInfo['email']}</h3></li>\n            <li><h4>Googleでログインしています</h4><button onClick = {logoutFromGoogle}>ログアウト</button></li>\n          </ul>    \n          <a id=\"save-button\" onClick = {changeInfoAPI} >変更を保存</a>\n        </div>\n      }\n    </div>\n  )\n}\n\n\nexport default Loggedin;","/home/vagrant/workspace/qa-app/src/UserSettings/logout.js",["232","233","234","235","236","237","238"],"/home/vagrant/workspace/qa-app/src/UserSettings/Logout.js",["239","240","241","242"],"/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/ReActionButtons.js",[],["243","244"],"/home/vagrant/workspace/qa-app/src/Room/Stages/StageIcon/IconAccessory/ReActions.js",[],"/home/vagrant/workspace/qa-app/src/Error/Error.js",[],"/home/vagrant/workspace/qa-app/src/Room/Stages/Nomal/Nomal.js",["245","246"],"\nimport React, {Timestamp,useEffect, useContext} from 'react';\n\nimport './nomal.css';\nimport StageIcon from '../StageIcon/StageIcon'\nimport { roomContext } from '../../Room';\n\nfunction Nomal(props){\n  const {members,room} = useContext(roomContext);\n\n  return (\n    <div id=\"nomal\">\n      {Object.keys(members).map((m,index)=>(\n        <div key={'icondiv'+index} className='icondiv'>\n          <StageIcon renderInfo={[room['members'][index],members[room['members'][index]]]}/>\n        </div>\n      ))\n      }\n    </div>\n  );\n}\n\n\nexport default Nomal;\n\n","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/MakeIcon.js",["247","248","249","250","251","252","253","254"],"import React, {createContext, useContext, useState, useEffect} from 'react';\n//import {Link} from 'react-router-dom';\nimport axios from 'axios';\nimport './makeIcon.css'\nimport {GetImgsInfoAllAll, GetImgsInfoEach, GetPartsAll, GetRotMax, GetRotMin, GetRotNow, GetSizeMax, GetSizeMin, GetSizeXNow, SetImgsInfoAll, SetImgsInfoAllAll, SetRotNow, SetSizeNowAll, SetSizeXYNow} from './IconData';\nimport firebase,{db} from '../../../Firebase/Firebase'\nimport {userContext} from '../../../App';\nimport PartsSelect from './PartsSelect/PartsSelect';\n\nconst imgPath='./images/icon/';\n\nconst MakeIcon =()=> {\n  const [ nowKind , setNowKind ] = useState('nomal'); \n  const [ nowName , setNowName ] = useState('leftEye');\n  const [ nowSize , setNowSize ] = useState(30);\n  const [ nowRot  , setNowRot  ] = useState(0);\n \n  const {userInfo}=useContext(userContext);\n\n  useEffect(()=>{\n    if(userInfo){\n      // 今のアイコンの情報を描画したりデータにセットしたり。\n      SetImgsInfoAllAll(userInfo['iconinfo']);\n      Object.entries(userInfo['iconinfo']).forEach(partInfo => {\n        console.log(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[0],partInfo[1]['rot'])\n        SetSizeXYNow(partInfo[0],partInfo[1]['sizeX'],partInfo[1]['sizeY']);\n        SetRotNow(partInfo[0],partInfo[1]['rot']);\n        let img=document.getElementById(partInfo[0]+'Img');\n        if(!img){\n          img = document.createElement('img');\n          img.classList.add('set-image');\n          img.classList.add(partInfo[0]);\n          img.id=partInfo[0]+'Img';\n        }\n        attach(img,partInfo[1]['sizeX'],partInfo[1]['sizeY'],partInfo[1]['posX'],partInfo[1]['posY'],partInfo[1]['rot'],partInfo[1]['kind'],partInfo[0]);});\n    }\n  },[userInfo])\n\n  // マウスが動いた時に画像を追従させる関数\n  const mouthmove = e =>{\n    // マウスの位置ー画像のサイズの半分で計算。\n    let mouseX = e.clientX-Math.floor(nowSize/2);\n    let mouseY = e.clientY-Math.floor(nowSize/2);\n    // 無限にレンダーがかかりそうなのでここはステートを使ってない\n    document.getElementById('traceImage').style.top  = mouseY + 'px';\n    document.getElementById('traceImage').style.left = mouseX + 'px';\n  }\n\n\n  // 画像を配置する関数\n  const attachByClick = e =>{\n    inputSizeSet();\n    inputRotSet();\n    let img=document.getElementById(nowName+'Img');\n    if(!img){\n      img = document.createElement('img');\n      img.classList.add('set-image');\n      //img.classList.add(nowName+'_'+nowKind);\n      img.classList.add(nowName+'Img');\n      img.id=(nowName);\n    }\n    let clientRect = document.getElementById('icon-space').getBoundingClientRect() ;\n\n    let px = window.pageXOffset + clientRect.left ;\n\n    // ページの上端から、要素の上端までの距離\n    let py = window.pageYOffset + clientRect.top ;\n    let mouseX =e.clientX;\n    let mouseY =e.clientY;\n\n    let x = mouseX-px-Math.floor(document.getElementById('sizeInput').value / 2);\n    let y = mouseY-py-Math.floor(document.getElementById('sizeInput').value / 2);\n    attach(img,document.getElementById('sizeInput').value,document.getElementById('sizeInput').value,x,y,document.getElementById('rotInput').value,nowKind,nowName)\n    document.getElementById('save-button').classList.add('active')\n  }\n  const attach=(img,sizex,sizey,x,y,rot,kind,name)=>{\n    img.src             = imgPath + kind + '_' + name + '.png';\n    img.style.width     = sizex + 'px';\n    img.style.height    = sizey + 'px';\n    img.style.position  = 'absolute';\n    img.style.left      = x + 'px';\n    img.style.top       = y + 'px';\n    img.style.transform = 'rotate('+rot+'deg)';\n    let values={\n      posX  : x     ,\n      posY  : y     ,\n      sizeX : sizex ,\n      sizeY : sizey ,\n      rot   : rot   ,\n      kind  : kind\n    };\n    document.getElementById('icon-space').appendChild(img);\n    SetImgsInfoAll(name,values);\n  }\n\n\n\n  // \n  const tracehide=()=>{\n    document.getElementById('traceImage').style.display = 'none';\n  }\n\n  function traceshow(){\n    document.getElementById('traceImage').style.display = 'block';\n  }\n\n  \n\n\n  let sizeTimer;\n  const sizeChange = (e) => {\n    if(sizeTimer){\n      clearTimeout(sizeTimer);\n    }\n    sizeTimer = setTimeout(inputSizeSet, 1000);\n      \n\n//      document.getElementById('traceImage').style.width = e.target.value+'px';\n//      document.getElementById('traceImage').style.height = e.target.value+'px';\n  }\n\n  let rotTimer;\n  const rotChange = (e) => {\n    if(rotTimer){\n      clearTimeout(rotTimer);\n    }\n\n    rotTimer = setTimeout(inputRotSet, 1000);\n      //document.getElementById('traceImage').style.transform ='rotate(' +e.target.value+'deg)';\n  }\n\n  // 回転をmaxminとかいい感じにてくれる関数\n  const inputRotSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input    = document.getElementById('rotInput');\n    let inputRot = input.value;\n    let nextRot;\n    let maxRot   = GetRotMax(name);\n    let minRot   = GetRotMin(name);\n\n    if(maxRot < inputRot){\n      nextRot=maxRot\n    }else if(minRot > inputRot){\n      nextRot=minRot\n    }else{\n      nextRot=inputRot\n    }\n    SetRotNow(name , nextRot);\n    setNowRot(nextRot);\n    input.value=nextRot;\n  }\n  // サイズをmaxminとかいい感じにてくれる関数\n  const inputSizeSet=(name)=>{\n    if(!name){\n      name=nowName;\n    }\n    let input     = document.getElementById('sizeInput');\n    let inputSize = input.value;\n    let nextSize;\n    let maxSize   = GetSizeMax(name);\n    let minSize   = GetSizeMin(name);\n    \n    if(maxSize < inputSize){\n      nextSize = maxSize\n    }else if(minSize > inputSize){\n      nextSize = minSize;\n    }else{\n      nextSize = inputSize;\n    }\n    SetSizeXYNow(name , nextSize , nextSize);\n    setNowSize(nextSize);\n    input.value=nextSize;\n  }\n\n  const {userId} = useContext(userContext);\n    return (\n      <div id=\"makeIcon\">\n        {userInfo===null&&\n          <p>loading infos...</p>\n        }\n        {userInfo!==null&&\n          <makeIconContext.Provider value = {{nowKind , setNowKind , nowName , setNowName , nowSize , setNowSize , nowRot , setNowRot}}>\n          <div  id = \"icon-space\" className=\"iconMask\"  onMouseMove = {mouthmove}  onMouseLeave = {tracehide}  onMouseEnter = {traceshow}  onClick = {attachByClick} />\n          {console.log(imgPath + nowKind + nowName + \"png\")}\n          <img  id = \"traceImage\"  src = { imgPath + nowKind + \"_\" + nowName + \".png\" }  style = {{ height : nowSize + \"px\" , width : nowSize + \"px\", zIndex : \"100\", position : \"absolute\", display : \"none\", cursor : \"none\", pointerEvents : \"none\",transform : \"rotate(\" + nowRot + \"deg)\" }}>\n          </img>\n          <div>\n            回転\n            <input  type = \"number\"  id = \"rotInput\"  onInput = {rotChange}   min = {GetRotMin(nowName)}  max = {GetRotMax(nowName)} defaultValue = \"0\"></input>\n            サイズ\n            <input  type = \"number\"  id = \"sizeInput\"  onInput = {sizeChange}  min = {GetSizeMin(nowName)}  max = {GetSizeMax(nowName)}  defaultValue = \"30\"></input>\n          </div>\n          <div  id = \"name-buttons\" className=\"\">\n          {Object.entries(GetPartsAll()).map((value) => (\n            <button  key = {value[0]}  className = {value[0]+\" \"+\"iconNameButton btn-border_buttom\"}  data-name = {value[0]}  \n              onClick = {(e)=>{\n                document.getElementsByClassName('iconNameButton').forEach(activeElement => {\n                  if(activeElement.classList.contains('active')){\n                    activeElement.classList.remove('active');\n                  }\n                });\n                e.target.classList.add('active');\n                setNowName(e.target.dataset.name);\n                setNowKind(GetImgsInfoEach(e.target.dataset.name,'kind'));\n                document.getElementById('sizeInput').value=GetSizeXNow(e.target.dataset.name);\n                document.getElementById('rotInput').value=GetRotNow(e.target.dataset.name);\n                inputSizeSet(e.target.dataset.name);\n                inputRotSet(e.target.dataset.name);\n              }}\n            >{value[1][\"displayName\"]}</button>\n          ))}\n          </div>\n          <PartsSelect />\n          </makeIconContext.Provider>\n          }\n      </div>\n    )\n}\nconst makeIconContext = createContext([])\nexport {makeIconContext};\nexport default MakeIcon;","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/IconData.js",["255"],"// パーツボタンの情報ズ。一応拡張性のためにKindsの中身2次元連想配列(？)にしてるけどいらないかも。\nconst partsData=\n{ \n  'face'      : { displayName : '顔'   , Kinds : {'henoheno' : {displayKind : 'じ'}, 'nomal' : {displayKind : 'フツー'} ,'monster' : {displayKind : '化物'},'komugi' : {displayKind : '小麦色'},'maru' : {displayKind : 'まる'} }} ,\n  'hair'      : { displayName : '髪'   , Kinds : { 'none' : {displayKind : 'なし'}   ,'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ケモミミ'},'tyuni' : {displayKind : '厨二'} ,'kaku' : {displayKind : 'カクガリ'}} } ,\n  'leftEye'   : { displayName : '左目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'rightEye'  : { displayName : '右目' , Kinds : { 'henoheno' : {displayKind : 'への'},'no' : {displayKind : 'の'} ,'cat' : {displayKind : 'ねこ'},'red' : {displayKind : '紅'},'blue' : {displayKind : '蒼'} ,'tyome' : {displayKind : 'コメ'}}} ,\n  'nose'      : { displayName : '鼻'   , Kinds : { 'henoheno' : {displayKind : 'も'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : '逆三角'},'pig' : {displayKind : 'ぶたっぱな'} } },\n  'mouth'     : { displayName : '口'   , Kinds : { 'henoheno' : {displayKind : 'へ'},'nomal' : {displayKind : 'フツー'} ,'cat' : {displayKind : 'ダブリュー'},'fang' : {displayKind : '牙'},'tooth' : {displayKind : '歯'} }} ,\n  'other'     : { displayName : 'その他', Kinds : { 'none' : {displayKind : 'なし'}, 'hige' : {displayKind : 'ひげ'},'hige' : {displayKind : 'ひげ'},'horns' : {displayKind : 'ツノ'} ,'glasses' : {displayKind : 'めがね'},'henoheno' : {displayKind : 'へのへの'} }} ,\n}\nfunction GetPartsAll(){\n  return partsData;\n}\nfunction GetPartsData(partsName) {\n  return partsData[partsName];\n}\nfunction GetPartsKinds(partsName) {\n  console.log(partsName)\n  return partsData[partsName]['Kinds'];\n}\n// これがデータベースに保存される。今の値。stateが読み込まれたとき自動で上書きされてる。\nlet imgsInfo={\n  'face'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'hair'      : {posX : 0 , posY : 0 , sizeX : 300 , sizeY : 300 , rot : 0 , kind : 'nomal'},\n  'leftEye'   : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'rightEye'  : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'nose'      : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'mouth'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n  'other'     : {posX : 0 , posY : 0 , sizeX : 50  , sizeY : 50  , rot : 0 , kind : 'nomal'},\n};\nfunction GetImgsInfoEach(partsName,eachPram) {\n  return imgsInfo[partsName][eachPram];\n}\nfunction GetImgsInfoAll(partsName) {\n  return imgsInfo[partsName];\n}\nfunction GetImgsInfoAllAll() {\n  return imgsInfo;\n}\nfunction SetImgsInfoEach(partsName,eachPram,value) {\n  imgsInfo[partsName][eachPram]=value;\n}\nfunction SetImgsInfoAll(partsName,values) {\n  imgsInfo[partsName]=values;\n}\nfunction SetImgsInfoAllAll(values) {\n  imgsInfo=values;\n}\n\n// サイズの上限下限の設定\nconst partsSizeMaxMin={\n  'face'      : {max : 350 , min : 200 },\n  'hair'      : {max : 350 , min : 200 },\n  'leftEye'   : {max : 70  , min : 15  },\n  'rightEye'  : {max : 70  , min : 15  },\n  'mouth'     : {max : 100 , min : 15  },\n  'nose'      : {max : 100 , min : 15  },\n  'other'     : {max : 400 , min : 30  },\n};\nfunction GetSizeMax(partsName) {\n  return partsSizeMaxMin[partsName]['max'];\n}\nfunction GetSizeMin(partsName) {\n  return partsSizeMaxMin[partsName]['min'];\n}\nfunction GetSizeMaxMin(partsName) {\n  return partsSizeMaxMin[partsName];\n}\n\n// パーツの現在の大きさ。\nlet partsSizeNow={\n  'face'      : {sizeX : 300 , sizeY : 300 },\n  'hair'      : {sizeX : 300 , sizeY : 300 },\n  'leftEye'   : {sizeX : 30  , sizeY : 30  },\n  'rightEye'  : {sizeX : 30  , sizeY : 30  },\n  'mouth'     : {sizeX : 40  , sizeY : 40  },\n  'nose'      : {sizeX : 40  , sizeY : 40  },\n  'other'      : {sizeX : 300  , sizeY : 300  },\n}\nfunction GetSizeXYNow(partsName) {\n  return partsSizeNow[partsName];\n}\nfunction GetSizeXNow(partsName) {\n  console.log(partsName,partsSizeNow[partsName]['sizeX']);\n  return partsSizeNow[partsName]['sizeX'];\n}\nfunction GetSizeYNow(partsName) {\n  return partsSizeNow[partsName]['sizeY'];\n}\nfunction SetSizeXYNow(partsName,sizeX,sizeY) {\n  partsSizeNow[partsName]={sizeX : sizeX , sizeY : sizeY };\n}\nfunction SetSizeXNow(partsName,sizeX) {\n  partsSizeNow[partsName]['sizeX'] = sizeX;\n}\nfunction SetSizeYNow(partsName,sizeY) {\n  partsSizeNow[partsName]['sizeY'] = sizeY;\n}\n\n// パーツの回転の上限下限、今のところ意味ない\nconst partsRotMaxMin={\n  'face'      : {max : 360 , min : 0 ,},\n  'hair'      : {max : 360 , min : 0 ,},\n  'leftEye'   : {max : 360 , min : 0 ,},\n  'rightEye'  : {max : 360 , min : 0 ,},\n  'mouth'     : {max : 360 , min : 0 ,},\n  'nose'      : {max : 360 , min : 0 ,},\n  'other'     : {max : 360 , min : 0 ,},\n};\nfunction GetRotMax(partsName) {\n  return partsRotMaxMin[partsName]['max'];\n}\nfunction GetRotMin(partsName) {\n  return partsRotMaxMin[partsName]['min'];\n}\nfunction GetRotMaxMin(partsName) {\n  return partsRotMaxMin[partsName];\n}\n\n// パーツの現在の角度\nlet partsRotNow={\n  'face'      : 0,\n  'hair'      : 0,\n  'leftEye'   : 0,\n  'rightEye'  : 0,\n  'mouth'     : 0,\n  'nose'      : 0,\n  'other'      : 0,\n}\nfunction GetRotNow(partsName) {\n  return partsRotNow[partsName];\n}\nfunction SetRotNow(partsName,value) {\n  console.log(value);\n  partsRotNow[partsName]=value;\n}\n\nexport {\n  GetPartsAll,GetPartsData,GetPartsKinds,\n  GetImgsInfoAllAll,GetImgsInfoAll,GetImgsInfoEach,SetImgsInfoAllAll,SetImgsInfoAll,SetImgsInfoEach,\n  GetSizeXYNow,GetSizeYNow,GetSizeXNow,SetSizeXYNow,SetSizeYNow,SetSizeXNow,\n  GetSizeMax,GetSizeMin,GetSizeMaxMin,\n  GetRotNow,SetRotNow,\n  GetRotMax,GetRotMin,GetRotMaxMin,\n}","/home/vagrant/workspace/qa-app/src/UserSettings/UserInfo/MakeIcon/PartsSelect/PartsSelect.js",["256","257","258","259"],"import React, { useState, useContext  } from 'react';\nimport { act } from 'react-dom/test-utils';\nimport {GetPartsKinds} from '../IconData';\nimport {makeIconContext} from '../MakeIcon';\nimport '../makeIcon.css'\n\n\nconst PartsSelect=()=>{\n  const {setNowKind,nowKind,nowName} = useContext(makeIconContext);\n\n\n  return(\n    <div id=\"makeIconButtons\" className={nowName+\"button\"}>\n      {console.log(nowName)}\n      {Object.entries(GetPartsKinds(nowName)).map((value)=>(\n        <button \n          key={value[0]} \n          className={value[0]+\" \"+nowName+\" \"+\"iconKindButton btn-text-3d\"} \n          data-name={nowName} data-kind={value[0]}  \n          onClick={(e)=>{\n            setNowKind(e.target.dataset.kind);\n            document.getElementsByClassName('iconKindButton').forEach(activeElement => {\n              if(activeElement.classList.contains('active')){\n                activeElement.classList.remove('active');\n              }\n            });\n            e.target.classList.add('active');\n          }}\n        >{value[1][\"displayKind\"]}</button>\n      ))}\n    </div>\n  )\n}\n//  \n// data-partsName={nowName}\n\nexport default PartsSelect;",{"ruleId":"260","severity":1,"message":"261","line":1,"column":15,"nodeType":"262","messageId":"263","endLine":1,"endColumn":28},{"ruleId":"260","severity":1,"message":"264","line":1,"column":29,"nodeType":"262","messageId":"263","endLine":1,"endColumn":37},{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"270","line":1,"column":27,"nodeType":"262","messageId":"263","endLine":1,"endColumn":35},{"ruleId":"260","severity":1,"message":"271","line":1,"column":51,"nodeType":"262","messageId":"263","endLine":1,"endColumn":61},{"ruleId":"260","severity":1,"message":"272","line":2,"column":27,"nodeType":"262","messageId":"263","endLine":2,"endColumn":33},{"ruleId":"260","severity":1,"message":"273","line":2,"column":52,"nodeType":"262","messageId":"263","endLine":2,"endColumn":62},{"ruleId":"260","severity":1,"message":"274","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":16},{"ruleId":"260","severity":1,"message":"275","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":16},{"ruleId":"260","severity":1,"message":"276","line":9,"column":10,"nodeType":"262","messageId":"263","endLine":9,"endColumn":19},{"ruleId":"260","severity":1,"message":"277","line":11,"column":9,"nodeType":"262","messageId":"263","endLine":11,"endColumn":25},{"ruleId":"278","severity":1,"message":"279","line":69,"column":7,"nodeType":"280","messageId":"281","endLine":69,"endColumn":11,"fix":"282"},{"ruleId":"260","severity":1,"message":"283","line":2,"column":9,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"284","severity":1,"message":"285","line":63,"column":5,"nodeType":"286","endLine":63,"endColumn":15,"suggestions":"287"},{"ruleId":"288","severity":1,"message":"289","line":86,"column":15,"nodeType":"290","endLine":86,"endColumn":105},{"ruleId":"291","severity":1,"message":"292","line":111,"column":17,"nodeType":"290","endLine":111,"endColumn":59},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":1,"column":28,"nodeType":"262","messageId":"263","endLine":1,"endColumn":41},{"ruleId":"260","severity":1,"message":"271","line":1,"column":42,"nodeType":"262","messageId":"263","endLine":1,"endColumn":52},{"ruleId":"260","severity":1,"message":"264","line":1,"column":53,"nodeType":"262","messageId":"263","endLine":1,"endColumn":61},{"ruleId":"293","severity":1,"message":"294","line":42,"column":7,"nodeType":"290","endLine":49,"endColumn":12},{"ruleId":"260","severity":1,"message":"295","line":2,"column":8,"nodeType":"262","messageId":"263","endLine":2,"endColumn":17},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"296","line":2,"column":8,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"260","severity":1,"message":"297","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":12},{"ruleId":"260","severity":1,"message":"298","line":6,"column":10,"nodeType":"262","messageId":"263","endLine":6,"endColumn":20},{"ruleId":"260","severity":1,"message":"299","line":6,"column":22,"nodeType":"262","messageId":"263","endLine":6,"endColumn":26},{"ruleId":"260","severity":1,"message":"300","line":23,"column":10,"nodeType":"262","messageId":"263","endLine":23,"endColumn":18},{"ruleId":"260","severity":1,"message":"301","line":23,"column":26,"nodeType":"262","messageId":"263","endLine":23,"endColumn":34},{"ruleId":"284","severity":1,"message":"302","line":66,"column":5,"nodeType":"286","endLine":66,"endColumn":7,"suggestions":"303"},{"ruleId":"284","severity":1,"message":"304","line":134,"column":6,"nodeType":"286","endLine":134,"endColumn":14,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":166,"column":14,"nodeType":"308","messageId":"281","endLine":166,"endColumn":16},{"ruleId":"260","severity":1,"message":"269","line":1,"column":16,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"309","line":1,"column":45,"nodeType":"262","messageId":"263","endLine":1,"endColumn":52},{"ruleId":"260","severity":1,"message":"296","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":13},{"ruleId":"260","severity":1,"message":"310","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":16},{"ruleId":"260","severity":1,"message":"295","line":5,"column":8,"nodeType":"262","messageId":"263","endLine":5,"endColumn":17},{"ruleId":"260","severity":1,"message":"311","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"312","line":16,"column":13,"nodeType":"262","messageId":"263","endLine":16,"endColumn":24},{"ruleId":"260","severity":1,"message":"269","line":1,"column":16,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"296","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":13},{"ruleId":"260","severity":1,"message":"313","line":6,"column":9,"nodeType":"262","messageId":"263","endLine":6,"endColumn":11},{"ruleId":"260","severity":1,"message":"314","line":26,"column":19,"nodeType":"262","messageId":"263","endLine":26,"endColumn":23},{"ruleId":"260","severity":1,"message":"315","line":27,"column":7,"nodeType":"262","messageId":"263","endLine":27,"endColumn":11},{"ruleId":"260","severity":1,"message":"316","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"310","line":7,"column":8,"nodeType":"262","messageId":"263","endLine":7,"endColumn":16},{"ruleId":"260","severity":1,"message":"317","line":28,"column":10,"nodeType":"262","messageId":"263","endLine":28,"endColumn":16},{"ruleId":"260","severity":1,"message":"318","line":29,"column":10,"nodeType":"262","messageId":"263","endLine":29,"endColumn":15},{"ruleId":"284","severity":1,"message":"304","line":119,"column":5,"nodeType":"286","endLine":119,"endColumn":7,"suggestions":"319"},{"ruleId":"260","severity":1,"message":"269","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":1,"column":28,"nodeType":"262","messageId":"263","endLine":1,"endColumn":41},{"ruleId":"260","severity":1,"message":"264","line":1,"column":53,"nodeType":"262","messageId":"263","endLine":1,"endColumn":61},{"ruleId":"260","severity":1,"message":"320","line":11,"column":19,"nodeType":"262","messageId":"263","endLine":11,"endColumn":30},{"ruleId":"284","severity":1,"message":"321","line":21,"column":5,"nodeType":"286","endLine":21,"endColumn":7,"suggestions":"322"},{"ruleId":"260","severity":1,"message":"310","line":8,"column":8,"nodeType":"262","messageId":"263","endLine":8,"endColumn":16},{"ruleId":"260","severity":1,"message":"313","line":8,"column":19,"nodeType":"262","messageId":"263","endLine":8,"endColumn":21},{"ruleId":"260","severity":1,"message":"283","line":2,"column":9,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"260","severity":1,"message":"316","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"323","line":2,"column":26,"nodeType":"262","messageId":"263","endLine":2,"endColumn":35},{"ruleId":"260","severity":1,"message":"324","line":8,"column":7,"nodeType":"262","messageId":"263","endLine":8,"endColumn":18},{"ruleId":"265","replacedBy":"325"},{"ruleId":"267","replacedBy":"326"},{"ruleId":"260","severity":1,"message":"269","line":1,"column":16,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"261","line":1,"column":37,"nodeType":"262","messageId":"263","endLine":1,"endColumn":50},{"ruleId":"260","severity":1,"message":"264","line":1,"column":51,"nodeType":"262","messageId":"263","endLine":1,"endColumn":59},{"ruleId":"260","severity":1,"message":"323","line":1,"column":60,"nodeType":"262","messageId":"263","endLine":1,"endColumn":69},{"ruleId":"260","severity":1,"message":"272","line":2,"column":27,"nodeType":"262","messageId":"263","endLine":2,"endColumn":33},{"ruleId":"260","severity":1,"message":"327","line":2,"column":35,"nodeType":"262","messageId":"263","endLine":2,"endColumn":43},{"ruleId":"260","severity":1,"message":"328","line":2,"column":45,"nodeType":"262","messageId":"263","endLine":2,"endColumn":50},{"ruleId":"260","severity":1,"message":"273","line":2,"column":52,"nodeType":"262","messageId":"263","endLine":2,"endColumn":62},{"ruleId":"260","severity":1,"message":"329","line":2,"column":64,"nodeType":"262","messageId":"263","endLine":2,"endColumn":70},{"ruleId":"260","severity":1,"message":"296","line":4,"column":8,"nodeType":"262","messageId":"263","endLine":4,"endColumn":13},{"ruleId":"260","severity":1,"message":"313","line":8,"column":20,"nodeType":"262","messageId":"263","endLine":8,"endColumn":22},{"ruleId":"260","severity":1,"message":"317","line":17,"column":31,"nodeType":"262","messageId":"263","endLine":17,"endColumn":37},{"ruleId":"260","severity":1,"message":"301","line":17,"column":48,"nodeType":"262","messageId":"263","endLine":17,"endColumn":56},{"ruleId":"260","severity":1,"message":"330","line":17,"column":57,"nodeType":"262","messageId":"263","endLine":17,"endColumn":68},{"ruleId":"260","severity":1,"message":"331","line":19,"column":9,"nodeType":"262","messageId":"263","endLine":19,"endColumn":25},{"ruleId":"260","severity":1,"message":"332","line":7,"column":20,"nodeType":"262","messageId":"263","endLine":7,"endColumn":31},{"ruleId":"278","severity":1,"message":"279","line":76,"column":9,"nodeType":"280","messageId":"281","endLine":76,"endColumn":13,"fix":"333"},{"ruleId":"260","severity":1,"message":"323","line":3,"column":20,"nodeType":"262","messageId":"263","endLine":3,"endColumn":29},{"ruleId":"260","severity":1,"message":"264","line":3,"column":30,"nodeType":"262","messageId":"263","endLine":3,"endColumn":38},{"ruleId":"260","severity":1,"message":"334","line":4,"column":10,"nodeType":"262","messageId":"263","endLine":4,"endColumn":24},{"ruleId":"260","severity":1,"message":"327","line":5,"column":10,"nodeType":"262","messageId":"263","endLine":5,"endColumn":18},{"ruleId":"260","severity":1,"message":"300","line":11,"column":24,"nodeType":"262","messageId":"263","endLine":11,"endColumn":32},{"ruleId":"288","severity":1,"message":"289","line":64,"column":11,"nodeType":"290","endLine":64,"endColumn":58},{"ruleId":"260","severity":1,"message":"264","line":1,"column":30,"nodeType":"262","messageId":"263","endLine":1,"endColumn":38},{"ruleId":"260","severity":1,"message":"313","line":2,"column":18,"nodeType":"262","messageId":"263","endLine":2,"endColumn":20},{"ruleId":"260","severity":1,"message":"317","line":5,"column":47,"nodeType":"262","messageId":"263","endLine":5,"endColumn":53},{"ruleId":"260","severity":1,"message":"335","line":5,"column":55,"nodeType":"262","messageId":"263","endLine":5,"endColumn":63},{"ruleId":"336","severity":2,"message":"337","line":5,"column":67,"nodeType":"262","endLine":5,"endColumn":77},{"ruleId":"338","severity":2,"message":"339","line":5,"column":78,"nodeType":"262","messageId":"340","endLine":5,"endColumn":89},{"ruleId":"336","severity":2,"message":"341","line":16,"column":3,"nodeType":"262","endLine":16,"endColumn":12},{"ruleId":"260","severity":1,"message":"323","line":1,"column":20,"nodeType":"262","messageId":"263","endLine":1,"endColumn":29},{"ruleId":"260","severity":1,"message":"264","line":1,"column":30,"nodeType":"262","messageId":"263","endLine":1,"endColumn":38},{"ruleId":"260","severity":1,"message":"313","line":3,"column":18,"nodeType":"262","messageId":"263","endLine":3,"endColumn":20},{"ruleId":"336","severity":2,"message":"342","line":5,"column":48,"nodeType":"262","endLine":5,"endColumn":58},{"ruleId":"265","replacedBy":"343"},{"ruleId":"267","replacedBy":"344"},{"ruleId":"260","severity":1,"message":"316","line":2,"column":16,"nodeType":"262","messageId":"263","endLine":2,"endColumn":25},{"ruleId":"260","severity":1,"message":"323","line":2,"column":26,"nodeType":"262","messageId":"263","endLine":2,"endColumn":35},{"ruleId":"260","severity":1,"message":"296","line":3,"column":8,"nodeType":"262","messageId":"263","endLine":3,"endColumn":13},{"ruleId":"260","severity":1,"message":"345","line":5,"column":9,"nodeType":"262","messageId":"263","endLine":5,"endColumn":26},{"ruleId":"260","severity":1,"message":"346","line":5,"column":174,"nodeType":"262","messageId":"263","endLine":5,"endColumn":187},{"ruleId":"260","severity":1,"message":"310","line":6,"column":8,"nodeType":"262","messageId":"263","endLine":6,"endColumn":16},{"ruleId":"260","severity":1,"message":"313","line":6,"column":18,"nodeType":"262","messageId":"263","endLine":6,"endColumn":20},{"ruleId":"260","severity":1,"message":"317","line":177,"column":10,"nodeType":"262","messageId":"263","endLine":177,"endColumn":16},{"ruleId":"293","severity":1,"message":"294","line":187,"column":11,"nodeType":"290","endLine":187,"endColumn":291},{"ruleId":"347","severity":1,"message":"348","line":197,"column":65,"nodeType":"308","messageId":"349","endLine":197,"endColumn":66},{"ruleId":"350","severity":1,"message":"351","line":10,"column":111,"nodeType":"352","messageId":"281","endLine":10,"endColumn":117},{"ruleId":"260","severity":1,"message":"264","line":1,"column":17,"nodeType":"262","messageId":"263","endLine":1,"endColumn":25},{"ruleId":"260","severity":1,"message":"353","line":2,"column":10,"nodeType":"262","messageId":"263","endLine":2,"endColumn":13},{"ruleId":"260","severity":1,"message":"354","line":9,"column":21,"nodeType":"262","messageId":"263","endLine":9,"endColumn":28},{"ruleId":"347","severity":1,"message":"348","line":18,"column":46,"nodeType":"308","messageId":"349","endLine":18,"endColumn":47},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["355"],"no-negated-in-lhs",["356"],"'Component' is defined but never used.","'getState' is defined but never used.","'useContext' is defined but never used.","'Router' is defined but never used.","'RouteProps' is defined but never used.","'Comments' is defined but never used.","'MakeIcon' is defined but never used.","'useWorker' is defined but never used.","'googleauthConfig' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"357","text":"358"},"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["359"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'SplitPane' is defined but never used.","'axios' is defined but never used.","'Icon' is defined but never used.","'Splitpanes' is defined but never used.","'Pane' is defined but never used.","'isOnline' is assigned a value but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'roomId' and 'userId'. Either include them or remove the dependency array.",["360"],"React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["361"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'current' is defined but never used.","'firebase' is defined but never used.","'RoomForm' is defined but never used.","'unsubscribe' is assigned a value but never used.","'db' is defined but never used.","'room' is assigned a value but never used.","'Path' is assigned a value but never used.","'Timestamp' is defined but never used.","'userId' is assigned a value but never used.","'icons' is assigned a value but never used.",["362"],"'setEmotions' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'commentAPI'. Either include it or remove the dependency array.",["363"],"'useEffect' is defined but never used.","'stageRadius' is assigned a value but never used.",["355"],["356"],"'Redirect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'setUserInfo' is assigned a value but never used.","'logoutFromGoogle' is assigned a value but never used.","'setUserName' is assigned a value but never used.",{"range":"364","text":"358"},"'SettingContext' is defined but never used.","'userName' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useContext\" is called in function \"logout\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'userContext' is not defined.","undef","React Hook \"useEffect\" is called in function \"logout\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"useContext\" cannot be called at the top level. React Hooks must be called in a React function component or a custom React Hook function.",["355"],["356"],"'GetImgsInfoAllAll' is defined but never used.","'SetSizeNowAll' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-dupe-keys","Duplicate key 'hige'.","ObjectExpression","'act' is defined but never used.","'nowKind' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2374,2385],"",{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},[3100,3111],"Update the dependencies array to be: [userId, userInfo]",{"range":"375","text":"376"},"Update the dependencies array to be: [roomId, userId]",{"range":"377","text":"378"},"Update the dependencies array to be: [isRoom, roomId]",{"range":"379","text":"380"},"Update the dependencies array to be: [roomId]",{"range":"381","text":"382"},"Update the dependencies array to be: [commentAPI]",{"range":"383","text":"384"},[1931,1941],"[userId, userInfo]",[2394,2396],"[roomId, userId]",[4524,4532],"[isRoom, roomId]",[3961,3963],"[roomId]",[633,635],"[commentAPI]"]